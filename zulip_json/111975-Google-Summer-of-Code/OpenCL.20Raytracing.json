[
    {
        "content": "<p>Hi, I've submitted a patch for CLINE primitive here <a href=\"https://sourceforge.net/p/brlcad/patches/541/\" title=\"https://sourceforge.net/p/brlcad/patches/541/\">https://sourceforge.net/p/brlcad/patches/541/</a> . Please review. I've tested it locally and it is building without error. Also, I saw a bunch of unmerged patches from 2 years back, are they wrong?</p>",
        "id": 192180571,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1585496954
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I've submitted a proposal. Please review and let me know if I can include anything else in it.</p>",
        "id": 192279915,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1585585259
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span>, I had just a look at your proposal. It is a bit short, but this isn't the biggest problem. There is a reason why these primitives aren't yet available with OpenCL. If I understood it right, the main problem is their dynamic size. You should say something about how you plan to overcome this issue.</p>",
        "id": 192283857,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1585586989
    },
    {
        "content": "<p>Thanks for the input <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> . Given tomorrow's deadline for submitting proposal, I'll try to address the issue in it or else will just acknowledge in it while I'll keep working on it later.</p>",
        "id": 192313174,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1585600202
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/192180571\" title=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/192180571\">said</a>:</p>\n<blockquote>\n<p>Hi, I've submitted a patch for CLINE primitive here <a href=\"https://sourceforge.net/p/brlcad/patches/541/\" title=\"https://sourceforge.net/p/brlcad/patches/541/\">https://sourceforge.net/p/brlcad/patches/541/</a> . Please review. I've tested it locally and it is building without error. Also, I saw a bunch of unmerged patches from 2 years back, are they wrong?</p>\n</blockquote>\n<p>Old patches are a combination of mixed priority and other issues that prevented merging the patch (like untested or broken compilation or other problems).  They also take considerable time to review and integrate, so they often sit.  It doesn't typically imply anything.</p>",
        "id": 192347621,
        "sender_full_name": "Sean",
        "timestamp": 1585633822
    },
    {
        "content": "<p>Like Daniel said, the biggest issue <span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> is a lack of detail.  Try to add as much as possible in the time remaining, keep an editable draft handy for discussion.</p>",
        "id": 192347701,
        "sender_full_name": "Sean",
        "timestamp": 1585633958
    },
    {
        "content": "<p>Also, don't forget to submit a final before the deadline, but detail, detail, detail regardless.  Did you test your patch?  Can you show it working?</p>",
        "id": 192349139,
        "sender_full_name": "Sean",
        "timestamp": 1585636011
    },
    {
        "content": "<p>Hi, I didn't get much time to look into this. I've included as much details in the proposal as possible for now and will keep looking into issues later. Hope that is fine.</p>",
        "id": 192412686,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1585671396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> Have you had a chance to sort out any more progress on your proposal or code?</p>",
        "id": 194837170,
        "sender_full_name": "Sean",
        "timestamp": 1587490836
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> ,  I'm currently getting myself familiarised with the mged commands and the primitives getting to know how they work and process.</p>",
        "id": 194949213,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1587569727
    },
    {
        "content": "<p>Hi team, thank you for choosing me as one of the interns. It means a lot to me. Eagerly looking forward to making successful and effective contributions to this community. :)</p>",
        "id": 196268872,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1588656100
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> thank you for all your efforts on the proposal.  few applicants actually followed all of the application criteria this year, so it was good to see you step up and follow through with discussion too.  open source is all about communication.</p>\n<p>on that note, GSoC is different from an internship!  internships come and go.  this is hopefully the beginning of something new and interesting that you'll want to continue with well beyond GSoC, even beyond employment opportunities.  it's the open source way for you to find something that is of interest to you that you want to keep working on.</p>\n<p>glad to have you with us!</p>",
        "id": 196270277,
        "sender_full_name": "Sean",
        "timestamp": 1588658322
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I was wondering if there is any scope to use C++ multi-threading along with OpenCL for these primitives?</p>",
        "id": 197940103,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1589811164
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> no, that's not within scope, but whatever you work on does need to be thread safe.  the opencl codebase you're working already runs in parallel with threading.  you don't need to do anything in that regard.</p>",
        "id": 197980503,
        "sender_full_name": "Sean",
        "timestamp": 1589828156
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> why do you ask?  did you try running in parallel?</p>",
        "id": 197980742,
        "sender_full_name": "Sean",
        "timestamp": 1589828264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> thank you for filling out the wiki and starting a web log -- did you finish all the checklist?</p>",
        "id": 198213529,
        "sender_full_name": "Sean",
        "timestamp": 1589987869
    },
    {
        "content": "<p>Yes, I've finished the checklist. Sorry for the delay in reply, internet services were hit due to supercyclone Amphan here. Everything is normal now.</p>",
        "id": 198532754,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1590235990
    },
    {
        "content": "<p>Regarding the C++ parallel, I'd read this concept earlier, hence I wanted to explore the possible scope for this.</p>",
        "id": 198532882,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1590236088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span>  If you make progress on opencl in other areas quick enough, there will probably be some things you would work on with C++ parallelism.   Where's your project plan at?  We can make sure there is some time allocated to explore this at the end if it's something that interests you a lot.</p>",
        "id": 198540473,
        "sender_full_name": "Sean",
        "timestamp": 1590248189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  I'd be happy to explore that. I've kept some buffer time in my proposed project plan. If all goes well, I'll try to wrap up the OpenCL primitives part in 2 months and dedicate the last month to work on C++ parallelism.  I'll now start working on arbn primitive in the first week as proposed.</p>",
        "id": 198541047,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1590249239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> that sounds good.  Where's your development plan at?  Would you post the link?</p>",
        "id": 198542990,
        "sender_full_name": "Sean",
        "timestamp": 1590252674
    },
    {
        "content": "<p>Sure. <a href=\"https://brlcad.org/wiki/User:Rishabhsuthar32/GSoC20/Project\">https://brlcad.org/wiki/User:Rishabhsuthar32/GSoC20/Project</a> is the proposed plan for now.</p>",
        "id": 198820629,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1590526652
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , did you have a look and review the CLINE primitive patch which I submitted earlier? I'll make the necessary changes, if required.</p>",
        "id": 199613519,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1591187944
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I've submitted the ARBN patch as well. Here is the link : <a href=\"https://sourceforge.net/p/brlcad/patches/543\">https://sourceforge.net/p/brlcad/patches/543</a>. Please review.</p>",
        "id": 199938560,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1591394184
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I was testing the opencl kernel with -z flag. But it seems that after compiling nothing happens, the log prints out raytracing aborted and no rendering is happening.<br>\nFollowing is the commands I used:<br>\nmged&gt; rt -z 1<br>\nand its prints out:<br>\nCompiling OpenCL programs...<br>\nRaytrace aborted.<br>\nCould you please let me know the correct usage of -z flag. I could not find anything much regarding this flag in documentation.</p>",
        "id": 200010425,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1591511269
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> are you on trunk or the ocl branch?</p>",
        "id": 200139531,
        "sender_full_name": "Sean",
        "timestamp": 1591641762
    },
    {
        "content": "<p>I'm not sure the -z flag takes an option.  Specifying it tells rt to use OpenCL during rendering if it was enabled during compile.</p>",
        "id": 200139622,
        "sender_full_name": "Sean",
        "timestamp": 1591641820
    },
    {
        "content": "<p>Ah, looks like it does take an arg, an int that is just set to 1 like you did to turn on opencl.</p>",
        "id": 200139759,
        "sender_full_name": "Sean",
        "timestamp": 1591641878
    },
    {
        "content": "<p>It sounds like something made it stop during the opencl compilation step.  Maybe try with a simpler model or even fewer rt flags if others were specified, or run in GDB debugger to see if you see why it's aborting.</p>",
        "id": 200139876,
        "sender_full_name": "Sean",
        "timestamp": 1591641955
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I am using trunk. I just use -z flag for rendering using opencl and I did build with opencl enabled, I tried this with the simplest model only, on arb8, I was expecting all the primitives which have been previously parallelized should work successfully, but none of them is renders with -z flag. Sure i will try GDB debugger and let you know.</p>",
        "id": 200239142,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1591714066
    },
    {
        "content": "<p>Yeah, a simple arb8 should work.  A generic failure like that could mean almost anything.  Have you confirmed that you have an opencl driver installed and working?</p>",
        "id": 200239339,
        "sender_full_name": "Sean",
        "timestamp": 1591714136
    },
    {
        "content": "<p>Yes opencl works fine on my laptop, I have written some general codes which run fine.</p>",
        "id": 200239649,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1591714248
    },
    {
        "content": "<p>Could you please try rendering any simple primitive on your machine? using the same command which I am using, rt -z 1. It might also be that building BRL-CAD did not catch the opencl driver in my machine, which I will check once again.</p>",
        "id": 200240390,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1591714485
    },
    {
        "content": "<p>yeah, I can check this.  I have to recompile trunk for that.</p>",
        "id": 200241565,
        "sender_full_name": "Sean",
        "timestamp": 1591714875
    },
    {
        "content": "<p>yes please check this whenever you get time, thank you!</p>",
        "id": 200241793,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1591714934
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , did you test rendering using opencl? My build has opencl enabled, but still it doesn't render.</p>",
        "id": 200918096,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1592240908
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>, I have submitted the pipe patch, it was a long one so took some time sorry for the delay and I have already started working on next item in the list. Please let me know if you have tried rendering on your machine. Is there any documentation specific to opencl, which can help me with rendering in opencl.</p>",
        "id": 201762463,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1592936349
    },
    {
        "content": "<p>Great!  I will give it a check here in a bit</p>",
        "id": 201762573,
        "sender_full_name": "Sean",
        "timestamp": 1592936406
    },
    {
        "content": "<p>how're things going? :)</p>",
        "id": 202159079,
        "sender_full_name": "Erik",
        "timestamp": 1593218408
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> Can you write up a summary of all your progress to date?  I'd like to send out an announcement.  If you can show a video render of one of the opencl primitives compared with non-opencl, that would be great to include.  It can be just 1 page on google docs, a pdf, or a blog post, maybe link to it in your log and here so people can read it.</p>\n<p>I'm almost through your patches, so will update you soon on that status.  I have some feedback to give.</p>",
        "id": 202537825,
        "sender_full_name": "Sean",
        "timestamp": 1593588058
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> I have been updating my logs, you can find it here: <br>\n<a href=\"https://brlcad.org/wiki/User:Rishabhsuthar32/GSoC20/Log\">https://brlcad.org/wiki/User:Rishabhsuthar32/GSoC20/Log</a></p>",
        "id": 202771843,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1593757164
    },
    {
        "content": "<p>starting into dsp, neato :) Are there images to share and/or is this close to where I could drop it on some real hw to see if there's a good speed-up? (I seem to have some interesting nvidia stuff handy... can't ask for a100 time for something like this, but heck, v100, sure...)</p>",
        "id": 202802910,
        "sender_full_name": "Erik",
        "timestamp": 1593782388
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> I would really like to see a bit more detail than that.    I can't help you at all when you write \"Worked on...\" though that is good context to start with.  Just need like 3 sentences.  Not just awareness of what you worked on, but what did you get working, what did you not get working.  What you're working on is intrinsically graphical, so it would be good to see a picture or statistic at least once a week.</p>",
        "id": 202804133,
        "sender_full_name": "Sean",
        "timestamp": 1593783239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> got it. Will update the logs accordingly.</p>",
        "id": 202917312,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1593947721
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"103542\">@Erik</span> yeahh, dsp seems to be most challenging till now. I've developed arbn and pipe primitive. Can you give it a try? I wanna know how they perform in that hw. :D I'll send the MR links.</p>",
        "id": 202917553,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1593948065
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"103542\">@Erik</span> <br>\n<a href=\"https://sourceforge.net/p/brlcad/patches/543/\">https://sourceforge.net/p/brlcad/patches/543/</a><br>\n<a href=\"https://sourceforge.net/p/brlcad/patches/545/\">https://sourceforge.net/p/brlcad/patches/545/</a><br>\n<a href=\"https://sourceforge.net/p/brlcad/patches/541/\">https://sourceforge.net/p/brlcad/patches/541/</a></p>",
        "id": 202933340,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1593975009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  I've kept dsp primitive on hold for now. Would want to get hands-on on other primitives to get the ball rolling. I've submitted VOL primitive patch and am working on metaball now. <br>\nLet me know when you review it.</p>",
        "id": 203746227,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1594662379
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  also, I was trying to update the wiki logs but I'm unable to access the website. Is it having some issue?</p>",
        "id": 203748149,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1594663252
    },
    {
        "content": "<p>Yes, <span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> apache crashed for some unknown reason, but it's back up.  keeping an eye on it.  try again?</p>",
        "id": 203760468,
        "sender_full_name": "Sean",
        "timestamp": 1594668957
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> how's it going?  It's time for an in-depth review of where you're at on the project.  Please let me know when you're available.</p>",
        "id": 204669310,
        "sender_full_name": "Sean",
        "timestamp": 1595426545
    },
    {
        "content": "<p>First up on the agenda after updating logs, we can discuss the -z option to make sure opencl compilation is working.  First and foremost, re-run cmake for me and show me the entire cmake output -- if you're on linux, you can save the output to a log file while seeing it output with something like:</p>\n<div class=\"codehilite\"><pre><span></span><code>cmake -DBRLCAD_ENABLE_OPENCL=ON path/to/src 2&gt;&amp;1 | tee cmake.log\n</code></pre></div>",
        "id": 204715969,
        "sender_full_name": "Sean",
        "timestamp": 1595448456
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , good news! I made the -z flag running as expected, finally! I'd to change FindOpenCL.cmake file to ensure it catches the right path of OpenCL in my system. Huhhh. I'll revisit the patches and update them again. Also, will include a documentation around this so that next time someone else doesn't face the same issue. :D</p>",
        "id": 204803280,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1595514024
    },
    {
        "content": "<p>that's great to hear <span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> and yes please do update all the patches now that you can test them to make sure they compile and run.  if you have a change to the cmake file, that'd be a good patch too.</p>",
        "id": 204811192,
        "sender_full_name": "Sean",
        "timestamp": 1595517483
    },
    {
        "content": "<p>your log updates for week 8 look good too, thank you</p>",
        "id": 204811521,
        "sender_full_name": "Sean",
        "timestamp": 1595517562
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  Yeah, will keep the logs in similar format. thanks. <br>\nI wanted to know if there is any predefined file or inputs for rendering VOL primitive. It gets 'segmentation fault' most of the time.</p>",
        "id": 204831974,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1595527411
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , it seems there was a bug in master code itself. None of the previously done primitives were working in OpenCL. It said \"Failed to set OpenCL arguments\". I tried with ELL and ARB8. However, I've resolved the code with immense effort. It was due to a mismatch between uchar2 and uchar3 in different function declaration. They are now rendering fine. I'll include a patch for this.</p>",
        "id": 205151320,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1595874291
    },
    {
        "content": "<p>That is good news!</p>",
        "id": 205151385,
        "sender_full_name": "Sean",
        "timestamp": 1595874324
    },
    {
        "content": "<p>Indeed!</p>",
        "id": 205151585,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1595874424
    },
    {
        "content": "<p>Rishabh, how goes it? Good luck with the metaball primitive?</p>",
        "id": 205375748,
        "sender_full_name": "Erik",
        "timestamp": 1596038096
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"103542\">@Erik</span> Hey, I'm trying to see how can I pass r_min and r_max for metaball primitive or if I can calculate it inside the shot function itself!</p>",
        "id": 205560561,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1596175133
    },
    {
        "content": "<p>Hey, I've added the documentation of the issues I faced in the dev logs. Can you have a look and let me know if anything else should be added for better clarification?</p>",
        "id": 205723036,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1596366676
    },
    {
        "content": "<p>I will take a look later today, thanks!</p>",
        "id": 205763594,
        "sender_full_name": "Sean",
        "timestamp": 1596436783
    },
    {
        "content": "<p>It seems like I missed out on doing \"svn add\" of <a href=\"http://cline_shot.cl\">cline_shot.cl</a> file in cline primitve patch submitted during the GSoC application period. My bad! It is missing from the patch file. Will redo it and test again.</p>",
        "id": 205882635,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1596529021
    },
    {
        "content": "<p>sounds good</p>",
        "id": 205944509,
        "sender_full_name": "Sean",
        "timestamp": 1596566678
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , how can I render CLINE primitive? I can't find any sample fastgen4 file. Is there any documentation around this which can help me?</p>",
        "id": 206075469,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1596660138
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> just run rt to render them.  You’ll of course need to create one.  I don’t think the “in” command will make one, but you should check.  We have some sample fastgen files in the repo (regress or db dir), check them first.</p>",
        "id": 206081154,
        "sender_full_name": "Sean",
        "timestamp": 1596663245
    },
    {
        "content": "<p>As for docs, see <a href=\"https://brlcad.org/~starseeker/cline.pdf\">https://brlcad.org/~starseeker/cline.pdf</a></p>",
        "id": 206081175,
        "sender_full_name": "Sean",
        "timestamp": 1596663258
    },
    {
        "content": "<p>Latest trunk can create a cline object with \"make cline.s cline\"</p>",
        "id": 206081757,
        "sender_full_name": "starseeker",
        "timestamp": 1596663669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> yeah, it worked. thanks! :)</p>",
        "id": 206111470,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1596698742
    },
    {
        "content": "<p>I was using  \"in\" for making all primitives.</p>",
        "id": 206111653,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1596698921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> any idea on how to make vol primitive?</p>",
        "id": 206430670,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597039362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/206430670\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> any idea on how to make vol primitive?</p>\n</blockquote>\n<p>there was a conversation between Sean and Thusal about making a <code>vol</code> in the <a class=\"stream\" data-stream-id=\"104062\" href=\"/#narrow/stream/104062-general\">#general</a>  stream</p>",
        "id": 206432248,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1597041626
    },
    {
        "content": "<p><span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 206437459,
        "sender_full_name": "Thusal Ranawaka",
        "timestamp": 1597047217
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> , let me look into it. :)</p>",
        "id": 206487282,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597079953
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I'm still unable to do printf in _shot functions. I tried both printf and bu_log, nothing worked. Any suggestion on what else should I try?</p>",
        "id": 206865963,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597350150
    },
    {
        "content": "<p>It becomes difficult to debug for the primitives which are compiling error-free for not rendering. I can't understand where is it facing the logical error.</p>",
        "id": 206866105,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597350210
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> ,  I tried with the Superell patch. I'm attaching the .c and .cl renderings. They do not seem exactly the same, is this expected or do I debug it further? <a href=\"/user_uploads/1549/omT8cLhNDUwGKmi6SKmOFIpx/sup_c.png\">sup_c.png</a> <a href=\"/user_uploads/1549/Bg0nGSD8bbW85EgM9dCJSy73/sup_cl.png\">sup_cl.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/omT8cLhNDUwGKmi6SKmOFIpx/sup_c.png\" title=\"sup_c.png\"><img src=\"/user_uploads/1549/omT8cLhNDUwGKmi6SKmOFIpx/sup_c.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/1549/Bg0nGSD8bbW85EgM9dCJSy73/sup_cl.png\" title=\"sup_cl.png\"><img src=\"/user_uploads/1549/Bg0nGSD8bbW85EgM9dCJSy73/sup_cl.png\"></a></div>",
        "id": 207023161,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597499992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207023161\">said</a>:</p>\n<blockquote>\n<p>Hi <span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> ,  I tried with the Superell patch. I'm attaching the .c and .cl renderings. They do not seem exactly the same, is this expected or do I debug it further? <a href=\"/user_uploads/1549/omT8cLhNDUwGKmi6SKmOFIpx/sup_c.png\">sup_c.png</a> <a href=\"/user_uploads/1549/Bg0nGSD8bbW85EgM9dCJSy73/sup_cl.png\">sup_cl.png</a></p>\n</blockquote>\n<p>Neither of those look valid to my eyes.. maybe zoom out more so you can see what's going on?  Try very simple superell parameters.</p>",
        "id": 207082621,
        "sender_full_name": "Sean",
        "timestamp": 1597601756
    },
    {
        "content": "<p>I tried \"in\" command with  input parameters but it fails to make one. It throws in some error wrt major/minor axis. So I did this with \"make\" command in MGED and rendered it. Let me try again.</p>",
        "id": 207110467,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597645586
    },
    {
        "content": "<p>I've also started documenting MGED commands in my wiki logs with simple input parameters for making different primitives. I'll keep on adding as and when I find a command for respective primitive. It might help others who face similar issue in future.</p>",
        "id": 207110511,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597645677
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/206865963\">said</a>:</p>\n<blockquote>\n<p>Hey <span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> , I'm still unable to do printf in _shot functions. I tried both printf and bu_log, nothing worked. Any suggestion on what else should I try?</p>\n</blockquote>\n<p>did you try a simple opencl demo to see if you can get it to print inside a compute kernel?  I would have expected bu_log to give you a compilation error, so that's a very odd if it didn't.</p>",
        "id": 207226644,
        "sender_full_name": "Sean",
        "timestamp": 1597731326
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207110467\">said</a>:</p>\n<blockquote>\n<p>I tried \"in\" command with  input parameters but it fails to make one. It throws in some error wrt major/minor axis. So I did this with \"make\" command in MGED and rendered it. Let me try again.</p>\n</blockquote>\n<p>This implies that the values you used are probably not valid, not in range.  Can search the web to find a set of real parameters that should work.</p>",
        "id": 207226717,
        "sender_full_name": "Sean",
        "timestamp": 1597731399
    },
    {
        "content": "<p>looks like this lets one play interactively: <a href=\"https://www.maplesoft.com/support/help/Maple/view.aspx?path=MathApps/Superellipsoid\">https://www.maplesoft.com/support/help/Maple/view.aspx?path=MathApps/Superellipsoid</a></p>",
        "id": 207226739,
        "sender_full_name": "Sean",
        "timestamp": 1597731449
    },
    {
        "content": "<p>ah, that's only interactive in maple, but there are some actual values there you can try</p>",
        "id": 207226800,
        "sender_full_name": "Sean",
        "timestamp": 1597731486
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207226739\">said</a>:</p>\n<blockquote>\n<p>looks like this lets one play interactively: <a href=\"https://www.maplesoft.com/support/help/Maple/view.aspx?path=MathApps/Superellipsoid\">https://www.maplesoft.com/support/help/Maple/view.aspx?path=MathApps/Superellipsoid</a></p>\n</blockquote>\n<p>Yeah, this should help! Thanks.</p>",
        "id": 207241235,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597744280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207226644\">said</a>:</p>\n<blockquote>\n<p>did you try a simple opencl demo to see if you can get it to print inside a compute kernel?  I would have expected bu_log to give you a compilation error, so that's a very odd if it didn't.</p>\n</blockquote>\n<p>Yeah, I tried that. With printf, it was not able to create context itself. The bu_log did give errors. I imported all the necessary functions in <a href=\"http://common.cl\">common.cl</a> but didn't work.</p>",
        "id": 207242431,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597745294
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/p5x047pyZGwNqK7a5JcsAsfT/sup2_c.png\">sup2_c.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/p5x047pyZGwNqK7a5JcsAsfT/sup2_c.png\" title=\"sup2_c.png\"><img src=\"/user_uploads/1549/p5x047pyZGwNqK7a5JcsAsfT/sup2_c.png\"></a></div>",
        "id": 207305206,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597779378
    },
    {
        "content": "<p>Does this look ok for superell primitive? I did \"az35, el25\" view.</p>",
        "id": 207305287,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597779429
    },
    {
        "content": "<p>I did this via \"make\" command. I'm not yet able to use \"in\" command. I used ell parameters and added 0/1/2 values for n,e parameter in superell but it still gave \"rt_db_external5_to_internal5(superell.s):  unable to import non-BRL-CAD object, major=255 minor=35\" error log.</p>",
        "id": 207305508,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597779533
    },
    {
        "content": "<p>I'm checking now why is it getting 255 as majortype instead of  1 or 9</p>",
        "id": 207305832,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597779687
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I cloned the repository again and started from scratch, superell C rendering worked with parameter values. I don't know why it was not working in my previous repository. Blah.</p>",
        "id": 207449239,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597864251
    },
    {
        "content": "<p>Anyway, I tried with HYP primitive and was able to successfully render both C and CL versions.</p>",
        "id": 207449283,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597864272
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/fImscjjBx-Kpa31r3Nf092MU/hyp_cl.png\">hyp_cl.png</a> <a href=\"/user_uploads/1549/YPjELEm6sNK-lnI3kGWH96yK/hyp_c.png\">hyp_c.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/fImscjjBx-Kpa31r3Nf092MU/hyp_cl.png\" title=\"hyp_cl.png\"><img src=\"/user_uploads/1549/fImscjjBx-Kpa31r3Nf092MU/hyp_cl.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/1549/YPjELEm6sNK-lnI3kGWH96yK/hyp_c.png\" title=\"hyp_c.png\"><img src=\"/user_uploads/1549/YPjELEm6sNK-lnI3kGWH96yK/hyp_c.png\"></a></div>",
        "id": 207449315,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597864288
    },
    {
        "content": "<p>This looks fine, right?</p>",
        "id": 207449332,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597864301
    },
    {
        "content": "<p>I think with the other primitives, I'm facing issue with memory allocation which is not working well. Probably that's why they are not rendering an image in CL versions.</p>",
        "id": 207449434,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597864353
    },
    {
        "content": "<p>Also, did the security certificate of <a href=\"http://brlcag.org\">brlcag.org</a> expire? It is giving me safety warnings while trying to visit.</p>",
        "id": 207449608,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597864447
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> : can you re-render with the light at the same place and pixdiff?</p>",
        "id": 207474414,
        "sender_full_name": "Erik",
        "timestamp": 1597880584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> : ^^ <a href=\"http://brlcad.org\">brlcad.org</a> ssl cert expired on the 18th, re-up!</p>",
        "id": 207474506,
        "sender_full_name": "Erik",
        "timestamp": 1597880658
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"103542\">@Erik</span> dag nab it.. again??!  There's a cron job that runs their updater daily, but it's been not working reliably (usually something in python updates and it stops running).</p>",
        "id": 207474577,
        "sender_full_name": "Sean",
        "timestamp": 1597880748
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> what's the difference between the two hyp rendering's performance?  Can you show me the summary from both their logs (the RTFM lines in particular)?</p>",
        "id": 207474671,
        "sender_full_name": "Sean",
        "timestamp": 1597880824
    },
    {
        "content": "<p>if you're not already, you'll probably want to keep two directories -- one with opencl enabled and one without so you can keep two compiles for comparison.</p>",
        "id": 207474697,
        "sender_full_name": "Sean",
        "timestamp": 1597880860
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207474671\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> what's the difference between the two hyp rendering's performance?  Can you show me the summary from both their logs (the RTFM lines in particular)?</p>\n</blockquote>\n<p><a href=\"/user_uploads/1549/LYFYVdIFecpxgDwQoPvE8J5d/hyplog_cl.png\">hyplog_cl.png</a> <a href=\"/user_uploads/1549/RGd1xQloo8DdpWrYl6apipjy/hyplog_c.png\">hyplog_c.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/LYFYVdIFecpxgDwQoPvE8J5d/hyplog_cl.png\" title=\"hyplog_cl.png\"><img src=\"/user_uploads/1549/LYFYVdIFecpxgDwQoPvE8J5d/hyplog_cl.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/1549/RGd1xQloo8DdpWrYl6apipjy/hyplog_c.png\" title=\"hyplog_c.png\"><img src=\"/user_uploads/1549/RGd1xQloo8DdpWrYl6apipjy/hyplog_c.png\"></a></div>",
        "id": 207552437,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597945609
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207474697\">said</a>:</p>\n<blockquote>\n<p>if you're not already, you'll probably want to keep two directories -- one with opencl enabled and one without so you can keep two compiles for comparison.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> How can I save the logs in a file from MGED terminal?</p>",
        "id": 207552484,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597945635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"103542\">Erik</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207474414\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> : can you re-render with the light at the same place and pixdiff?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"103542\">@Erik</span>  How can I use pixdiff ? I saw this <a href=\"https://brlcad.org/~nouhrasofat/man1/en/pixdiff.php\">https://brlcad.org/~nouhrasofat/man1/en/pixdiff.php</a> but it is not working. I wrote a short python code for pix diff. Both have same size and channels but there are few non zero in b,g,r arrays! Is this fine or are we just trying to verify the intersection points?</p>",
        "id": 207563726,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597951503
    },
    {
        "content": "<p>It says pixdiff is not a command. It needs npm install and couldn't find any other command similar to this!</p>",
        "id": 207563791,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597951549
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/OjdkeSMpy265FKdIWvG5vBUZ/hyp2_cl.png\">hyp2_cl.png</a> <a href=\"/user_uploads/1549/AYqOsiZlQIzmdC0T7FRx2cSK/hyp2_c.png\">hyp2_c.png</a> <a href=\"/user_uploads/1549/dKnSou7-iAXXs4l0gOP0ZVJw/diff.png\">diff.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/OjdkeSMpy265FKdIWvG5vBUZ/hyp2_cl.png\" title=\"hyp2_cl.png\"><img src=\"/user_uploads/1549/OjdkeSMpy265FKdIWvG5vBUZ/hyp2_cl.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/1549/AYqOsiZlQIzmdC0T7FRx2cSK/hyp2_c.png\" title=\"hyp2_c.png\"><img src=\"/user_uploads/1549/AYqOsiZlQIzmdC0T7FRx2cSK/hyp2_c.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/1549/dKnSou7-iAXXs4l0gOP0ZVJw/diff.png\" title=\"diff.png\"><img src=\"/user_uploads/1549/dKnSou7-iAXXs4l0gOP0ZVJw/diff.png\"></a></div>",
        "id": 207565593,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597952479
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"103542\">@Erik</span> Does this work? I did it via python opencv2 library.</p>",
        "id": 207565734,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1597952560
    },
    {
        "content": "<p>there's not a save log option, so you can either run copy-paste or run rt outside mged and redirect output to a file using usual means</p>",
        "id": 207653050,
        "sender_full_name": "Sean",
        "timestamp": 1598026354
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207653050\">said</a>:</p>\n<blockquote>\n<p>there's not a save log option, so you can either run copy-paste or run rt outside mged and redirect output to a file using usual means</p>\n</blockquote>\n<p>Got it. Anyway, did you get a chance to look at the logs I shared? The CPU performance has increased. I used -s2048 flag for heavy rendering.</p>",
        "id": 207735797,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598120174
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , this being the last week of GSoC, I wanted to document this well for future reference. Are there any protocols as to how should I document this or any other last week tasks of GSoC?</p>",
        "id": 207857408,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598282849
    },
    {
        "content": "<p>So if you didn't catch it in that summary there <span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> -- the performance logs you shared show it being 0.3 seconds in non-ocl and 0.02 seconds in ocl mode.  That's more than a 10x improvement</p>",
        "id": 207887014,
        "sender_full_name": "Sean",
        "timestamp": 1598297928
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207563791\">said</a>:</p>\n<blockquote>\n<p>It says pixdiff is not a command. It needs npm install and couldn't find any other command similar to this!</p>\n</blockquote>\n<p>pixdiff is installed in BRL-CAD.... it's in the same dir as mged and rt and company</p>",
        "id": 207887109,
        "sender_full_name": "Sean",
        "timestamp": 1598297992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207857408\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> , this being the last week of GSoC, I wanted to document this well for future reference. Are there any protocols as to how should I document this or any other last week tasks of GSoC?</p>\n</blockquote>\n<p>Yes, you should pull together a final report that shows before and after for all the entities that you got converted, ideally with a picture and performance number for each.  Make sure all your patches work with the latest trunk sources too, just in case something changed recently, and I'll work with you to get it all integrated asap.</p>",
        "id": 207887469,
        "sender_full_name": "Sean",
        "timestamp": 1598298141
    },
    {
        "content": "<p>Should I make the final report in BRL-CAD wiki itself or a Google Doc?</p>",
        "id": 207888062,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598298464
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207887014\">said</a>:</p>\n<blockquote>\n<p>So if you didn't catch it in that summary there <span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> -- the performance logs you shared show it being 0.3 seconds in non-ocl and 0.02 seconds in ocl mode.  That's more than a 10x improvement</p>\n</blockquote>\n<p>Yeah! Also, the pixdiff image I sent, is it expected?</p>",
        "id": 207888210,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598298538
    },
    {
        "content": "<p>Whatever is most comfortable for you is fine for writing it, but the final one should end up on our site so it remains available -- in case you accidentally move/delete the doc from your Google Drive, for example</p>",
        "id": 207888266,
        "sender_full_name": "Sean",
        "timestamp": 1598298575
    },
    {
        "content": "<p>you said you used opencv, not pixdiff right?  I don't know what they do or what routines you used or what their output means without reading up on it more.</p>",
        "id": 207888388,
        "sender_full_name": "Sean",
        "timestamp": 1598298625
    },
    {
        "content": "<p>if that's a pixdiff output, then I can answer the question <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 207888415,
        "sender_full_name": "Sean",
        "timestamp": 1598298645
    },
    {
        "content": "<p>I basically calculated the pixel difference between the two images using opencv. Let me try pixdiff you mentioned.</p>",
        "id": 207888498,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598298690
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/GChEpFxFeKmXYexG_VbxgqFZ/hyp_diff.pix\">hyp_diff.pix</a></p>",
        "id": 207889002,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598298940
    },
    {
        "content": "<p>I used this command: pixdiff file1.pix file2.pix &gt; out.pix</p>",
        "id": 207889013,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598298950
    },
    {
        "content": "<p>It's a 12 mb file! :/</p>",
        "id": 207889034,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598298962
    },
    {
        "content": "<p>pixdiff bytes: 5887661 matching,  887771 off by 1, 5807480 off by many<br>\nThis was the terminal output</p>",
        "id": 207889104,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598298987
    },
    {
        "content": "<p>o.O .. next time run pix-png afterwards <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 207896367,
        "sender_full_name": "Sean",
        "timestamp": 1598302470
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/YofYx-5T7sA7FJY8_HY_9Bkj/file.png\">file.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/YofYx-5T7sA7FJY8_HY_9Bkj/file.png\" title=\"file.png\"><img src=\"/user_uploads/1549/YofYx-5T7sA7FJY8_HY_9Bkj/file.png\"></a></div>",
        "id": 207896525,
        "sender_full_name": "Sean",
        "timestamp": 1598302563
    },
    {
        "content": "<p>Difference in the normal calculation?</p>",
        "id": 207897714,
        "sender_full_name": "starseeker",
        "timestamp": 1598303270
    },
    {
        "content": "<p>Looks like it, maybe.  RGB values on the top face (ocl) go from 117/117/117 to 124/124/124 and on the bottom face (rt) from 110/110/110 to 115/115/115.</p>",
        "id": 207917175,
        "sender_full_name": "Sean",
        "timestamp": 1598319570
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> so the pixdiff image shows where the color values differ by more than 1 value in one or more of the RGB channels.  Most of the pixels are offset in intensity by just a little bit, which implies some calculation is just slightly off.</p>",
        "id": 207917257,
        "sender_full_name": "Sean",
        "timestamp": 1598319647
    },
    {
        "content": "<p>The most important part is that hits vs miss appears to be correct.  It would be informative to compare the same nirt shotline in both to make sure the hits are at least identical.  If they are, it would confirm this is a normal issue.</p>",
        "id": 207917302,
        "sender_full_name": "Sean",
        "timestamp": 1598319718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> for what it's worth, your project is a highlight on our facebook feed tody</p>",
        "id": 207928138,
        "sender_full_name": "Sean",
        "timestamp": 1598336353
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/207917302\">said</a>:</p>\n<blockquote>\n<p>The most important part is that hits vs miss appears to be correct.  It would be informative to compare the same nirt shotline in both to make sure the hits are at least identical.  If they are, it would confirm this is a normal issue.</p>\n</blockquote>\n<p>I'll check and revert with the nirt usage and command.</p>",
        "id": 207934657,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598342778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  I've prepared a rough draft for the report here: <a href=\"https://brlcad.org/wiki/User:Rishabhsuthar32/GSoC20/Report\">https://brlcad.org/wiki/User:Rishabhsuthar32/GSoC20/Report</a> . Can you look into it and suggest any further modifications I should make?</p>",
        "id": 208381235,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598640555
    },
    {
        "content": "<p>I tried out the nirt command. Just to confirm, I used 'nirt' command in the MGED terminal after rendering both C and OpenCL versions. The output was same in  both.</p>",
        "id": 208381376,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598640619
    },
    {
        "content": "<p>I'll  be modifying the ToDo part a bit more with technical details for better clarification.</p>",
        "id": 208381483,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598640681
    },
    {
        "content": "<p>Can you show the output of nirt?  There's different output forms that will print more precision than the default.  Might be needed to detect if they're actually identical.  Post the .g's and I can help take a look at them.</p>",
        "id": 208385406,
        "sender_full_name": "Sean",
        "timestamp": 1598642821
    },
    {
        "content": "<p>Origin (x y z) = (0.00000000 0.00000000 0.00000000)  (h v d) = (0.0000 0.0000 0.0000)<br>\nDirection (x y z) = (-1.00000000 0.00000000 0.00000000)  (az el) = (0.00000000 0.00000000)<br>\n    Region Name               Entry (x y z)              LOS  Obliq_in Attrib<br>\nhyp.s                ( 100.0000    0.0000    0.0000) 200.0000   0.0000</p>",
        "id": 208386277,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598643336
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/61QMivcyfexGqhNzLlwjcFUb/hyp_cl.g\">hyp_cl.g</a> <a href=\"/user_uploads/1549/yWU3eLA7yWPcpjkFNgYNagCY/hyp_c.g\">hyp_c.g</a></p>",
        "id": 208386768,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598643621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> this is what is needed, right? anything else?</p>",
        "id": 208386863,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598643681
    },
    {
        "content": "<p>sort of... is that the c or cl output?  is the other character-for-character identical output?</p>",
        "id": 208469566,
        "sender_full_name": "Sean",
        "timestamp": 1598764973
    },
    {
        "content": "<p>Same output comes for both C and CL .</p>",
        "id": 208481341,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598788000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> so you shot directly down the X axis.  instead can you shoot through one of the upper sides where we know the hits or normals deviate?  If anything, we should be able to see the normal change -- I think you'll have to pick a different nirt output format in order for it to print the normal (see the NIRT guide on <a href=\"http://brlcad.org/wiki/Documentation\">brlcad.org/wiki/Documentation</a> for details and/or nirt -? .. it's the -fmt option)</p>",
        "id": 208513298,
        "sender_full_name": "Sean",
        "timestamp": 1598837283
    },
    {
        "content": "<p>If you run saveview in one, you can then run loadview in the other mged to make sure you're shooting the same ray.</p>",
        "id": 208513307,
        "sender_full_name": "Sean",
        "timestamp": 1598837311
    },
    {
        "content": "<p>Okay, let me check.</p>",
        "id": 208657010,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598948076
    },
    {
        "content": "<p>Origin (x y z) = (0.00000000 0.00000000 0.00000000)  (h v d) = (0.0000 0.0000 0.0000)<br>\nDirection (x y z) = (0.42426407 0.56568542 0.70710678)  (az el) = (-126.86989765 -45.00000000)<br>\n    Region Name               Entry (x y z)              LOS  Obliq_in Attrib<br>\nhyp.s                (-107.7632 -143.6842 -179.6053) 508.0005  70.7960</p>",
        "id": 208720373,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598981268
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I tried via a different angle.</p>",
        "id": 208720425,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598981283
    },
    {
        "content": "<p>I however am not sure the difference b/w c and cl one. Nirt will shoot irrespective of rt is done via c or opencl. How can we ensure it shoots through the cl primitive made?</p>",
        "id": 208720529,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598981348
    },
    {
        "content": "<p>I mean, doing nirt after make command also gives the output, which means it is shooting through the primitive formed. Will it shoot through the rendered primitive as well?</p>",
        "id": 208720698,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1598981421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> oh, that's a good question.  hadn't considered that.</p>",
        "id": 208729531,
        "sender_full_name": "Sean",
        "timestamp": 1598985707
    },
    {
        "content": "<p>does nirt have a -z option?  if not, maybe add one to it as well that makes it enable opencl like rt does</p>",
        "id": 208729640,
        "sender_full_name": "Sean",
        "timestamp": 1598985740
    },
    {
        "content": "<p>it's not a c or cl primitive -- the geometry is one and the same no matter  what.  we're just evaluating that geometry with either c ray tracing or cl ray tracing.</p>",
        "id": 208729774,
        "sender_full_name": "Sean",
        "timestamp": 1598985804
    },
    {
        "content": "<p>my asking you for two .g's was probably misleading in hindsight.  I just wanted to make sure you weren't using different geometry for each.</p>",
        "id": 208729835,
        "sender_full_name": "Sean",
        "timestamp": 1598985836
    },
    {
        "content": "<p>there should be no problem using just one .g file. the questions  we need to confirm is 1) whether the hit point of some random non-axis-aligned ray is identical with -z and without -z and 2) whether the calculated normal is identical with and without -z</p>",
        "id": 208730077,
        "sender_full_name": "Sean",
        "timestamp": 1598985936
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/208729640\">said</a>:</p>\n<blockquote>\n<p>does nirt have a -z option?  if not, maybe add one to it as well that makes it enable opencl like rt does</p>\n</blockquote>\n<p>It doesn't have a -z flag. Yeah, we could add one. Will include this task in final report as well.</p>",
        "id": 208827543,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599055155
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/208730077\">said</a>:</p>\n<blockquote>\n<p>there should be no problem using just one .g file. the questions  we need to confirm is 1) whether the hit point of some random non-axis-aligned ray is identical with -z and without -z and 2) whether the calculated normal is identical with and without -z</p>\n</blockquote>\n<p>without nirt, for now maybe we can compare the view in different angles in c and cl cases. I'll look online if there is any other tool to check this.</p>",
        "id": 208827911,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599055285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> rt might be able to give us what we need since it already has the -z option.  i'm not sure any other tool is going to help as we need it to go through the opencl pipeline which is only accessible through rt currently.</p>",
        "id": 208843637,
        "sender_full_name": "Sean",
        "timestamp": 1599061026
    },
    {
        "content": "<p>rt has ways to shoot just one ray at a time, and we can turn on debugging</p>",
        "id": 208843681,
        "sender_full_name": "Sean",
        "timestamp": 1599061041
    },
    {
        "content": "<p>okay, I figured it out ... I don't use this very often but it should be exactly what we need</p>",
        "id": 208847098,
        "sender_full_name": "Sean",
        "timestamp": 1599062323
    },
    {
        "content": "<p>run this: rt -b \"256 256\" -F/dev/debug -X10</p>",
        "id": 208847119,
        "sender_full_name": "Sean",
        "timestamp": 1599062332
    },
    {
        "content": "<p>that should give a non-cl output, then of course run again with with -z1 to get cl output:  rt -b \"256 256\" -F/dev/debug -X10 -z1</p>",
        "id": 208847329,
        "sender_full_name": "Sean",
        "timestamp": 1599062408
    },
    {
        "content": "<p>we'll want to compare the two outputs</p>",
        "id": 208847369,
        "sender_full_name": "Sean",
        "timestamp": 1599062422
    },
    {
        "content": "<p>actually, lets add the -x4 debug flag too: rt -b \"256 256\" -F/dev/debug -X10 -x4</p>",
        "id": 208847577,
        "sender_full_name": "Sean",
        "timestamp": 1599062496
    },
    {
        "content": "<p>and rt -b \"256 256\" -F/dev/debug -X10 -x4 -z1</p>",
        "id": 208847595,
        "sender_full_name": "Sean",
        "timestamp": 1599062504
    },
    {
        "content": "<p>and just copy paste the whole output of each between two ``` blocks, so it looks like:</p>",
        "id": 208847879,
        "sender_full_name": "Sean",
        "timestamp": 1599062588
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>mged&gt; rt -b &quot;256 256&quot; -F/dev/debug -X10 -x4\nBRL-CAD Release 7.31.0  The BRL-CAD Raytracer RT\n    Sun, 30 Aug 2020 14:34:09 -0400, Compilation 10\n    morrison@agua.local\nBRL-CAD Release 7.31.0  The BRL-CAD Ray-Tracing Library\n    Sun, 30 Aug 2020 14:34:09 -0400, Compilation 10\n    morrison@agua.local\nBRL-CAD Release 7.31.0  The BRL-CAD Numerical Computation Library\n    Sun, 30 Aug 2020 14:34:09 -0400, Compilation 10\n    morrison@agua.local\nBRL-CAD Release 7.31.0  The BRL-CAD Utility Library\n    Sun, 30 Aug 2020 14:34:09 -0400, Compilation 10\n    morrison@agua.local\n\nCompile-time debug symbols are available\nRunning on agua.local\nlibbu bu_debug=x1 &lt;COREDUMP&gt;\nlibrt rt_debug=x4 &lt;SHOOT&gt;\nrt optical_debug=x10 &lt;SHADE&gt;\n/Users/morrison/brlcad.trunk/.build/bin/rt -M -b 256 256 -F/dev/debug -X10 -x4 -u model\nopendb /Users/morrison/brlcad.trunk/.build/test.g;\ntree ;\ndb title:  Untitled BRL-CAD Database\nDIRBUILD: cpu = 0.000275 sec, elapsed = 0.000456 sec\n    parent: 0.0user 0.0sys 0:00real 0% i+d maxrss +pf csw\n  children: 0.0user 0.0sys 0:00real 0% i+d maxrss +pf csw\nAdditional #malloc=244, #free=214, #realloc=14 (30 retained)\n0x109c68030 TOL 5.000000e-04 (sq=2.500000e-07) perp=1.000000e-06, para=9.999990e-01\nBRL-CAD Release 7.31.0  The BRL-CAD Optical Shader Library\n    Sun, 30 Aug 2020 14:34:09 -0400, Compilation 10\n    morrison@agua.local\nAdditional #malloc=2053, #free=5, #realloc=1 (2048 retained)\nGETTREE: cpu = 0.000326 sec, elapsed = 0.000437 sec\n    parent: 0.0user 0.0sys 0:00real 0% i+d maxrss +pf csw\n  children: 0.0user 0.0sys 0:00real 0% i+d maxrss +pf csw\nfb_open(0x7f98edc110d0, &quot;/dev/debug&quot;, 512, 512)\nfb_view(0x7f98edc110d0,  256,  256,    1,    1)\n\n...................Frame     0...................\nPREP: cpu = 0.000128 sec, elapsed = 0.000142 sec\n    parent: 0.0user 0.0sys 0:00real 0% i+d maxrss +pf csw\n  children: 0.0user 0.0sys 0:00real 0% i+d maxrss +pf csw\nAdditional #malloc=1409, #free=1373, #realloc=10 (36 retained)\nNUBSP: 0 cut, 1 box (1 empty)\nTree: 1 solids in 1 regions\nModel: X(-500, 500), Y(-500, 500), Z(-500, 500)\nView: 35 azimuth, 25 elevation off of front view\nOrientation: 0.248097, 0.476591, 0.748097, 0.389435\nEye_pos: 2571.76, 1800.77, 1463.99\nSize: 2000mm\nGrid: (3.90625, 3.90625) mm, (512, 512) pixels\nBeam: radius=1.95312 mm, divergence=0 mm/1mm\nonly pixel 256 256\nMode: scanline-per-CPU buffering\nLighting: Ambient = 40%\n  Implicit light 0: (3887.74, 1501.45, 1886.61), aimed at (0, 0, -1)\n  Implicit light 0: invisible, no shadows, 1 lumens (83%), halfang=180\n\n\n  **********shootray cpu=0  256, 256 lvl=0 a_onehit=-1 (main ray)\n  Pnt (2571.7624676893201467, 1800.767466360870003, 1463.9926030826702572)\n  Dir (-0.74240387650610395465, -0.51983679072568422797, -0.42261826174070005191)\n  BOX #1 interval is 2790.61..4137.59\n  0x109c681d8 BOX Contains 1 primitives (2 alloc), 0 primitives with pieces:\n           min (-500.000000, -500.000000, -500.000000)\n         max (500.000000, 500.000000, 500.000000)\n            sph\n  shooting sph\n  Waiting segs:\n    0x7f98ee016c00: SEG sph (2964.1, 3964.1) st_bit=0 xray#=0\n  ------a_hit()\n    0x7f98edd17750: PT sph (SPH#0) sph (SPH#0) (2964.1, 3964.1)\n      InHIT dist=2964.1 (surf 0)\n     OutHIT dist=3964.1 (surf 0)\n      Primitives: sph,\n      Untrimmed Segments spanning this interval:\n        0x7f98ee016c00: SEG sph (2964.1, 3964.1) st_bit=0 xray#=0\n      Region: /s.r\n  ------\ncolorview calling viewshade\n  viewshade(/s.r)\n   Using &quot;plastic&quot; shader, mfp_inputs=x1 &lt;NORMAL&gt;\n  Surface normal for shader:\n  hit pt: 371.202 259.918 211.309 end pt: 384.061 268.922 218.629\n  Shadeworkbefore mf_render: 0x7ffeeb507538\n   sw_inputs=x9 &lt;HIT,NORMAL&gt; sw_hit.dist:2964.1 @ sw_hit.point(371.202 259.918 211.309)\n   sw_hit.normal(0.742404 0.519837 0.422618)\n   sw_transmit 0.000000\n   sw_reflect 0.000000\n   sw_refract_index 1.000000\n   sw_extinction 0.000000\n   sw_color (1.000000, 0.000000, 0.000000)\n sw_basecolor (1.000000, 0.000000, 0.000000)\n sw_uv  0.000000 0.000000\n   sw_dudv  0.000000 0.000000\n   sw_xmitonly 0\n\n  phong_render\n    shine=10\n    specular=0.699999999999999955591079\n    diffuse=0.2999999999999999888977698\n    transmit=0\n    reflect=0\n    ri=1\n    extinction_per_meter=0\n    emission=0,0,0\n  Shadeworkafter mf_render: 0x7ffeeb507538\n   sw_inputs=x9 &lt;HIT,NORMAL&gt; sw_hit.dist:2964.1 @ sw_hit.point(371.202 259.918 211.309)\n   sw_hit.normal(0.742404 0.519837 0.422618)\n   sw_transmit 0.000000\n   sw_reflect 0.000000\n   sw_refract_index 1.000000\n   sw_extinction 0.000000\n   sw_color (1.086587, 0.444181, 0.444181)\n sw_basecolor (1.000000, 0.000000, 0.000000)\n sw_uv  0.000000 0.000000\n   sw_dudv  0.000000 0.000000\n   sw_xmitonly 0\n\n\n  ----------shootray cpu=0  256, 256 lvl=0 (main ray) HIT ret=1\nSHOT: cpu = 0.000236 sec, elapsed = 0.000306 sec\n    parent: 0.0user 0.0sys 0:00real 0% i+d maxrss +pf csw\n  children: 0.0user 0.0sys 0:00real 0% i+d maxrss +pf csw\nAdditional #malloc=310, #free=300, #realloc=31 (10 retained)\n1 solid/ray intersections: 1 hits + 0 miss\npruned 100.0%:  0 model RPP, 0 dups skipped, 0 solid RPP\nFrame  0:     262144 pixels in      0.00 sec = 1110779661.02 pixels/sec\nFrame  0:          1 rays   in      0.00 sec =      4237.29 rays/sec (RTFM)\nFrame  0:          1 rays   in      0.00 sec =      4237.29 rays/CPU_sec\nFrame  0:          1 rays   in      0.00 sec =      3267.97 rays/sec (wallclock)\n\nif_flush(0x7f98edc110d0)\nfb_close(0x7f98edc110d0)\n</code></pre></div>",
        "id": 208847892,
        "sender_full_name": "Sean",
        "timestamp": 1599062595
    },
    {
        "content": "<p>the most important lines we'll be paying attention to are the Pnt,Dir lines, the InHit,OutHit lines, the hit,end pt shading lines, and the sw_* lines.</p>",
        "id": 208848340,
        "sender_full_name": "Sean",
        "timestamp": 1599062789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I don't see such logs while rendering the OpenCL version</p>",
        "id": 209009710,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599157492
    },
    {
        "content": "<p>can you show me what you're seeing?</p>",
        "id": 209009777,
        "sender_full_name": "Sean",
        "timestamp": 1599157529
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/pI7VFKP2H4_IUhOK3ke_EWn5/logs_cl.png\">logs_cl.png</a> <a href=\"/user_uploads/1549/SriZPWKoFIrHMtm1wGejH_mL/logs_c.png\">logs_c.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/pI7VFKP2H4_IUhOK3ke_EWn5/logs_cl.png\" title=\"logs_cl.png\"><img src=\"/user_uploads/1549/pI7VFKP2H4_IUhOK3ke_EWn5/logs_cl.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/1549/SriZPWKoFIrHMtm1wGejH_mL/logs_c.png\" title=\"logs_c.png\"><img src=\"/user_uploads/1549/SriZPWKoFIrHMtm1wGejH_mL/logs_c.png\"></a></div>",
        "id": 209009859,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599157563
    },
    {
        "content": "<p>well... then I guess we probably have our answer for why the images are different</p>",
        "id": 209010042,
        "sender_full_name": "Sean",
        "timestamp": 1599157642
    },
    {
        "content": "<p>it's apparently not going through liboptical for the lighting, must be doing its own thing</p>",
        "id": 209010093,
        "sender_full_name": "Sean",
        "timestamp": 1599157676
    },
    {
        "content": "<p>I tried with previously merged primitives as well, like ell. Same response.</p>",
        "id": 209010484,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599157840
    },
    {
        "content": "<p>yeah, looks like that's what's going on</p>",
        "id": 209010952,
        "sender_full_name": "Sean",
        "timestamp": 1599158057
    },
    {
        "content": "<p>ideally, the cl version should go through liboptical? what exactly does it do?</p>",
        "id": 209010987,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599158079
    },
    {
        "content": "<p>the code ends up calling clt_frame() which is up in src/librt/primitives/primitive_util.c .. and in there it's doing shading in opencl too</p>",
        "id": 209011004,
        "sender_full_name": "Sean",
        "timestamp": 1599158090
    },
    {
        "content": "<p>ah, there it is</p>",
        "id": 209011317,
        "sender_full_name": "Sean",
        "timestamp": 1599158233
    },
    {
        "content": "<p>src/librt/primitives/rt.cl has a shade_segs() function that is doing something similar, but obviously not identical to what liboptical is doing</p>",
        "id": 209011395,
        "sender_full_name": "Sean",
        "timestamp": 1599158276
    },
    {
        "content": "<p>ohh</p>",
        "id": 209013808,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599159451
    },
    {
        "content": "<p>so what would be the next steps?</p>",
        "id": 209013834,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599159466
    },
    {
        "content": "<p>Well it just means we have a different set of problems :)</p>",
        "id": 209033893,
        "sender_full_name": "Sean",
        "timestamp": 1599169950
    },
    {
        "content": "<p>next step would probably be to teach nirt -z</p>",
        "id": 209033906,
        "sender_full_name": "Sean",
        "timestamp": 1599169961
    },
    {
        "content": "<p>since that way we can get the in/out hit point and normal without involving optics</p>",
        "id": 209033952,
        "sender_full_name": "Sean",
        "timestamp": 1599169993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276372\">@Rishabh Suthar</span> what are your thoughts on turning your GSoC report into a formal write-up report?  If that's something you'd be interested in, I'd be happy to sponsor and help you with getting it submitted to some technical journal interested in OpenCL/GPGPU conversion.</p>",
        "id": 209268147,
        "sender_full_name": "Sean",
        "timestamp": 1599466323
    },
    {
        "content": "<p>Regardless, where do we stand on the other patches -- which ones compile cleanly with OpenCL enabled?</p>",
        "id": 209268188,
        "sender_full_name": "Sean",
        "timestamp": 1599466375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/209268147\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276372\">Rishabh Suthar</span> what are your thoughts on turning your GSoC report into a formal write-up report?  If that's something you'd be interested in, I'd be happy to sponsor and help you with getting it submitted to some technical journal interested in OpenCL/GPGPU conversion.</p>\n</blockquote>\n<p>That'd be indeed be interesting. I've never done this before. Please give me some time while I get back to you on this after clearing out all my upcoming commitments.</p>",
        "id": 209269971,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599467710
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer.20of.20Code/topic/OpenCL.20Raytracing/near/209268188\">said</a>:</p>\n<blockquote>\n<p>Regardless, where do we stand on the other patches -- which ones compile cleanly with OpenCL enabled?</p>\n</blockquote>\n<p>There is one with the bug resolution (551), one with updated FindOpenCL.cmake (549) and the HYP primitive (553) which can be merged in master.</p>",
        "id": 209270104,
        "sender_full_name": "Rishabh Suthar",
        "timestamp": 1599467821
    }
]