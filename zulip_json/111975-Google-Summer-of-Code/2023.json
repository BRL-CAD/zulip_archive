[
    {
        "content": "<p>Are we participating this year too? All seems busy here?</p>",
        "id": 324445273,
        "sender_full_name": "Himanshu",
        "timestamp": 1675003470
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 324445289,
        "sender_full_name": "Himanshu",
        "timestamp": 1675003477
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 324445296,
        "sender_full_name": "Himanshu",
        "timestamp": 1675003479
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 324445297,
        "sender_full_name": "Himanshu",
        "timestamp": 1675003479
    },
    {
        "content": "<p>I’ve been crazy busy since the new year for me which is why I’ve been away of late but finally getting caught up.</p>",
        "id": 326448141,
        "sender_full_name": "Sean",
        "timestamp": 1675800566
    },
    {
        "content": "<p>I did apply for BRL-CAD in anticipation.  We need unto update our project ideas list, check on mentor interests, and touch base with the other orgs to see whom all is participating.</p>",
        "id": 326448317,
        "sender_full_name": "Sean",
        "timestamp": 1675800634
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> Just updated the year in the issues list. <a href=\"https://github.com/opencax/opencax.github.io/pull/5\">https://github.com/opencax/opencax.github.io/pull/5</a></p>",
        "id": 329628559,
        "sender_full_name": "Himanshu",
        "timestamp": 1677128085
    },
    {
        "content": "<p>That's great, thank you <span class=\"user-mention\" data-user-id=\"252475\">@Himanshu Sekhar Nayak</span> !  There's a bit more work to do as FreeCAD is not participating under our umbrella this year, so some updates will need to be made to pull a couple of their org sponsorships.</p>",
        "id": 329637654,
        "sender_full_name": "Sean",
        "timestamp": 1677133989
    },
    {
        "content": "<p>We also need to update our ideas list, identify interested mentors, close out the completed project ideas, and consolidate on new/continuation priority projects.  Love to see more progress on the GUI/API, physically-based rendering, robust export, and performance.</p>",
        "id": 329638032,
        "sender_full_name": "Sean",
        "timestamp": 1677134183
    },
    {
        "content": "<p>I would love to develop again on GUI and try to add or fix feature. But love to see if any other will continue this project this year.</p>",
        "id": 329763539,
        "sender_full_name": "Himanshu",
        "timestamp": 1677169608
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252475\">@Himanshu Sekhar Nayak</span>, I could imagine you being a mentor this year.</p>",
        "id": 329768801,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1677170902
    },
    {
        "content": "<p>Currently I am learning ray tracing and implemented it too. Ray traced a Cornell box and wow <span aria-label=\"ok\" class=\"emoji emoji-1f44c\" role=\"img\" title=\"ok\">:ok:</span> my interest grows more towards game graphics and how the game developers able to implement that. Today, I rendered a sphere using ray marching through the help of SDF and it looks cool. The more I getting to know these, the more it looks interesting.</p>",
        "id": 329775543,
        "sender_full_name": "Himanshu",
        "timestamp": 1677172533
    },
    {
        "content": "<p>Saw 2 projects regarding these. I hope I can contribute these too in future.</p>",
        "id": 329775885,
        "sender_full_name": "Himanshu",
        "timestamp": 1677172629
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/111975-Google-Summer-of-Code/topic/2023/near/329768801\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"252475\">Himanshu Sekhar Nayak</span>, I could imagine you being a mentor this year.</p>\n</blockquote>\n<p>Mentor <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>. I am no good enough I think. But whatever I learned from this organization, yes I can help someone to start only.</p>",
        "id": 329776386,
        "sender_full_name": "Himanshu",
        "timestamp": 1677172771
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252475\">@Himanshu Sekhar Nayak</span> you’ve participated twice now yes?  If so then you’d definitely make a great mentor..</p>",
        "id": 329808516,
        "sender_full_name": "Sean",
        "timestamp": 1677182584
    },
    {
        "content": "<p>You could also do great things on a graphics project, especially if you’re getting into ray tracing</p>",
        "id": 329808626,
        "sender_full_name": "Sean",
        "timestamp": 1677182625
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer-of-Code/topic/2023/near/329808516\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"252475\">Himanshu Sekhar Nayak</span> you’ve participated twice now yes?  If so then you’d definitely make a great mentor..</p>\n</blockquote>\n<p>Twice yes, one gci and second one gsoc.</p>",
        "id": 336378297,
        "sender_full_name": "Himanshu",
        "timestamp": 1677203834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252475\">Himanshu Sekhar Nayak</span> <a href=\"#narrow/stream/111975-Google-Summer-of-Code/topic/2023/near/329776386\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/111975-Google-Summer-of-Code/topic/2023/near/329768801\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"252475\">Himanshu Sekhar Nayak</span>, I could imagine you being a mentor this year.</p>\n</blockquote>\n<p>Mentor <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>. I am no good enough I think. But whatever I learned from this organization, yes I can help someone to start only.</p>\n</blockquote>\n<p>You are member of our community since many years and have seen many parts of the BRL-CAD suite during this time. Not only that you can guide newbies during their first steps, you followed the developer discussions too and got an idea in which directions the development shall go.</p>\n<p>In addition, you will obtain new skills when mentoring. This is not a one-way street. Looking at and understanding other peoples patches will broaden your horizon as well.</p>\n<p>And last but not least: You won't mentor alone but together with an experienced developer. We aim for two mentors per project in general.</p>",
        "id": 336421824,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1677227916
    },
    {
        "content": "<p>Okay, I am in. <span aria-label=\"sunglasses\" class=\"emoji emoji-1f60e\" role=\"img\" title=\"sunglasses\">:sunglasses:</span></p>",
        "id": 336447219,
        "sender_full_name": "Himanshu",
        "timestamp": 1677235250
    },
    {
        "content": "<p>Hi, I noticed we have NURBS editing topic this year, I'm interested in it! I've been working on splines for a few months now, including NURBS intersection, Spline knot subdivision and insert, bounding box, symbolic computation &amp; numerical computation. My doctoral topics in the next few years will also be related research directions. I'm using SISL NURBS lib. I have a lot of experience with NURBS algorithm implementation, but I'm not so familar with GUI development which is also important. Is it possible to join twice? I would love to attend with or without GSOC <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> because I'm interested in concrete industrial implementations of NURBS. I would like to know about and implement newer algorithms in industry softwares.</p>",
        "id": 340286486,
        "sender_full_name": "GregoryLi",
        "timestamp": 1678261178
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"491779\">@GregoryLi</span> Unfortunately, SISL NURBS isn't license compatible with BRL-CAD :-(   My suggestion, if you feel comfortable working with it, would be to keep digging into our boolean evaluation logic for NURBS.  That capability, if we can make it production ready, is a potential game changer for our export capabilities and a number of other very interesting features.</p>\n<p>Another effort in a similar vein is continuing to improve our polygonalization codes for NURBS - we use a variation on the poly2tri code in combination with a variety of custom logic, but our watertight meshing capabilities need work both for speed and robustness (See <a href=\"https://apps.dtic.mil/sti/pdfs/AD1094344.pdf\">https://apps.dtic.mil/sti/pdfs/AD1094344.pdf</a>)</p>\n<p>You'd have to talk to one of the others about what's allowed/not allowed for GSOC - I'm not acting as a mentor this go-around...</p>",
        "id": 340435764,
        "sender_full_name": "starseeker",
        "timestamp": 1678300104
    },
    {
        "content": "<p>This years GSoC rules allow to join twice.</p>\n<p>To understand, what the \"NURBS Editing Support in BRL-CAD\" project idea means, you should go through the mged tutorial. Then, the task would be to create and modify NURBS objects the same way <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 340438338,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1678300823
    },
    {
        "content": "<p>BRL-CAD uses the openNURBS library.</p>",
        "id": 340439052,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1678301051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> <br>\nThanks! I will use openNURBS within BRL-CAD. I will check what has ben implemented in BRL-CAD &amp; openNURBS and what is needed for NURBS.<br>\nI think the \"NURBS Editing Support in BRL-CAD\" project needs mged development much more than NURBS algorithm implement(because openNURBS has done this). Am I right?</p>",
        "id": 340495476,
        "sender_full_name": "GregoryLi",
        "timestamp": 1678324665
    },
    {
        "content": "<p>The right answer is probably yes, even if you don't have to touch the mged code yet. This is because it is only one of many programs build on top of the core libraries. These are the ones you have to work extend. Maybe libbrep and libged? Ideally, you don't have to change the openNURBS library.</p>\n<p>The first step would be to get access to the data structures. The openNURBS library has probably an API for this, but it isn't used on the BRL-CAD side yet. Then, a kind of ASCII serialization would be nice. Having this, you could implement a function in libged, which creates a NURBS from such a string. And so on...</p>",
        "id": 340678199,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1678385143
    },
    {
        "content": "<p>Agreed, you definitely will have to use openNURBS and would likely end up adding command-line editing capabilities in libged and/or librt first, then if there's time you'd be figuring out how to expose editing through a GUI.  Solid polygonal export of NURBS is definitely also needed.  There is/was code that supposedly guarantees they're solid, but it's not been tested, is slower, and I believe is presently #ifdef'd out so it's not even compiled.</p>",
        "id": 340960653,
        "sender_full_name": "Sean",
        "timestamp": 1678480877
    },
    {
        "content": "<p>I checked <a href=\"https://brlcad.org/wiki/NURBS_Editing_Support\">NURBS Editing Support</a> and NURBS curve editing operations in openNURBS and bound NURBS curve operations and openNURBS functions. I found some operations needs to be implemented in BRL-CAD, too.<br>\n<a href=\"/user_uploads/1549/-TRhcE5unNKVfCnKJsiidz0S/image.png\">image.png</a> <br>\nI don't fully understand the specific meaning of some operations so I marked \"?\", we can discuss these specific issues after discussing the whole process :)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/-TRhcE5unNKVfCnKJsiidz0S/image.png\" title=\"image.png\"><img src=\"/user_uploads/1549/-TRhcE5unNKVfCnKJsiidz0S/image.png\"></a></div>",
        "id": 341643764,
        "sender_full_name": "GregoryLi",
        "timestamp": 1678780643
    },
    {
        "content": "<p>Here is a brief work sequence for NURBS editing project. Is my understanding of this project too broad, too narrow or biased?</p>\n<ol>\n<li>wrap up one NURBS editing operation in libged/libbrep.</li>\n<li>add a command-line operation to call this function.</li>\n<li>wrap up other operations and add command-line operations like #1 and #2</li>\n<li>implement NURBS operations which do not exist in openNURBS and add cmd operations.</li>\n<li>If time permits, expose editing through a GUI.</li>\n</ol>",
        "id": 341644631,
        "sender_full_name": "GregoryLi",
        "timestamp": 1678780925
    },
    {
        "content": "<p>I see there are a lot of interesting work to do in BRL-CAD, which is familiar and interesting to me...</p>",
        "id": 341645596,
        "sender_full_name": "GregoryLi",
        "timestamp": 1678781225
    },
    {
        "content": "<p>Number 4. could be a problem, because openNURBS is another project, and maintaining a fork is challenging. Hopefully, it isn't necessary.</p>",
        "id": 341697941,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1678795328
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"595446\">@Mohamed Adel</span>, Welcome to our community. To start, you may look at</p>\n<ul>\n<li><a href=\"#narrow/stream/111975-Google-Summer-of-Code/topic/general/near/339394535\">https://brlcad.zulipchat.com/#narrow/stream/111975-Google-Summer-of-Code/topic/general/near/339394535</a> or</li>\n<li><a href=\"#narrow/stream/104061-announce/topic/Google.20Summer.20of.20Code/near/341623867\">https://brlcad.zulipchat.com/#narrow/stream/104061-announce/topic/Google.20Summer.20of.20Code/near/341623867</a></li>\n</ul>",
        "id": 341813093,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1678804700
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/111975-Google-Summer-of-Code/topic/2023/near/341697941\">said</a>:</p>\n<blockquote>\n<p>Number 4. could be a problem, because openNURBS is another project, and maintaining a fork is challenging. Hopefully, it isn't necessary.</p>\n</blockquote>\n<p>Yeah, maybe we can implement those functions in libbrep/libged? <br>\nFor example, <code>NURBS curve Attach</code> operation doesn't exists in openNURBS, we can implement it in libged based on openNURBS.</p>",
        "id": 341942662,
        "sender_full_name": "GregoryLi",
        "timestamp": 1678845473
    },
    {
        "content": "<p>Just as \" or identifying that the equivalent routine doesn't exist in openNURBS and will need to be implemented\" here <a href=\"https://brlcad.org/wiki/NURBS_Editing_Support\">NURBS Editing Support</a></p>",
        "id": 341942729,
        "sender_full_name": "GregoryLi",
        "timestamp": 1678845512
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"491779\">@GregoryLi</span> functions that opennurbs has in headers but doesn't have the implementation for are typically implemented in libbrep.  Note that those are typically functions that are harder to implement too.  The opennurbs folks remove the hard bits that don't have anything to do with the 3dm file format in order to encourage people to buy their rhinosdk licensing which costs, is not open source.  </p>\n<p>There's actually a project starseeker started some 10+ years ago to address that very issue that is worth studying (called libnurbs).  Looks like someone pulled it over to github: <a href=\"https://github.com/yiskang/libnurbs\">https://github.com/yiskang/libnurbs</a></p>\n<p>Other references worth checking out:  <a href=\"https://www.google.com/search?q=nurbs+editing+site%3Agithub.com&amp;ie=UTF-8&amp;oe=UTF-8#ip=1\">https://www.google.com/search?q=nurbs+editing+site%3Agithub.com&amp;ie=UTF-8&amp;oe=UTF-8#ip=1</a></p>",
        "id": 341971245,
        "sender_full_name": "Sean",
        "timestamp": 1678863280
    },
    {
        "content": "<p>Hii , myself Neeraj Sharma I build the BRLCAD. now I want to go further .</p>",
        "id": 341991458,
        "sender_full_name": "Neeraj Sharma",
        "timestamp": 1678870152
    },
    {
        "content": "<p>Follow rest? <a class=\"stream-topic\" data-stream-id=\"111975\" href=\"/#narrow/stream/111975-Google-Summer-of-Code/topic/general\">#Google Summer of Code &gt; general</a> <span class=\"user-mention\" data-user-id=\"598883\">@Neeraj Sharma</span></p>",
        "id": 342007058,
        "sender_full_name": "Himanshu",
        "timestamp": 1678874528
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"491779\">@GregoryLi</span> the libnurbs \"project\" never came to anything much, mostly due to lack of time...  when it comes to the notion of \"forking\" openNURBS, I agree in principle that it's usually undesirable to do that due to the amount of work involved.  We've not been compelled to thus far.  That said, my sense is that the core parts of openNURBS we need for what we're focused on (opennurbs_brep.h and its friends) haven't changed enormously over the decades.</p>",
        "id": 342095061,
        "sender_full_name": "starseeker",
        "timestamp": 1678894940
    },
    {
        "content": "<p>If we were to think about a \"libnurbs\" style project, I'd probably look at identifying a \"minimal functional core\" of openNURBS needed for BRep NURBS solids and related data types.  My hunch is that the core code there hasn't undergone extensive modification for a long time, and even if it would be challenging to try to keep up with the changes for ALL of openNURBS it might be much more practical to identify the changes for that core.   If for a \"libnurbs\" we stripped out subdivision, I/O, layers, visualization, mesh, etc. and narrowed it just to the ON_Brep related parts, and then checked to see how stable that code has been in the upstream repository, it would give us some idea of how hard that might be.</p>",
        "id": 342096397,
        "sender_full_name": "starseeker",
        "timestamp": 1678895239
    },
    {
        "content": "<p>We would still use openNURBS proper for 3dm import and export (which after all is what it's intended for) and build more advanced NURBS BRep capabilities on top of the smaller \"libnurbs\" core, making minimal modifications to the \"original\" openNURBS files (for example, replacing stubs with real implementations) and defining all-new functionality (for example, a proper ASCII serialization of the ON_Brep containers to replace our current b64 hack used by asc2g)  in our own files.  Then with any luck we could merge upstream changes to just the files in question fairly easily, without having to worry about new code they introduce.</p>",
        "id": 342097764,
        "sender_full_name": "starseeker",
        "timestamp": 1678895536
    },
    {
        "content": "<p>Although that articulates the idea behind libnurbs, I should point out I'm not actually advocating for that approach - it still has some potentially significant upfront costs even if the stability of the relevant portions of the openNURBS code holds, and it should be possible to do most of the substantive work we need in libbrep.</p>",
        "id": 342098669,
        "sender_full_name": "starseeker",
        "timestamp": 1678895677
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/111975-Google-Summer-of-Code/topic/2023/near/341971245\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"491779\">GregoryLi</span> functions that opennurbs has in headers but doesn't have the implementation for are typically implemented in libbrep.  Note that those are typically functions that are harder to implement too.  The opennurbs folks remove the hard bits that don't have anything to do with the 3dm file format in order to encourage people to buy their rhinosdk licensing which costs, is not open source.  </p>\n<p>There's actually a project starseeker started some 10+ years ago to address that very issue that is worth studying (called libnurbs).  Looks like someone pulled it over to github: <a href=\"https://github.com/yiskang/libnurbs\">https://github.com/yiskang/libnurbs</a></p>\n<p>Other references worth checking out:  <a href=\"https://www.google.com/search?q=nurbs+editing+site%3Agithub.com&amp;ie=UTF-8&amp;oe=UTF-8#ip=1\">https://www.google.com/search?q=nurbs+editing+site%3Agithub.com&amp;ie=UTF-8&amp;oe=UTF-8#ip=1</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> <strong>libnurbs</strong> is really great work! starseeker pointed out a feasible method to build a \"libnurbs\" like project. But as you said, it time consuming with little payoff. So I think focus on <strong>NURBS editing support</strong> for BRL-CAD is OK. So Achieving other NURBS operations is the icing on the cake... </p>\n<p>I will see how to call NURBS editing operation though cmd. This is something I'm not familiar with. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 342207943,
        "sender_full_name": "GregoryLi",
        "timestamp": 1678936591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"491779\">@GregoryLi</span> a potential starting point that might help would be to look at the opennurbs examples in src/proc-db which are in C++ and construct basic shapes manually like a cube.  imagine having a CLI in mged where you could create the twisted cube example, or take an existing twisted cube and move an existing control point, or adjust a knot, or move an edge , or move a surface, or clamp all the control points precisely to their parametric domain counterparts, etc</p>",
        "id": 342214464,
        "sender_full_name": "Sean",
        "timestamp": 1678941131
    },
    {
        "content": "<p>Congratulations <span class=\"user-mention\" data-user-id=\"491779\">@GregoryLi</span>, <span class=\"user-mention\" data-user-id=\"601736\">@Caio José Dos Santos Brito</span> and <span class=\"user-mention\" data-user-id=\"601676\">@Abhiram</span>. We are as excited as you. I as member of BRL-CAD community, welcomes you all and can't wait to start working on projects.</p>",
        "id": 356086735,
        "sender_full_name": "Himanshu",
        "timestamp": 1683298838
    },
    {
        "content": "<p>It is sad that this year, we didn't get more slots than previous year but not to worry <span class=\"user-mention\" data-user-id=\"594562\">@Nishanth</span>, you can still contribute, learn and can gain experience here. I know how it feels to not get pass through even if we are dedicating for something. I hope you will stay and contribute. This will broaden your horizon as well.</p>",
        "id": 356088686,
        "sender_full_name": "Himanshu",
        "timestamp": 1683299218
    },
    {
        "content": "<p>Thank you for the opportunity!!! I am very excited and it will be fun for sure! =)</p>",
        "id": 356131301,
        "sender_full_name": "Caio José Dos Santos Brito",
        "timestamp": 1683309266
    },
    {
        "content": "<p>Congratulations and thank you to all that applied.  Alas, we won't get to all the applicants we wanted to work with, but encourage all to get involved and apply again next year (especially if this was your first time applying).  Open source thrives on communication, so being active and involved is one of the best ways to learn, get noticed, and get selected.</p>",
        "id": 356150052,
        "sender_full_name": "Sean",
        "timestamp": 1683315035
    },
    {
        "content": "<p>That said, for <span class=\"user-mention\" data-user-id=\"491779\">@GregoryLi</span> <span class=\"user-mention\" data-user-id=\"601736\">@Caio José Dos Santos Brito</span> and <span class=\"user-mention\" data-user-id=\"601676\">@Abhiram</span> please do check up the checklist for what steps are next:  <a href=\"https://opencax.github.io/gsoc_checklist.html\">https://opencax.github.io/gsoc_checklist.html</a></p>",
        "id": 356150202,
        "sender_full_name": "Sean",
        "timestamp": 1683315087
    },
    {
        "content": "<p>GSoC 2023 page site is now created and now you will able to maintain your project related information here <a href=\"https://brlcad.org/wiki/Google_Summer_of_Code/2023\">https://brlcad.org/wiki/Google_Summer_of_Code/2023</a>. You can look into other project info which are selected previously <a href=\"https://brlcad.org/wiki/Google_Summer_of_Code/2022\">https://brlcad.org/wiki/Google_Summer_of_Code/2022</a> otherwise there is a template added to 2023 page. Whatever you like pick it.</p>",
        "id": 356546833,
        "sender_full_name": "Himanshu",
        "timestamp": 1683491854
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252475\">Himanshu Sekhar Nayak</span> <a href=\"#narrow/stream/111975-Google-Summer-of-Code/topic/2023/near/356546833\">said</a>:</p>\n<blockquote>\n<p>GSoC 2023 page site is now created and now you will able to maintain your project related information here <a href=\"https://brlcad.org/wiki/Google_Summer_of_Code/2023\">https://brlcad.org/wiki/Google_Summer_of_Code/2023</a>. You can look into other project info which are selected previously <a href=\"https://brlcad.org/wiki/Google_Summer_of_Code/2022\">https://brlcad.org/wiki/Google_Summer_of_Code/2022</a> otherwise there is a template added to 2023 page. Whatever you like pick it.</p>\n</blockquote>\n<p>Okay will do!</p>",
        "id": 356734296,
        "sender_full_name": "Abhiram",
        "timestamp": 1683557433
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , can we have a meeting over the weekend or whenever you are free in the coming days so that we can both plan and discuss the updated deliverables (changes to boost etc, which I haven't really emphasized on in the proposal) and any other things you'd like me to do?</p>",
        "id": 357653995,
        "sender_full_name": "Abhiram",
        "timestamp": 1683825189
    }
]