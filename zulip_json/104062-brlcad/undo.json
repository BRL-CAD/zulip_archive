[
    {
        "content": "<p>Hello all<br>\nI was wondering where to start for an undo command ?</p>",
        "id": 186705970,
        "sender_full_name": "scorp08",
        "timestamp": 1580146748
    },
    {
        "content": "<blockquote>\n<p>Hello all<br>\nI was wondering where to start for an undo command ?</p>\n</blockquote>\n<p>Any suggestion ?</p>",
        "id": 187149619,
        "sender_full_name": "scorp08",
        "timestamp": 1580538171
    },
    {
        "content": "<p>are you familiar with undo list/graph implementations? If so, you'll know what you need in your state atoms, so creating the mapping from db alterating internal commands is the next challenge, right?</p>",
        "id": 187163047,
        "sender_full_name": "Erik",
        "timestamp": 1580565258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"228172\">@scorp08</span> that depends on where a notion of undo should be supported.  for example, is this a property of geometry (so if you send me geometry, if you allowed it, I could go back through the history and possibly undo changes, possibly even with a different application)?  or is this a property of the application (so I can undo during my current editing session, possibly during future sessions with the same app)?</p>",
        "id": 187285752,
        "sender_full_name": "Sean",
        "timestamp": 1580752052
    },
    {
        "content": "<p>traditional undo is of course typically limited to the current running application only (not a property of geometry), and for that, there's nearly limitless possibilities.  one could simply look at the last command, and do the opposite</p>",
        "id": 187285986,
        "sender_full_name": "Sean",
        "timestamp": 1580752203
    }
]