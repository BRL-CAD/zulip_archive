[
    {
        "content": "<p>Ran some quick tests on our various containers and a couple candidate replacements to check on performance.  Interesting results:</p>\n<h1>10M  entries</h1>\n<p>morrison@Miniagua Verstable % ./unordered_map_test <br>\nUnordered Map Insertion Time: 0.368054 seconds<br>\nUnordered Map Lookup Time: 0.0389437 seconds<br>\nUnordered Map Deletion Time: 0.322391 seconds</p>\n<p>morrison@Miniagua Verstable % ./verstable_test <br>\nVerstable Insertion Time: 0.734719 seconds<br>\nVerstable Lookup Time: 0.139974 seconds<br>\nVerstable Deletion Time: 0.161566 seconds</p>\n<h1>1M  entries</h1>\n<p>morrison@Miniagua Verstable % ./hash_test <br>\nHash Table Insertion Time: 6.944 seconds<br>\nHash Table Lookup Time: 6.80006 seconds<br>\nHash Table Deletion Time: 0.0561262 seconds</p>\n<p>morrison@Miniagua Verstable % ./ptbl_test<br>\nPtbl Insertion Time: 0.00723613 seconds<br>\nPtbl Lookup Time: 209.392 seconds<br>\nPtbl Deletion Time: 361.77 seconds</p>",
        "id": 451193570,
        "sender_full_name": "Sean",
        "timestamp": 1720887436
    },
    {
        "content": "<p>Not strictly apples to apples as I was originally evaluating int-to-int hash lookup timings, which hash and ptbl don't do, so they're using pointer data (ptr-to-ptr).  I still need to go back and change unordered and verstable to be ptr-to-ptr for more direct comparison.</p>",
        "id": 451194143,
        "sender_full_name": "Sean",
        "timestamp": 1720887677
    }
]