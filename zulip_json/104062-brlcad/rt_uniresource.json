[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> Am I correct that we (and users) should only ever use rt_uniresource for non-parallel scenarios?  (i.e. ncpu = 1)?  If so, should we be enforcing that in prep by validating that resource pointers aren't &amp;rt_uniresource if ncpus  &gt; 1?</p>",
        "id": 498238588,
        "sender_full_name": "starseeker",
        "timestamp": 1738889418
    },
    {
        "content": "<p>I mean we could, but it's also possible to hang a parallel structure off the rt_uniresource, in which case you might just have rt_uni with ncpu&gt;1</p>",
        "id": 498240088,
        "sender_full_name": "Sean",
        "timestamp": 1738890304
    },
    {
        "content": "<p>OK, so there is a way to do that legitimately?  Fair enough.</p>",
        "id": 498240132,
        "sender_full_name": "starseeker",
        "timestamp": 1738890336
    },
    {
        "content": "<p>\"Legitimate\" is up for debate.</p>",
        "id": 498240417,
        "sender_full_name": "Sean",
        "timestamp": 1738890497
    },
    {
        "content": "<p>We do say that the resources are supposed to be per thread of execution, so even if it's technically possible, that's not documented use.</p>",
        "id": 498240454,
        "sender_full_name": "Sean",
        "timestamp": 1738890528
    },
    {
        "content": "<p>And definitely not kosher for passing rt_uniresource around to librt functions from different threads simultaneously.</p>",
        "id": 498240518,
        "sender_full_name": "Sean",
        "timestamp": 1738890568
    },
    {
        "content": "<p>What about doing the check by default and having some sort of #ifdef REALLY_WANT_PARALLEL_UNIRESOURCE guard to allow a code that's specifically trying something wonky to disable it?</p>",
        "id": 498240546,
        "sender_full_name": "starseeker",
        "timestamp": 1738890593
    },
    {
        "content": "<p>There are statistical aggregators in there that assue one per thread</p>",
        "id": 498240552,
        "sender_full_name": "Sean",
        "timestamp": 1738890597
    },
    {
        "content": "<p>I wouldn't bother.  If you want to add it, just update the doc for rt_uniresource to state the limitation/expectation.</p>",
        "id": 498240631,
        "sender_full_name": "Sean",
        "timestamp": 1738890630
    },
    {
        "content": "<p>Maybe make sure it's consistent with the docs for struct resource, but that might be good already.</p>",
        "id": 498240697,
        "sender_full_name": "Sean",
        "timestamp": 1738890672
    },
    {
        "content": "<p>Gotcha.  I'll look more closely tomorrow.</p>",
        "id": 498240816,
        "sender_full_name": "starseeker",
        "timestamp": 1738890739
    }
]