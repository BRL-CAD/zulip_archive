[
    {
        "content": "<p>what CI system are you using?</p>",
        "id": 200746494,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018319
    },
    {
        "content": "<p>Jenkins at the moment</p>",
        "id": 200746495,
        "sender_full_name": "starseeker",
        "timestamp": 1592018341
    },
    {
        "content": "<p>oh</p>",
        "id": 200746501,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018359
    },
    {
        "content": "<p>i use travis for my repo</p>",
        "id": 200746503,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018370
    },
    {
        "content": "<p>where is the repo which holds the yml file?</p>",
        "id": 200746511,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018400
    },
    {
        "content": "<p>I don't think our Jenkins CI files are checked in to a repository at the moment - they're a setup on the server</p>",
        "id": 200746561,
        "sender_full_name": "starseeker",
        "timestamp": 1592018468
    },
    {
        "content": "<p>ohh</p>",
        "id": 200746563,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018480
    },
    {
        "content": "<p>can i see the file or is it on a private server?</p>",
        "id": 200746601,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018523
    },
    {
        "content": "<p>i like seeing those CI files and how they are setup</p>",
        "id": 200746606,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018544
    },
    {
        "content": "<p>There's not much to see - it's a pretty basic svn checkout, configure and build</p>",
        "id": 200746607,
        "sender_full_name": "starseeker",
        "timestamp": 1592018547
    },
    {
        "content": "<p>i know but still they are cool and so i want to see</p>",
        "id": 200746622,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018612
    },
    {
        "content": "<p>see if i can understand Jenkins CI files</p>",
        "id": 200746627,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018637
    },
    {
        "content": "<p>Jenkins isn't typically controlled with files - it's managed through a web interface</p>",
        "id": 200746670,
        "sender_full_name": "starseeker",
        "timestamp": 1592018689
    },
    {
        "content": "<p>oh</p>",
        "id": 200746672,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018696
    },
    {
        "content": "<p>thats kinda cool</p>",
        "id": 200746676,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018704
    },
    {
        "content": "<p>ok then</p>",
        "id": 200746679,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018708
    },
    {
        "content": "<p>There is one bash script we have that is run from Jenkins (when we're set up for it): <a href=\"https://sourceforge.net/p/brlcad/code/HEAD/tree/brlcad/trunk/misc/clang-static-analyzer-run.sh\">https://sourceforge.net/p/brlcad/code/HEAD/tree/brlcad/trunk/misc/clang-static-analyzer-run.sh</a></p>",
        "id": 200746685,
        "sender_full_name": "starseeker",
        "timestamp": 1592018726
    },
    {
        "content": "<p>That's a lot more complicated than the normal process - it is used to check the code using the clang compiler's static analysis tool.</p>",
        "id": 200746726,
        "sender_full_name": "starseeker",
        "timestamp": 1592018775
    },
    {
        "content": "<p>The same script could be launched by any CI system, but that is the core of the testing logic</p>",
        "id": 200746730,
        "sender_full_name": "starseeker",
        "timestamp": 1592018812
    },
    {
        "content": "<p>i know travis and circleci use config files</p>",
        "id": 200746734,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018823
    },
    {
        "content": "<p>but didnt knew that jenkins could be setup using a web interface</p>",
        "id": 200746742,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018851
    },
    {
        "content": "<p><a href=\"https://www.jenkins.io/doc/tutorials/\">https://www.jenkins.io/doc/tutorials/</a></p>",
        "id": 200746796,
        "sender_full_name": "starseeker",
        "timestamp": 1592018907
    },
    {
        "content": "<p>ok gotta go</p>",
        "id": 200746804,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018937
    },
    {
        "content": "<p>my classes are going on</p>",
        "id": 200746810,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018945
    },
    {
        "content": "<p>thanks for the information about jenkins</p>",
        "id": 200746815,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592018962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> We can get you an account set up for our Jenkins.  Actually try requesting one.  Not sure what it does, how it notifies.  Go to <a href=\"https://ci.brlcad.org/status/\">https://ci.brlcad.org/status/</a> and select \"create an account\"</p>",
        "id": 200899550,
        "sender_full_name": "Sean",
        "timestamp": 1592232767
    },
    {
        "content": "<p>hm, my script blockers 'n stuff may've screwed things up, it gives me a single field for the password and complains that the passwords don't match</p>",
        "id": 200954435,
        "sender_full_name": "Erik",
        "timestamp": 1592260723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"103542\">@Erik</span> what do you mean?  you mean if you try to create a jenkins account?  note that's not apache... it's all going through a proxy redirect on a different port, talks directly to jenkins.</p>",
        "id": 201964482,
        "sender_full_name": "Sean",
        "timestamp": 1593089661
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  did you open jenkins recently? if not, i just opened it and it shows these warnings. See if you can fix them<br>\n<a href=\"/user_uploads/1549/Xdrfmqt3LqbT85oooKev3od8/Screenshot-from-2020-08-28-13-53-23.png\">Screenshot-from-2020-08-28-13-53-23.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/Xdrfmqt3LqbT85oooKev3od8/Screenshot-from-2020-08-28-13-53-23.png\" title=\"Screenshot-from-2020-08-28-13-53-23.png\"><img src=\"/user_uploads/1549/Xdrfmqt3LqbT85oooKev3od8/Screenshot-from-2020-08-28-13-53-23.png\"></a></div>",
        "id": 208316752,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1598603083
    },
    {
        "content": "<p>Here's an example of the bizarre intermittent failure I'm seeing on the Linux github runners:  <a href=\"/user_uploads/1549/zekHW2KG_ntPaI7zAsJtj6H3/lemon_build_failure_github_runner.txt\">lemon_build_failure_github_runner.txt</a></p>",
        "id": 210997523,
        "sender_full_name": "starseeker",
        "timestamp": 1600865860
    },
    {
        "content": "<p>maybe the perplex template copying is involved...</p>",
        "id": 210997665,
        "sender_full_name": "starseeker",
        "timestamp": 1600865935
    },
    {
        "content": "<p>Don't see how though...</p>",
        "id": 210998061,
        "sender_full_name": "starseeker",
        "timestamp": 1600866121
    },
    {
        "content": "<p>It almost looks like the lemon.c.o file hasn't had enough time to fully write out to disk before ld tries to turn it into an executable...</p>",
        "id": 210998335,
        "sender_full_name": "starseeker",
        "timestamp": 1600866227
    },
    {
        "content": "<p>are you sure they're not being run concurrently?</p>",
        "id": 211021357,
        "sender_full_name": "Sean",
        "timestamp": 1600875632
    },
    {
        "content": "<p>it's not clear from the log, but they could be simultaneously executing</p>",
        "id": 211021392,
        "sender_full_name": "Sean",
        "timestamp": 1600875650
    },
    {
        "content": "<p>Even if they are it shouldn't matter, looking closer - lemon is a stand alone single C file, and it's the lemon executable that's not getting generated correctly.</p>",
        "id": 211024285,
        "sender_full_name": "starseeker",
        "timestamp": 1600876875
    },
    {
        "content": "<p>There's another failure mode that popped up where the build step completes but then the lemon binary doesn't run.</p>",
        "id": 211024372,
        "sender_full_name": "starseeker",
        "timestamp": 1600876906
    },
    {
        "content": "<p>I wish it was some kind of dependency issue - that at least I might be able to do something with.  Lemon is just a straight add_executable call in CMake, about as basic as it gets.</p>\n<p>I put in a ticket with the github runner project - maybe they can offer some insight into what might be causing it.</p>",
        "id": 211024982,
        "sender_full_name": "starseeker",
        "timestamp": 1600877169
    },
    {
        "content": "<p>yeah, I see that</p>",
        "id": 211025601,
        "sender_full_name": "Sean",
        "timestamp": 1600877443
    },
    {
        "content": "<p>only thing maybe coming into play is lemon.c is fairly big</p>",
        "id": 211025669,
        "sender_full_name": "Sean",
        "timestamp": 1600877467
    },
    {
        "content": "<p>Grrr.  And now CMP (pixcmp) doesn't want to run on the Windows version for some reason...</p>",
        "id": 211025693,
        "sender_full_name": "starseeker",
        "timestamp": 1600877483
    },
    {
        "content": "<p>do you have access to the .o file, can you confirm whether it has _main</p>",
        "id": 211025699,
        "sender_full_name": "Sean",
        "timestamp": 1600877485
    },
    {
        "content": "<p>No, unfortunately - I've not figured out yet how to capture what the actions are generating.</p>",
        "id": 211025757,
        "sender_full_name": "starseeker",
        "timestamp": 1600877508
    },
    {
        "content": "<p>/me more or less accidentally got  Windows benchmark working on his laptop... Will have to try to figure it out again.</p>",
        "id": 211025925,
        "sender_full_name": "starseeker",
        "timestamp": 1600877568
    },
    {
        "content": "<p>maybe add a stage to the CI runner that runs \"nm misc/tools/lemon/CMakeFiles/lemon.dir/lemon.c.o\"</p>",
        "id": 211025946,
        "sender_full_name": "Sean",
        "timestamp": 1600877583
    },
    {
        "content": "<p>That's doable, I think - one sec.</p>",
        "id": 211026002,
        "sender_full_name": "starseeker",
        "timestamp": 1600877607
    },
    {
        "content": "<p>there is one oddity in the build flags</p>",
        "id": 211026020,
        "sender_full_name": "Sean",
        "timestamp": 1600877621
    },
    {
        "content": "<p>it's compiling lemon.c with /usr/bin/gcc  -Iinclude/brlcad -w -fPIE -std=gnu99 -MD -MT</p>",
        "id": 211026043,
        "sender_full_name": "Sean",
        "timestamp": 1600877630
    },
    {
        "content": "<p>those last two look like MSVC flags</p>",
        "id": 211026056,
        "sender_full_name": "Sean",
        "timestamp": 1600877639
    },
    {
        "content": "<p>hm, apparently they are gcc flags too.  just hadn't seen them before.</p>",
        "id": 211026552,
        "sender_full_name": "Sean",
        "timestamp": 1600877857
    },
    {
        "content": "<p>okay, MF is dependencies (cool), MT is the output target, and MD I don't fully understand but they're all valid preprocessor flags</p>",
        "id": 211026955,
        "sender_full_name": "Sean",
        "timestamp": 1600878033
    },
    {
        "content": "<p>And now of course it doesn't want to fail...</p>",
        "id": 211027576,
        "sender_full_name": "starseeker",
        "timestamp": 1600878309
    },
    {
        "content": "<p>Only suggestion I have is to add a \"sync\" command before running make/ninja/whatever, to make sure all the container I/O has settled down before compilation begins</p>",
        "id": 211027985,
        "sender_full_name": "Sean",
        "timestamp": 1600878489
    },
    {
        "content": "<p>that way at least should rule out it being anything prior to compilation</p>",
        "id": 211028038,
        "sender_full_name": "Sean",
        "timestamp": 1600878520
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/hFZJfaNJRHvvBwia8C21-cZE/lemon_build_failure_github_runner2.txt\">lemon_build_failure_github_runner2.txt</a></p>",
        "id": 211028068,
        "sender_full_name": "starseeker",
        "timestamp": 1600878538
    },
    {
        "content": "<p>As you say, lemon.o is pretty large - I wonder if we really are getting some kind of \"I/O claiming it's complete when it isn't yet\" issue...</p>",
        "id": 211028267,
        "sender_full_name": "starseeker",
        "timestamp": 1600878623
    },
    {
        "content": "<p>nah, just looking at that log, I think you probably found a ninja bug</p>",
        "id": 211028406,
        "sender_full_name": "Sean",
        "timestamp": 1600878709
    },
    {
        "content": "<p>i mean it could be provoked by some container I/O issue, but the logs do indicate there are multiple threads working there (notice the interrupted nm output)</p>",
        "id": 211028526,
        "sender_full_name": "Sean",
        "timestamp": 1600878769
    },
    {
        "content": "<p>I wouldn't be surprised if there's some race, like ninja is waiting on the output file to exist and then kicking off the linker rule</p>",
        "id": 211028619,
        "sender_full_name": "Sean",
        "timestamp": 1600878818
    },
    {
        "content": "<p>yet file exist is insufficient</p>",
        "id": 211028634,
        "sender_full_name": "Sean",
        "timestamp": 1600878825
    },
    {
        "content": "<p>/me nods - could be, but would have thought for sure that kind of mistake on ninja's part would have blown up spectacularly on our normal builds.</p>",
        "id": 211028875,
        "sender_full_name": "starseeker",
        "timestamp": 1600878929
    },
    {
        "content": "<p>except we don't have any builds with IO latency that  provoke the bug</p>",
        "id": 211029069,
        "sender_full_name": "Sean",
        "timestamp": 1600879008
    },
    {
        "content": "<p>the container is almost certainly running on a virtualized, distributed, or maybe even a network filesystem</p>",
        "id": 211029183,
        "sender_full_name": "Sean",
        "timestamp": 1600879058
    },
    {
        "content": "<p>Hmm.  I'll flip back to make and see what we get.</p>",
        "id": 211029222,
        "sender_full_name": "starseeker",
        "timestamp": 1600879078
    },
    {
        "content": "<p>it's undoubtedly the environment setting up the conditions, but could easily be some flawed assumption on ninja's part -- is there a way to control ninja's multithreading?</p>",
        "id": 211029356,
        "sender_full_name": "Sean",
        "timestamp": 1600879144
    },
    {
        "content": "<p>On the command line yes - I'll have to check with the cmake -build trigger.</p>",
        "id": 211029404,
        "sender_full_name": "starseeker",
        "timestamp": 1600879183
    },
    {
        "content": "<p>just by the fact that the .o has main afterwards but gcc can't find it during linking means the file exists but is not yet written.</p>",
        "id": 211029492,
        "sender_full_name": "Sean",
        "timestamp": 1600879213
    },
    {
        "content": "<p>that's easily possible with concurrency.  it's also possible with FS caching that it's simply not sync'd to disk yet despite the command exiting, but then the only fix would be a sync command prior to the second gcc call.</p>",
        "id": 211029721,
        "sender_full_name": "Sean",
        "timestamp": 1600879331
    },
    {
        "content": "<p>With both make and single threaded ninja the build order is different, so may be harder to reproduce (or at least a lot slower.)</p>",
        "id": 211032713,
        "sender_full_name": "starseeker",
        "timestamp": 1600880765
    },
    {
        "content": "<p>It'd be interesting to let make run parallel - it's a lot older and already has a lot of 'sync'ing and gating going on.</p>",
        "id": 211033448,
        "sender_full_name": "Sean",
        "timestamp": 1600881095
    },
    {
        "content": "<p>it's seen some sh!t</p>",
        "id": 211033599,
        "sender_full_name": "Sean",
        "timestamp": 1600881156
    },
    {
        "content": "<p>I left make in parallel mode</p>",
        "id": 211033823,
        "sender_full_name": "starseeker",
        "timestamp": 1600881263
    },
    {
        "content": "<p>Hrm.  This is Windows related, so not what we're seeing, but sounds similar in some ways:  <a href=\"https://github.com/ninja-build/ninja/issues/1802\">https://github.com/ninja-build/ninja/issues/1802</a></p>",
        "id": 211034684,
        "sender_full_name": "starseeker",
        "timestamp": 1600881679
    },
    {
        "content": "<p><a href=\"https://github.com/ninja-build/ninja/issues/1802\">https://github.com/ninja-build/ninja/issues/1802</a></p>",
        "id": 211034966,
        "sender_full_name": "starseeker",
        "timestamp": 1600881804
    },
    {
        "content": "<p>Whoops, this link was what I meant:  <a href=\"https://github.com/ninja-build/ninja/issues/1794\">https://github.com/ninja-build/ninja/issues/1794</a></p>",
        "id": 211037290,
        "sender_full_name": "starseeker",
        "timestamp": 1600882859
    },
    {
        "content": "<p>Sigh.  OK, we can go with default tools for the moment and see if things eventually shake down with ninja .</p>",
        "id": 211040041,
        "sender_full_name": "starseeker",
        "timestamp": 1600884093
    },
    {
        "content": "<p>Now, what's Windows complaining about...</p>",
        "id": 211041741,
        "sender_full_name": "starseeker",
        "timestamp": 1600884864
    },
    {
        "content": "<p>1802 appears to be the issue, and I think the naivety of the response is indicative.  they've not encountered anything but \"nearly instantaneous\" local filesystems, so that totally explains it</p>",
        "id": 211052507,
        "sender_full_name": "Sean",
        "timestamp": 1600889951
    },
    {
        "content": "<p>I commented on the bug, maybe he'll reopen it</p>",
        "id": 211053492,
        "sender_full_name": "Sean",
        "timestamp": 1600890502
    },
    {
        "content": "<p>Gah.  \"test -e /dev/null\" is succeeding in <a href=\"http://benchmark.sh\">benchmark.sh</a>, but when we get to \"fopen\" in the code it doesn't always work - running from inside msbuild, that fopen call fails even though the same executable will succeed from the msys prompt.</p>",
        "id": 211054376,
        "sender_full_name": "starseeker",
        "timestamp": 1600891000
    },
    {
        "content": "<p>Running from inside <a href=\"http://benchmark.sh\">benchmark.sh</a>, actually - pixcmp.exe works in isolation, but not from within the script.  Grr...</p>",
        "id": 211054932,
        "sender_full_name": "starseeker",
        "timestamp": 1600891281
    },
    {
        "content": "<p>this is on Windows?</p>",
        "id": 211055069,
        "sender_full_name": "Sean",
        "timestamp": 1600891333
    },
    {
        "content": "<p>Yeah.</p>",
        "id": 211055090,
        "sender_full_name": "starseeker",
        "timestamp": 1600891344
    },
    {
        "content": "<p>what fopen then?</p>",
        "id": 211055096,
        "sender_full_name": "Sean",
        "timestamp": 1600891351
    },
    {
        "content": "<p>pixcmp.exe</p>",
        "id": 211055107,
        "sender_full_name": "starseeker",
        "timestamp": 1600891358
    },
    {
        "content": "<p>Initial CMP test in the benchmark script.</p>",
        "id": 211055126,
        "sender_full_name": "starseeker",
        "timestamp": 1600891369
    },
    {
        "content": "<p>the sanity check to make sure CMP runs?</p>",
        "id": 211055318,
        "sender_full_name": "Sean",
        "timestamp": 1600891467
    },
    {
        "content": "<p>yes</p>",
        "id": 211055329,
        "sender_full_name": "starseeker",
        "timestamp": 1600891475
    },
    {
        "content": "<p>so it's running: eval \"path/to/pixcmp\" /dev/null /dev/null &gt; /dev/null 2&gt;&amp;1</p>",
        "id": 211055394,
        "sender_full_name": "Sean",
        "timestamp": 1600891514
    },
    {
        "content": "<p>Using [D:/a/cadcitest/cadcitest/build/Release/bin/rt] for RT<br>\n  Using [D:/a/cadcitest/cadcitest/build/Release/bin/../share/db] for DB<br>\n  Using [D:/a/cadcitest/cadcitest/build/Release/bin/../share/pix] for PIX<br>\n  Using [D:/a/cadcitest/cadcitest/build/Release/bin/../share/pix] for LOG<br>\n  Using [D:/a/cadcitest/cadcitest/build/Release/bin/pixcmp] for CMP<br>\n  Using [D:/a/cadcitest/cadcitest/build/Release/bin/elapsed.sh] for ELP</p>\n<p>CUSTOMBUILD : error : CMP does not seem to work as expected [D:\\a\\cadcitest\\cadcitest\\build\\check.vcxproj]</p>",
        "id": 211055415,
        "sender_full_name": "starseeker",
        "timestamp": 1600891525
    },
    {
        "content": "<p>Should be, yes (if test -e /dev/null is succeeding within the script)</p>",
        "id": 211055508,
        "sender_full_name": "starseeker",
        "timestamp": 1600891563
    },
    {
        "content": "<p>Seems to be in the debugger on my local laptop</p>",
        "id": 211055552,
        "sender_full_name": "starseeker",
        "timestamp": 1600891587
    },
    {
        "content": "<p>so first question is -- is there a /dev/null</p>",
        "id": 211055581,
        "sender_full_name": "Sean",
        "timestamp": 1600891603
    },
    {
        "content": "<p>or better, can we confirm what exactly it's running</p>",
        "id": 211055617,
        "sender_full_name": "Sean",
        "timestamp": 1600891625
    },
    {
        "content": "<p>set +</p>",
        "id": 211055628,
        "sender_full_name": "Sean",
        "timestamp": 1600891631
    },
    {
        "content": "<p>Um - set +?  You mean in <a href=\"http://benchmark.sh\">benchmark.sh</a>?</p>",
        "id": 211055658,
        "sender_full_name": "starseeker",
        "timestamp": 1600891653
    },
    {
        "content": "<p>test -e /dev/null<br>\necho $?<br>\n0<br>\n(from the MSYS command prompt)</p>",
        "id": 211055797,
        "sender_full_name": "starseeker",
        "timestamp": 1600891723
    },
    {
        "content": "<p>ls -la /dev/null</p>",
        "id": 211055858,
        "sender_full_name": "Sean",
        "timestamp": 1600891756
    },
    {
        "content": "<p>Reports there.</p>",
        "id": 211056041,
        "sender_full_name": "starseeker",
        "timestamp": 1600891851
    },
    {
        "content": "<p>crw-rw-rw-1 user 197612 1, 3 Sep 23 16:10 /dev/null</p>",
        "id": 211056126,
        "sender_full_name": "starseeker",
        "timestamp": 1600891907
    },
    {
        "content": "<p>okay, so it actually has a /dev/null -- that should be fine</p>",
        "id": 211056212,
        "sender_full_name": "Sean",
        "timestamp": 1600891937
    },
    {
        "content": "<p>so cmp is genuinely failing</p>",
        "id": 211056228,
        "sender_full_name": "Sean",
        "timestamp": 1600891952
    },
    {
        "content": "<p>Yes - fopen(\"/dev/null\") is failing.</p>",
        "id": 211056243,
        "sender_full_name": "starseeker",
        "timestamp": 1600891963
    },
    {
        "content": "<p>o.O  need a perror() on that failure</p>",
        "id": 211056298,
        "sender_full_name": "Sean",
        "timestamp": 1600892001
    },
    {
        "content": "<p>looks like it should already be perror()ing</p>",
        "id": 211056332,
        "sender_full_name": "Sean",
        "timestamp": 1600892032
    },
    {
        "content": "<p>what's printed if you run \"pixcmp /dev/null /dev/null\"</p>",
        "id": 211056413,
        "sender_full_name": "Sean",
        "timestamp": 1600892073
    },
    {
        "content": "<p>It is perror() calling, but I'm not sure where to check for output in visual studio?</p>",
        "id": 211056871,
        "sender_full_name": "starseeker",
        "timestamp": 1600892311
    },
    {
        "content": "<p>the script is sinking the output intentionally</p>",
        "id": 211056912,
        "sender_full_name": "Sean",
        "timestamp": 1600892340
    },
    {
        "content": "<p>so either need to unsink it, or add another call</p>",
        "id": 211056925,
        "sender_full_name": "Sean",
        "timestamp": 1600892349
    },
    {
        "content": "<p>i.e., remove the &gt;$NUL 2&gt;&amp;1</p>",
        "id": 211056963,
        "sender_full_name": "Sean",
        "timestamp": 1600892378
    },
    {
        "content": "<p>then it should be in the log</p>",
        "id": 211056991,
        "sender_full_name": "Sean",
        "timestamp": 1600892397
    },
    {
        "content": "<p>/dev/null: No such file or directory</p>",
        "id": 211057176,
        "sender_full_name": "starseeker",
        "timestamp": 1600892484
    },
    {
        "content": "<p>(And yes, ls -la /dev/null succeeds from the same command prompt...)</p>",
        "id": 211057280,
        "sender_full_name": "starseeker",
        "timestamp": 1600892526
    },
    {
        "content": "<p>It's almost like when it's launching pixcmp.exe, it's losing the wrapping environment that's providing /dev/null</p>",
        "id": 211057343,
        "sender_full_name": "starseeker",
        "timestamp": 1600892566
    },
    {
        "content": "<p>I wonder...</p>",
        "id": 211057396,
        "sender_full_name": "Sean",
        "timestamp": 1600892613
    },
    {
        "content": "<p>think I found it, gimmie a sec</p>",
        "id": 211057780,
        "sender_full_name": "Sean",
        "timestamp": 1600892832
    },
    {
        "content": "<p>try that <span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span></p>",
        "id": 211058438,
        "sender_full_name": "Sean",
        "timestamp": 1600893141
    },
    {
        "content": "<p>Nope, still getting /dev/null</p>",
        "id": 211058963,
        "sender_full_name": "starseeker",
        "timestamp": 1600893431
    },
    {
        "content": "<p>you said you tried running \"test -e /dev/null\"  what about trying this:<br>\nMSYS_NO_PATHCONV=1 MSYS2_ARG_CONV_EXCL=\"\\*\" test -e /dev/null</p>",
        "id": 211059242,
        "sender_full_name": "Sean",
        "timestamp": 1600893576
    },
    {
        "content": "<p>or more explicitly: MSYS_NO_PATHCONV=1 MSYS2_ARG_CONV_EXCL=\"/dev/null\" test -e /dev/null</p>",
        "id": 211059336,
        "sender_full_name": "Sean",
        "timestamp": 1600893605
    },
    {
        "content": "<p>echo $?<br>\n0</p>",
        "id": 211059779,
        "sender_full_name": "starseeker",
        "timestamp": 1600893780
    },
    {
        "content": "<p>Test still succeeds</p>",
        "id": 211059820,
        "sender_full_name": "starseeker",
        "timestamp": 1600893807
    },
    {
        "content": "<p>MSYS seems to be the uncanny valley of shells, in some ways - almost but not quite...</p>",
        "id": 211060734,
        "sender_full_name": "starseeker",
        "timestamp": 1600894307
    },
    {
        "content": "<p>oh right, because it does exist in the shell environment ... just curiously not in the compiled environment</p>",
        "id": 211061850,
        "sender_full_name": "Sean",
        "timestamp": 1600894928
    },
    {
        "content": "<p>did that change have any affect?</p>",
        "id": 211061880,
        "sender_full_name": "Sean",
        "timestamp": 1600894946
    },
    {
        "content": "<p>The committed change?  No, didn't seem to</p>",
        "id": 211062525,
        "sender_full_name": "starseeker",
        "timestamp": 1600895331
    },
    {
        "content": "<p>Hmm, the build issues go beyond just ninja - I had forgotten cmake -build defaults to single threaded make.  If I enable the -j flag explicitly, we get a different failure in a libpng cmake script execution.</p>",
        "id": 211062726,
        "sender_full_name": "starseeker",
        "timestamp": 1600895399
    },
    {
        "content": "<p>so then let me try to change the test the other way around.</p>",
        "id": 211062813,
        "sender_full_name": "Sean",
        "timestamp": 1600895427
    },
    {
        "content": "<p>And that script execution failure mode looks like an execute_process isn't properly completing its I/O before it tries the next script step.  Auuuuugh.</p>",
        "id": 211063684,
        "sender_full_name": "starseeker",
        "timestamp": 1600895976
    },
    {
        "content": "<p>So we may be  limited to single threaded building on the runners, not make-only building.  That's... annoying.</p>",
        "id": 211063774,
        "sender_full_name": "starseeker",
        "timestamp": 1600896020
    },
    {
        "content": "<p>c'est la vie!</p>",
        "id": 211064075,
        "sender_full_name": "Sean",
        "timestamp": 1600896238
    },
    {
        "content": "<p>applied a different change to bench/run.sh</p>",
        "id": 211064964,
        "sender_full_name": "Sean",
        "timestamp": 1600896738
    },
    {
        "content": "<p>Same failure, still saying no such file/directory for /dev/null</p>",
        "id": 211065263,
        "sender_full_name": "starseeker",
        "timestamp": 1600896954
    },
    {
        "content": "<p>You might be able to try a test script on a github runner to iterate faster - would you like me to set up an example?</p>",
        "id": 211065338,
        "sender_full_name": "starseeker",
        "timestamp": 1600896980
    },
    {
        "content": "<p>I'll have to add some diagnostics</p>",
        "id": 211065349,
        "sender_full_name": "Sean",
        "timestamp": 1600896989
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  - I set up a little test repo that you can fork on github - it will let you edit bin/benchmark, push the changes, and try to run the benchmark script on Windows:<br>\n<a href=\"https://github.com/starseeker/wintest\">https://github.com/starseeker/wintest</a></p>",
        "id": 211070011,
        "sender_full_name": "starseeker",
        "timestamp": 1600900026
    },
    {
        "content": "<p>okay, will take a look!</p>",
        "id": 211088869,
        "sender_full_name": "Sean",
        "timestamp": 1600921009
    },
    {
        "content": "<p>okay, so new to this.  forked it, and it told me that there are/were workflows in it but they weren't going to be enabled.  so now I don't see how to enable the benchmark.yml one...</p>",
        "id": 211089204,
        "sender_full_name": "Sean",
        "timestamp": 1600921536
    },
    {
        "content": "<p>couldn't figure it out, so just created a duplicate and that ran</p>",
        "id": 211089739,
        "sender_full_name": "Sean",
        "timestamp": 1600922352
    },
    {
        "content": "<p>there, that fixed it.  when in doubt, rip it out?  heh.</p>",
        "id": 211094723,
        "sender_full_name": "Sean",
        "timestamp": 1600930074
    },
    {
        "content": "<p>Jenkins seems to be unhappy now?</p>\n<p>ERROR:  CMP does not seem to work as expected<br>\n        (output was [<br>\nDifferent file sizes found: -(3) and -(72).  Cannot perform pixcmp.])</p>",
        "id": 211116982,
        "sender_full_name": "starseeker",
        "timestamp": 1600946297
    },
    {
        "content": "<p>I think you can enable Actions in a forked repo from the Actions tab, but I haven't tried it myself.</p>",
        "id": 211117223,
        "sender_full_name": "starseeker",
        "timestamp": 1600946497
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"https://aws1.discourse-cdn.com/github/original/2X/8/8a28c79db26e3c2d82f2d0694ae0762b2ef7763b.png\"><img src=\"https://aws1.discourse-cdn.com/github/original/2X/8/8a28c79db26e3c2d82f2d0694ae0762b2ef7763b.png\"></a></div>",
        "id": 211117301,
        "sender_full_name": "starseeker",
        "timestamp": 1600946551
    },
    {
        "content": "<p>fwiw, the failure seems to be specific to bz - my Linux box works fine.</p>",
        "id": 211118328,
        "sender_full_name": "starseeker",
        "timestamp": 1600947331
    },
    {
        "content": "<p>I doubt it's what you want to do long term, but r77207 seems to run - apparently BSD doesn't like the \"CMP - -\" bit for some reason?</p>",
        "id": 211119217,
        "sender_full_name": "starseeker",
        "timestamp": 1600947941
    },
    {
        "content": "<p>Yeah, looks like Mac has the same issue as BSD.</p>",
        "id": 211123029,
        "sender_full_name": "starseeker",
        "timestamp": 1600950162
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> <a href=\"#narrow/stream/104062-general/topic/Continuous.20integration/near/211117223\">said</a>:</p>\n<blockquote>\n<p>I think you can enable Actions in a forked repo from the Actions tab, but I haven't tried it myself.</p>\n</blockquote>\n<p>I did that and then it displayed no workflows, didn't run any when I committed.</p>",
        "id": 211132931,
        "sender_full_name": "Sean",
        "timestamp": 1600955155
    },
    {
        "content": "<p>Once I added another workflow, it ran both.</p>",
        "id": 211132985,
        "sender_full_name": "Sean",
        "timestamp": 1600955166
    },
    {
        "content": "<p>interesting on the failure -- I tested it on my Mac.  pixcmp parses \"-\" so it should work unless we gots a bug</p>",
        "id": 211134768,
        "sender_full_name": "Sean",
        "timestamp": 1600955967
    },
    {
        "content": "<p>interesting.  assuming you don't have a '-' file accidentally in that dir, it's basically saying stdin's sizes are different between the two stat calls...</p>",
        "id": 211135063,
        "sender_full_name": "Sean",
        "timestamp": 1600956093
    },
    {
        "content": "<p>::facepalm:: - methinks Github Actions still have some teething pains...</p>",
        "id": 211137285,
        "sender_full_name": "starseeker",
        "timestamp": 1600957026
    },
    {
        "content": "<p>working on pixcmp</p>",
        "id": 211137385,
        "sender_full_name": "Sean",
        "timestamp": 1600957070
    },
    {
        "content": "<p>Does running the benchmark script itself work on your mac with the \"-\" style input?  It fails on the runner...</p>",
        "id": 211137396,
        "sender_full_name": "starseeker",
        "timestamp": 1600957076
    },
    {
        "content": "<p>/me is trying to figure out how to save artifacts from the actions.</p>",
        "id": 211137512,
        "sender_full_name": "starseeker",
        "timestamp": 1600957116
    },
    {
        "content": "<p>yep, worked here</p>",
        "id": 211137584,
        "sender_full_name": "Sean",
        "timestamp": 1600957155
    },
    {
        "content": "<p>it's a timing issue, so not unexpected</p>",
        "id": 211137625,
        "sender_full_name": "Sean",
        "timestamp": 1600957171
    },
    {
        "content": "<p>that's telling pixcmp to read from stdin for pixel comparisons and for whatever reason, there's 3 bytes the first time it checks and a few more bytes the next time.  what's curious is that it's more than 1 byte.  need to make pixcmp print out those byte streams.</p>",
        "id": 211137910,
        "sender_full_name": "Sean",
        "timestamp": 1600957298
    },
    {
        "content": "<p>fwiw, it is failing for me interactively on bz (or did this morning, at any rate)</p>",
        "id": 211138007,
        "sender_full_name": "starseeker",
        "timestamp": 1600957338
    },
    {
        "content": "<p>should just be a nul byte, 1 byte .. so that's also an issue</p>",
        "id": 211138051,
        "sender_full_name": "Sean",
        "timestamp": 1600957365
    },
    {
        "content": "<p>ok</p>",
        "id": 211138054,
        "sender_full_name": "Sean",
        "timestamp": 1600957367
    },
    {
        "content": "<p>fwiw, I'm sure 77207 worked, but I'm intentionally avoiding hitting the disk (and working to remove the few remaining  bits that violate it from benchmark).  more importantly, my knowledge needs to be improved or pixcmp has a bug if stat'ing stdin twice is wrong.</p>",
        "id": 211160347,
        "sender_full_name": "Sean",
        "timestamp": 1600966859
    },
    {
        "content": "<p>I know - that's why I mentioned I didn't think you'd want to stay with that solution.  I just needed something that would work for the CI testing.</p>",
        "id": 211168317,
        "sender_full_name": "starseeker",
        "timestamp": 1600970523
    },
    {
        "content": "<p>What about pixdiffing one of the reference images with itself?  That's a read from the disk but not a write, and we'll be reading from the disk for benchmark anyway...</p>",
        "id": 211168426,
        "sender_full_name": "starseeker",
        "timestamp": 1600970574
    },
    {
        "content": "<p>don't worry about it... ;)</p>",
        "id": 211168467,
        "sender_full_name": "Sean",
        "timestamp": 1600970595
    },
    {
        "content": "<p>I'm going to find out what's wrong with - - because that's something that should clearly work from my understanding.</p>",
        "id": 211168562,
        "sender_full_name": "Sean",
        "timestamp": 1600970636
    },
    {
        "content": "<p>so either my understanding is very wrong or pixcmp has a bug.  either way, this involves all of like 4 lines of code, so it's easy to diagnose.</p>",
        "id": 211168656,
        "sender_full_name": "Sean",
        "timestamp": 1600970669
    },
    {
        "content": "<p>so, no git conversion this week then ;-)</p>",
        "id": 211168774,
        "sender_full_name": "starseeker",
        "timestamp": 1600970714
    },
    {
        "content": "<p>Is it failing for you on BSD at least?  It'll be hell to debug if it's only failing in the runners</p>",
        "id": 211168805,
        "sender_full_name": "starseeker",
        "timestamp": 1600970738
    },
    {
        "content": "<p>/me sees <em>another</em> random github build failure on the runner, even in single threaded mode...</p>",
        "id": 211168920,
        "sender_full_name": "starseeker",
        "timestamp": 1600970789
    },
    {
        "content": "<p>Maybe if I add another sync after git clone finishes...</p>",
        "id": 211169644,
        "sender_full_name": "starseeker",
        "timestamp": 1600971131
    },
    {
        "content": "<p>Another new one:</p>\n<div class=\"codehilite\"><pre><span></span><code>D:\\a\\cadcitest\\cadcitest\\src\\other\\libspsr\\Src\\SPSR.cpp : fatal error\n C1083: Cannot open compiler generated file: &#39;D:\\a\\cadcitest\\cadcitest\\build\\src\\other\\libspsr\\SPSR.dir\\Release\\SPSR.obj&#39;: Permission denied\n [D:\\a\\cadcitest\\cadcitest\\build\\src\\other\\libspsr\\SPSR.vcxproj]\n</code></pre></div>",
        "id": 211176413,
        "sender_full_name": "starseeker",
        "timestamp": 1600974634
    }
]