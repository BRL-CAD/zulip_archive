[
    {
        "content": "<p>Came across this today: <a href=\"https://medium.com/@taying.cheng/understanding-real-time-3d-reconstruction-and-kinectfusion-33d61d1cd402\" target=\"_blank\" title=\"https://medium.com/@taying.cheng/understanding-real-time-3d-reconstruction-and-kinectfusion-33d61d1cd402\">https://medium.com/@taying.cheng/understanding-real-time-3d-reconstruction-and-kinectfusion-33d61d1cd402</a></p>",
        "id": 189499417,
        "sender_full_name": "Sean",
        "timestamp": 1583161767
    },
    {
        "content": "<p>Wonder what license his code is using?</p>",
        "id": 189589437,
        "sender_full_name": "starseeker",
        "timestamp": 1583239770
    },
    {
        "content": "<p>Don't see one on github</p>",
        "id": 189589447,
        "sender_full_name": "starseeker",
        "timestamp": 1583239783
    },
    {
        "content": "<p>Interesting use of OSPRay: <a href=\"http://www.sci.utah.edu/publications/Wan2020a/TAMR_final.pdf\">http://www.sci.utah.edu/publications/Wan2020a/TAMR_final.pdf</a></p>",
        "id": 197744856,
        "sender_full_name": "Sean",
        "timestamp": 1589572419
    },
    {
        "content": "<p>Not exactly research, but this is one of the coolest uses of dll injection that I've seen in a long time: <a href=\"http://kylehalladay.com/blog/2020/05/20/Rendering-With-Notepad.html\">http://kylehalladay.com/blog/2020/05/20/Rendering-With-Notepad.html</a></p>",
        "id": 198215073,
        "sender_full_name": "Sean",
        "timestamp": 1589988442
    },
    {
        "content": "<p><a href=\"http://cfg.mit.edu/content/inversecsg-automatic-conversion-3d-models-csg-trees\">http://cfg.mit.edu/content/inversecsg-automatic-conversion-3d-models-csg-trees</a></p>",
        "id": 200501114,
        "sender_full_name": "Sean",
        "timestamp": 1591843634
    },
    {
        "content": "<p><a href=\"https://kevinkaixu.net/papers/wu_sgp18_csg.pdf\">https://kevinkaixu.net/papers/wu_sgp18_csg.pdf</a></p>",
        "id": 200501127,
        "sender_full_name": "Sean",
        "timestamp": 1591843670
    },
    {
        "content": "<p>Looks like EUGP would have probably accepted <span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span>'s  paper</p>",
        "id": 200501191,
        "sender_full_name": "Sean",
        "timestamp": 1591843721
    },
    {
        "content": "<p>or siggraph asia, apparently.  nice paper.</p>",
        "id": 200502408,
        "sender_full_name": "Sean",
        "timestamp": 1591845543
    },
    {
        "content": "<p>Saw this machine showcased a couple years ago.  Nice to see them making progress: <a href=\"https://www.digitaltrends.com/news/kamp-c-3d-printed-building/\">https://www.digitaltrends.com/news/kamp-c-3d-printed-building/</a></p>",
        "id": 204273689,
        "sender_full_name": "Sean",
        "timestamp": 1595031301
    },
    {
        "content": "<p>Not exactly research, but relevant to coding research, came across this interesting SIMD wrapping library: <a href=\"https://github.com/simd-everywhere/simde\">https://github.com/simd-everywhere/simde</a></p>",
        "id": 205944463,
        "sender_full_name": "Sean",
        "timestamp": 1596566654
    },
    {
        "content": "<p>All of the High Performance Graphics 2020 sessions were posted to YouTube:  <a href=\"https://www.youtube.com/channel/UCj04DHvbrUbuShWKzcTVJqg\">https://www.youtube.com/channel/UCj04DHvbrUbuShWKzcTVJqg</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"channel\" href=\"https://www.youtube.com/channel/UCj04DHvbrUbuShWKzcTVJqg\"><img src=\"https://i.ytimg.com/vi/channel/default.jpg\"></a></div>",
        "id": 206953539,
        "sender_full_name": "Sean",
        "timestamp": 1597425220
    },
    {
        "content": "<p>Interesting paper on more robustly converting a point cloud to mesh, using deep learning</p>",
        "id": 207886763,
        "sender_full_name": "Sean",
        "timestamp": 1598297795
    },
    {
        "content": "<p>impressive denoising: <a href=\"https://www.sciencedirect.com/science/article/pii/S0010448520300506\">https://www.sciencedirect.com/science/article/pii/S0010448520300506</a></p>",
        "id": 208127865,
        "sender_full_name": "Sean",
        "timestamp": 1598465869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  is this of any potential interest for bu_malloc and friends?  <a href=\"https://github.com/mjansson/rpmalloc\">https://github.com/mjansson/rpmalloc</a></p>",
        "id": 208266898,
        "sender_full_name": "starseeker",
        "timestamp": 1598557757
    },
    {
        "content": "<p>it sounds similar to the memory allocator I wrote a couple years ago for libbu's small memory allocation.  would be interesting to compare their performance since that's what our performance-critical code calls into.</p>",
        "id": 208288326,
        "sender_full_name": "Sean",
        "timestamp": 1598570616
    },
    {
        "content": "<p>not sure how useful it would be for bu_malloc in general, though.  I've already weeded most of the calls out, only a couple outliers.  (if it's performance critical, the best solution is to avoid allocating, you allocate before processing which takes no time)</p>",
        "id": 208288624,
        "sender_full_name": "Sean",
        "timestamp": 1598570869
    },
    {
        "content": "<p>the only place I know of that's production memory hungry we've not optimized is opennurbs and it's already got an allocator slot to override the standard allocator -- that's back to comparing against the BU_GET/PUT small memory allocator and I bet it'd be close to a wash.</p>",
        "id": 208288681,
        "sender_full_name": "Sean",
        "timestamp": 1598570920
    },
    {
        "content": "<p>when I implemented that allocator, jemalloc was the fastest I profiled and my numbers were about as higher as this one is claiming.</p>",
        "id": 208288709,
        "sender_full_name": "Sean",
        "timestamp": 1598570979
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> unrelated, just talked to jeff the past hour.  sends his regards.  he noticed all the github thrashing with the uploads, I gave him the low down.</p>",
        "id": 208288805,
        "sender_full_name": "Sean",
        "timestamp": 1598571048
    },
    {
        "content": "<p>fwiw, the latest ospray has a pretty cool superbuild option in their build logic that is nearly identical to what we've been talking about.  the superbuild downloads and does all their dependencies before it does ospray itself.</p>",
        "id": 208288847,
        "sender_full_name": "Sean",
        "timestamp": 1598571116
    },
    {
        "content": "<p>wow, and it actually worked flawlessly straight out of a cloning, including 7 significant dependencies</p>",
        "id": 208291110,
        "sender_full_name": "Sean",
        "timestamp": 1598573238
    },
    {
        "content": "<p>Nice!  What do they do about ispc?</p>",
        "id": 208293918,
        "sender_full_name": "starseeker",
        "timestamp": 1598576225
    },
    {
        "content": "<p>That was the really tough nut last time I looked at that bootstrap problem.</p>",
        "id": 208293933,
        "sender_full_name": "starseeker",
        "timestamp": 1598576263
    },
    {
        "content": "<p>Hah!  Hadn't heard from jeff in a while, but I've been following his github star traffic - I think he's scared up about a dozen small things I'd like to check out at some point.</p>",
        "id": 208294020,
        "sender_full_name": "starseeker",
        "timestamp": 1598576354
    },
    {
        "content": "<p>My regards to him if you should chat again.  Maybe we can get him to poke his nose into BRL-CAD + Ospray again once we're on github...</p>",
        "id": 208294044,
        "sender_full_name": "starseeker",
        "timestamp": 1598576393
    },
    {
        "content": "<p>Ah, OK - they're just downloading the ispc binary</p>",
        "id": 208294374,
        "sender_full_name": "starseeker",
        "timestamp": 1598576745
    },
    {
        "content": "<p>soo apparently there's a high performance low level GPGPU abstraction named HIP and AMD went all out on and ported a solid impl for nvidia/cuda (amd wants into the hpc datacenter bigtime, and they're swinging hard with those epyc's, I'm lurvin' my dual 7702). I wonder if that will possibly supplant and/or supplement opencl?</p>",
        "id": 213498623,
        "sender_full_name": "Erik",
        "timestamp": 1602802916
    },
    {
        "content": "<p>probably supplement if I had to wager a guess.  link to it?</p>",
        "id": 213871596,
        "sender_full_name": "Sean",
        "timestamp": 1603163997
    },
    {
        "content": "<p><a href=\"https://rocmdocs.amd.com/en/latest/Programming_Guides/HIP-terminology.html\">https://rocmdocs.amd.com/en/latest/Programming_Guides/HIP-terminology.html</a> is some, I forgot where I saw the thing that got me looking</p>",
        "id": 214130328,
        "sender_full_name": "Erik",
        "timestamp": 1603325434
    },
    {
        "content": "<p>oh I like dat table tho</p>",
        "id": 214248930,
        "sender_full_name": "Sean",
        "timestamp": 1603401182
    },
    {
        "content": "<p><a href=\"https://www.sciencedirect.com/journal/softwarex\">https://www.sciencedirect.com/journal/softwarex</a></p>",
        "id": 216890346,
        "sender_full_name": "starseeker",
        "timestamp": 1605542193
    },
    {
        "content": "<p>oh, that is interesting!  thanks <span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span></p>",
        "id": 217047970,
        "sender_full_name": "Sean",
        "timestamp": 1605640084
    },
    {
        "content": "<p>a certain visibility calculation that I've been working on seems super appropriate there</p>",
        "id": 217048045,
        "sender_full_name": "Sean",
        "timestamp": 1605640125
    },
    {
        "content": "<p><a href=\"https://www.khronos.org/blog/vulkan-ray-tracing-final-specification-release\">https://www.khronos.org/blog/vulkan-ray-tracing-final-specification-release</a></p>",
        "id": 217785850,
        "sender_full_name": "Sean",
        "timestamp": 1606238498
    },
    {
        "content": "<p><a href=\"http://graphics.cs.uos.de/bezierguarding.html\">http://graphics.cs.uos.de/bezierguarding.html</a> looks at first glance like something I was trying to do in a more ad-hoc fashion during the meshing work...  code is MIT licensed too.</p>",
        "id": 218698200,
        "sender_full_name": "starseeker",
        "timestamp": 1607005189
    },
    {
        "content": "<p><a href=\"https://ranahanocka.github.io/point2mesh/\">https://ranahanocka.github.io/point2mesh/</a></p>",
        "id": 218700690,
        "sender_full_name": "starseeker",
        "timestamp": 1607006259
    },
    {
        "content": "<p>The first paper is out of my depth without study.</p>",
        "id": 218780433,
        "sender_full_name": "Sean",
        "timestamp": 1607047931
    },
    {
        "content": "<p>The second paper is almost the same shrinkwrapping method I've mentioned we could/should probably implement before, only using a neural net to pull the points in intelligently instead of using an ant-crawling algorithm to walk the mesh points inward.</p>",
        "id": 218780559,
        "sender_full_name": "Sean",
        "timestamp": 1607048050
    },
    {
        "content": "<p>That latter is also a great example of something that we should continue to work towards -- they use blender as the processing engine similar to how we use mged.</p>",
        "id": 218780680,
        "sender_full_name": "Sean",
        "timestamp": 1607048187
    },
    {
        "content": "<p>I see the infrastructure they are using is heavily python based - I wonder what it would take to recode the core elements of the algorithm on top of something like tensorflow's C API...</p>",
        "id": 218791022,
        "sender_full_name": "starseeker",
        "timestamp": 1607053214
    },
    {
        "content": "<p>Heh - this one goes the other way, in to out:  <a href=\"https://www.cs.bgu.ac.il/~asharf/Projects/BLOB/index.htm\">https://www.cs.bgu.ac.il/~asharf/Projects/BLOB/index.htm</a></p>",
        "id": 218791344,
        "sender_full_name": "starseeker",
        "timestamp": 1607053652
    },
    {
        "content": "<p>That's what I was referring to - blender's interface is a python one akin to how ours is tcl</p>",
        "id": 218791411,
        "sender_full_name": "Sean",
        "timestamp": 1607053736
    },
    {
        "content": "<p>I think our ged interface is considerably more powerful design than what blender exposes, and easier to use, but they're geared for different things.</p>",
        "id": 218791445,
        "sender_full_name": "Sean",
        "timestamp": 1607053790
    },
    {
        "content": "<p>it would be interesting to study and see if we could find some alignment</p>",
        "id": 218791496,
        "sender_full_name": "Sean",
        "timestamp": 1607053805
    },
    {
        "content": "<p>oh, you're talking about the use of python rather than implementing the point2mesh feature?</p>",
        "id": 218791782,
        "sender_full_name": "starseeker",
        "timestamp": 1607054137
    },
    {
        "content": "<p>yeah, the interface and methodology, not necessarily this particular use case.</p>",
        "id": 218791830,
        "sender_full_name": "Sean",
        "timestamp": 1607054165
    },
    {
        "content": "<p>Ah.  My mistake.  I was thinking we wanted the feature</p>",
        "id": 218791843,
        "sender_full_name": "starseeker",
        "timestamp": 1607054195
    },
    {
        "content": "<p>this particular use case is of course very interesting in its own right. It would be cool to implement what they're doing in c++</p>",
        "id": 218791848,
        "sender_full_name": "Sean",
        "timestamp": 1607054207
    },
    {
        "content": "<p>I didn't see anything terribly complicated in there.<br>\nthe hardest bits would probably be the hooks it's using in blender</p>",
        "id": 218791880,
        "sender_full_name": "Sean",
        "timestamp": 1607054264
    },
    {
        "content": "<p>Unless I'm misunderstanding there's an extensive python ecosystem in back of this - pytorch, meshcnn, pytorch3d...</p>",
        "id": 218791959,
        "sender_full_name": "starseeker",
        "timestamp": 1607054386
    },
    {
        "content": "<p>that's how most python works... even simple things can be an extensive ecosystem of plugins and \"libraries\"</p>",
        "id": 218792117,
        "sender_full_name": "Sean",
        "timestamp": 1607054539
    },
    {
        "content": "<p>/me should probably take some classes on CNN/DNN - I know virtually nothing about it</p>",
        "id": 218792119,
        "sender_full_name": "starseeker",
        "timestamp": 1607054549
    },
    {
        "content": "<p>it's actually nice that the project's code is relatively simple, so each call entry could be tackled fairly independently</p>",
        "id": 218792136,
        "sender_full_name": "Sean",
        "timestamp": 1607054579
    },
    {
        "content": "<p>you should, it's awesome stuff.  AI was a specialty of mine in undergrad.  Did a lot with all kinds of NNs before they became a thing everywhere.</p>",
        "id": 218792167,
        "sender_full_name": "Sean",
        "timestamp": 1607054626
    },
    {
        "content": "<p>I'll have to look at that paper more closely - visually, their initial mesh looks like a decimation of the convex hull but I'm not sure what criteria they used to set it up...</p>",
        "id": 218792256,
        "sender_full_name": "starseeker",
        "timestamp": 1607054755
    },
    {
        "content": "<p>I still like GAs more, but NNs get sh!t done fast.   Eventually, a GA+NN will replicate every aspect of human neural processing.</p>",
        "id": 218792303,
        "sender_full_name": "Sean",
        "timestamp": 1607054779
    },
    {
        "content": "<p>yeah, that's what I saw too.  get a convext hull and then do some sort of CNN transform on the points to pull them in intelligently.</p>",
        "id": 218792341,
        "sender_full_name": "Sean",
        "timestamp": 1607054832
    },
    {
        "content": "<p>is tensorflow still the 800 pound gorilla in the field?</p>",
        "id": 218792342,
        "sender_full_name": "starseeker",
        "timestamp": 1607054832
    },
    {
        "content": "<p>tensorflow is the jungle</p>",
        "id": 218792351,
        "sender_full_name": "Sean",
        "timestamp": 1607054849
    },
    {
        "content": "<p>&lt;chuckle&gt;  Me thinks their dev team should drive around with that on a bumper sticker...</p>",
        "id": 218792409,
        "sender_full_name": "starseeker",
        "timestamp": 1607054910
    },
    {
        "content": "<p>you may find the basic concepts are usable even without the NN's, you could just do what they're doing and when it comes to the decision point where it calls into the NN, you just do the naive decision.</p>",
        "id": 218792417,
        "sender_full_name": "Sean",
        "timestamp": 1607054940
    },
    {
        "content": "<p>plus, you can use the NN without tensorflow or whatever else</p>",
        "id": 218792430,
        "sender_full_name": "Sean",
        "timestamp": 1607054971
    },
    {
        "content": "<p>tensorflow lets you build and evolve NNs.  They presumably aren't training an NN -- they trained one and are using it I think</p>",
        "id": 218792436,
        "sender_full_name": "Sean",
        "timestamp": 1607054999
    },
    {
        "content": "<p>so you could use the one they came up with.  it's likely encoded in there somewhere.</p>",
        "id": 218792481,
        "sender_full_name": "Sean",
        "timestamp": 1607055019
    },
    {
        "content": "<p>I suspect I lack the background to follow that part... the implication I got was they were somehow using the point cloud to guide the CNN</p>",
        "id": 218792546,
        "sender_full_name": "starseeker",
        "timestamp": 1607055145
    },
    {
        "content": "<p>they most certainly are</p>",
        "id": 218792558,
        "sender_full_name": "Sean",
        "timestamp": 1607055178
    },
    {
        "content": "<p>So there's another model of some sort they would have created in advance?</p>",
        "id": 218792573,
        "sender_full_name": "starseeker",
        "timestamp": 1607055224
    },
    {
        "content": "<p>NNs are really just super basic inputs-to-output functions.  so it's probably set up as feed points in, get points out.</p>",
        "id": 218792574,
        "sender_full_name": "Sean",
        "timestamp": 1607055227
    },
    {
        "content": "<p>the black box is what to do to the points, and that's typically trained in some manner</p>",
        "id": 218792625,
        "sender_full_name": "Sean",
        "timestamp": 1607055261
    },
    {
        "content": "<p>self-prior is a term specific to NN then?  That's one of the bits I haven't decoded yet...</p>",
        "id": 218792644,
        "sender_full_name": "starseeker",
        "timestamp": 1607055305
    },
    {
        "content": "<p>Oof.  Got to pack it in for the evening - back tomorrow.</p>",
        "id": 218792750,
        "sender_full_name": "starseeker",
        "timestamp": 1607055479
    },
    {
        "content": "<p>Nah, that's just some package's variable naming if I had to guess.  self is a python thing.  prior probably refers to a previous convolution of the neural net (happens during training)</p>",
        "id": 218792989,
        "sender_full_name": "Sean",
        "timestamp": 1607055759
    },
    {
        "content": "<p>self in python is similar to 'this' in C++</p>",
        "id": 218793084,
        "sender_full_name": "Sean",
        "timestamp": 1607055884
    },
    {
        "content": "<p>it's just a convention for a particular class scope so you can access member variables and functions, so there's apparently one called \"prior\"</p>",
        "id": 218793173,
        "sender_full_name": "Sean",
        "timestamp": 1607056001
    },
    {
        "content": "<p><a href=\"https://www.phoronix.com/scan.php?page=news_item&amp;px=Zink-OpenGL-3.3-Mesa-20.3\">https://www.phoronix.com/scan.php?page=news_item&amp;px=Zink-OpenGL-3.3-Mesa-20.3</a></p>",
        "id": 219153413,
        "sender_full_name": "starseeker",
        "timestamp": 1607384029
    },
    {
        "content": "<p><a href=\"https://people.unica.it/gianmarcocherchi/files/2020/09/fast_and_robust_mesh_arr.pdf\">https://people.unica.it/gianmarcocherchi/files/2020/09/fast_and_robust_mesh_arr.pdf</a><br>\n<a href=\"https://github.com/gcherchi/FastAndRobustMeshArrangements\">https://github.com/gcherchi/FastAndRobustMeshArrangements</a></p>",
        "id": 220416372,
        "sender_full_name": "starseeker",
        "timestamp": 1608318963
    },
    {
        "content": "<p>This classic was recently made available!<br>\n<a href=\"/user_uploads/1549/y-6jkv2amxL4ClYhyffCfpZw/An-Introduction-to-Ray-Tracing-The-Morgan-Kaufmann-Series-in-Computer-Graphics-.pdf\">An-Introduction-to-Ray-Tracing-The-Morgan-Kaufmann-Series-in-Computer-Graphics-.pdf</a></p>",
        "id": 230075522,
        "sender_full_name": "Sean",
        "timestamp": 1615573409
    },
    {
        "content": "<p>Cool!</p>",
        "id": 230075625,
        "sender_full_name": "starseeker",
        "timestamp": 1615573444
    },
    {
        "content": "<p>Fast Exact Booleans for Iterated CSG using Octree-Embedded BSPs<br>\n<a href=\"https://arxiv.org/pdf/2103.02486.pdf\">https://arxiv.org/pdf/2103.02486.pdf</a></p>",
        "id": 232206742,
        "sender_full_name": "starseeker",
        "timestamp": 1616980813
    },
    {
        "content": "<p>I think those researchers are working at the same place that puts out openflipper/openmesh - wonder if they could be enticed to look at applying that approach to our facetization problem...</p>",
        "id": 232206817,
        "sender_full_name": "starseeker",
        "timestamp": 1616980880
    },
    {
        "content": "<p><a href=\"https://github.com/potato3d/instancing\">https://github.com/potato3d/instancing</a></p>",
        "id": 247136470,
        "sender_full_name": "starseeker",
        "timestamp": 1627234980
    },
    {
        "content": "<p>Fascinating.</p>",
        "id": 247465536,
        "sender_full_name": "Jared McLaughlin",
        "timestamp": 1627482134
    },
    {
        "content": "<p><a href=\"https://web.cse.ohio-state.edu/~dey.8/paper/tcocone/tcocone.pdf\">https://web.cse.ohio-state.edu/~dey.8/paper/tcocone/tcocone.pdf</a></p>",
        "id": 247891569,
        "sender_full_name": "starseeker",
        "timestamp": 1627876770
    },
    {
        "content": "<p><a href=\"https://hal.inria.fr/hal-01596553/file/CAD17.pdf\">https://hal.inria.fr/hal-01596553/file/CAD17.pdf</a> - says they have an open source implementation in GEOGRAM</p>",
        "id": 247891981,
        "sender_full_name": "starseeker",
        "timestamp": 1627877888
    },
    {
        "content": "<p>humph.  need to boil it down to the pieces we can use without license incompatible deps, and see if that's got enough to be of use.  Oh well, a project for another day...</p>",
        "id": 247929783,
        "sender_full_name": "starseeker",
        "timestamp": 1627916473
    },
    {
        "content": "<p>Note to future self - to trigger reconstruction, this is the command:  </p>\n<p><code>vorpalite profile=reconstruct t.xyz rebuild.obj</code></p>\n<p>Works with default write output from pnts command.</p>",
        "id": 247954819,
        "sender_full_name": "starseeker",
        "timestamp": 1627930002
    },
    {
        "content": "<p>This is an interesting one... looks like someone studied BRL-CAD and performed a UML relationship diagram deconstruction of the system: <a href=\"http://eprints.library.odeku.edu.ua/id/eprint/6217/1/VelykodniySS_Reengineering_open_software_2019.pdf\">http://eprints.library.odeku.edu.ua/id/eprint/6217/1/VelykodniySS_Reengineering_open_software_2019.pdf</a></p>",
        "id": 253689178,
        "sender_full_name": "Sean",
        "timestamp": 1631853962
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/relevant.20research/near/253689178\">said</a>:</p>\n<blockquote>\n<p>This is an interesting one... looks like someone studied BRL-CAD and performed a UML relationship diagram deconstruction of the system: <a href=\"http://eprints.library.odeku.edu.ua/id/eprint/6217/1/VelykodniySS_Reengineering_open_software_2019.pdf\">http://eprints.library.odeku.edu.ua/id/eprint/6217/1/VelykodniySS_Reengineering_open_software_2019.pdf</a></p>\n</blockquote>\n<p>Despite the goal of the paper (reengineering BRL-CAD), I think that light-weight UML diagrams could be useful for documenting the structure of the code. </p>\n<p>By the way, my preferred UML tool is <a href=\"https://www.umlet.com/\">UMLet</a>.</p>",
        "id": 253710177,
        "sender_full_name": "Dashamir Hoxha",
        "timestamp": 1631868560
    },
    {
        "content": "<p>That professor actually wrote five papers on brl-cad<br>\nI'm not sure his intent was actually to re-engineer as much as it was to simply study it</p>",
        "id": 253841543,
        "sender_full_name": "Sean",
        "timestamp": 1631943336
    },
    {
        "content": "<p>Exchanging some messages with him, maybe get some collaboration going</p>",
        "id": 253841600,
        "sender_full_name": "Sean",
        "timestamp": 1631943369
    },
    {
        "content": "<p>From Siggraph 2021, interesting new approach to representation: <a href=\"https://github.com/duxingyi-charles/Boundary_Sampled_Halfspaces\">https://github.com/duxingyi-charles/Boundary_Sampled_Halfspaces</a></p>",
        "id": 277904579,
        "sender_full_name": "Sean",
        "timestamp": 1649175461
    },
    {
        "content": "<p>Cool, I hadn't realized mistuba's newer implementations were using a liberal license now: <a href=\"https://github.com/mitsuba-renderer/mitsuba3\">https://github.com/mitsuba-renderer/mitsuba3</a></p>",
        "id": 290597645,
        "sender_full_name": "starseeker",
        "timestamp": 1658558566
    },
    {
        "content": "<p>Wow, now that's impressive... <a href=\"https://github.com/XingangPan/DragGAN\">https://github.com/XingangPan/DragGAN</a></p>",
        "id": 359758941,
        "sender_full_name": "Sean",
        "timestamp": 1684527140
    },
    {
        "content": "<p>Generating CAD models from engineering sketchs (and point clouds and meshes, and more): <br>\n<a href=\"https://www.eurchembull.com/uploads/paper/d17bb7ba2b4030974b08506d707c6a70.pdf\">https://www.eurchembull.com/uploads/paper/d17bb7ba2b4030974b08506d707c6a70.pdf</a></p>",
        "id": 373833371,
        "sender_full_name": "Sean",
        "timestamp": 1688966745
    },
    {
        "content": "<p>and <a href=\"https://www.semanticscholar.org/reader/57d71b30f2ff68bde4a0c50322bb93a5c3358ee0\">https://www.semanticscholar.org/reader/57d71b30f2ff68bde4a0c50322bb93a5c3358ee0</a></p>",
        "id": 373833794,
        "sender_full_name": "Sean",
        "timestamp": 1688966933
    },
    {
        "content": "<p>not to forget this related gem from siggraph 2022:  <a href=\"https://geometry.cs.ucl.ac.uk/group_website/projects/2022/free2cad/\">https://geometry.cs.ucl.ac.uk/group_website/projects/2022/free2cad/</a></p>\n<p>all siggraph 2022 talks and papers are at <a href=\"https://blog.selfshadow.com\">https://blog.selfshadow.com</a></p>",
        "id": 373836607,
        "sender_full_name": "Sean",
        "timestamp": 1688968152
    },
    {
        "content": "<p>Fun writeup from someone that got a Siggraph paper accepted a couple years ago.  Paper is even related to our work, implicit rendering on gpu: <a href=\"https://www.mattkeeter.com/projects/siggraph/\">https://www.mattkeeter.com/projects/siggraph/</a></p>",
        "id": 374483391,
        "sender_full_name": "Sean",
        "timestamp": 1689134666
    },
    {
        "content": "<p>Sounds kind of interesting from a \"point cloud scans to CAD\" perspective: <a href=\"http://www.cs.columbia.edu/cg/deepcad/\">http://www.cs.columbia.edu/cg/deepcad/</a></p>",
        "id": 374765303,
        "sender_full_name": "starseeker",
        "timestamp": 1689205166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> <a href=\"#narrow/stream/104062-general/topic/relevant.20research/near/374765303\">said</a>:</p>\n<blockquote>\n<p>Sounds kind of interesting from a \"point cloud scans to CAD\" perspective: <a href=\"http://www.cs.columbia.edu/cg/deepcad/\">http://www.cs.columbia.edu/cg/deepcad/</a></p>\n</blockquote>\n<p>That's definitely interesting to me!  Not so much for the drafting approach, but the underlying generation.  I think the same concept would extend well to CSG and/or NURBS.</p>",
        "id": 423674740,
        "sender_full_name": "Sean",
        "timestamp": 1709059812
    },
    {
        "content": "<p>Here's a couple more papers that just came out of CVPR 2024:</p>\n<p>stable mobile-device SLAM algorithm:<br>\n<a href=\"https://spla-tam.github.io\">https://spla-tam.github.io</a></p>\n<p>constructing CAD from point clouds:<br>\n<a href=\"https://www.obukhov.ai/point2cad\">https://www.obukhov.ai/point2cad</a></p>",
        "id": 423674976,
        "sender_full_name": "Sean",
        "timestamp": 1709059905
    },
    {
        "content": "<p>Very interesting HPC-tuned math library:  <a href=\"https://bitbucket.org/blaze-lib/blaze/src/master/\">https://bitbucket.org/blaze-lib/blaze/src/master/</a></p>\n<p>Has me thinking about the old effort to implement fastf_t as a c++ class, how this might be a means to simdify huge swaths of code.</p>",
        "id": 433834711,
        "sender_full_name": "Sean",
        "timestamp": 1713373182
    },
    {
        "content": "<p>That does look interesting.  Heh - I suppose I'd get to find out where I've goofed and used double explicitly instead of fastf_t if we did something like that...</p>",
        "id": 433842777,
        "sender_full_name": "starseeker",
        "timestamp": 1713376056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-brlcad/topic/relevant.20research/near/433834711\">said</a>:</p>\n<blockquote>\n<p>Very interesting HPC-tuned math library:  <a href=\"https://bitbucket.org/blaze-lib/blaze/src/master/\">https://bitbucket.org/blaze-lib/blaze/src/master/</a></p>\n<p>Has me thinking about the old effort to implement fastf_t as a c++ class, how this might be a means to simdify huge swaths of code.</p>\n</blockquote>\n<p>Does BRL-CAD uses something like this? Or what's behind BRL-CAD fast math calculation?</p>",
        "id": 433852271,
        "sender_full_name": "Himanshu",
        "timestamp": 1713379426
    },
    {
        "content": "<p>This would be an excellent research project (and/or outstanding GSoC topic), librt as an Anari device:  <a href=\"https://www.it4i.cz/en/about/infoservice/news/data-parallel-rendering-with-anari\">https://www.it4i.cz/en/about/infoservice/news/data-parallel-rendering-with-anari</a></p>\n<p>Similarly, having an anari renderer implementation that could take a .g and render out using helide, ospray, librt, and other Anari devices.</p>",
        "id": 514743019,
        "sender_full_name": "Sean",
        "timestamp": 1745826432
    },
    {
        "content": "<p>Super interesting and detailed analysis of language choice and power consumption:  <a href=\"https://www.iro.umontreal.ca/~mignotte/IFT2425/Documents/RankingProgrammingLanguagesByEnergyEfficiency.pdf\">https://www.iro.umontreal.ca/~mignotte/IFT2425/Documents/RankingProgrammingLanguagesByEnergyEfficiency.pdf</a></p>",
        "id": 537915441,
        "sender_full_name": "Sean",
        "timestamp": 1757093150
    },
    {
        "content": "<p>Very cool work, bad license, but very impressive segmentation:  <a href=\"https://murcherful.github.io/P3-SAM/\">https://murcherful.github.io/P3-SAM/</a></p>",
        "id": 541720669,
        "sender_full_name": "Sean",
        "timestamp": 1758909782
    }
]