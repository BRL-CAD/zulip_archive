[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> if you want there's a doxygen generated online documentation, available at <a href=\"http://brlcad.org/docs/api\">brlcad.org/docs/api</a></p>",
        "id": 213331296,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1602699422
    },
    {
        "content": "<p>Okay, I will check it out.</p>",
        "id": 213331469,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1602699495
    },
    {
        "content": "<p>if you need any other help, i will help as much as i can</p>",
        "id": 213331718,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1602699623
    },
    {
        "content": "<p>Thank you for the assurance <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 213332004,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1602699791
    },
    {
        "content": "<p>Could you give me an overview of what this struct is \"rt_db_internal\" and what approximately these \"RT_CK_DB_INTERNAL\" and \"RT_BOT_CK_MAGIC\" do</p>",
        "id": 213468897,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1602786945
    },
    {
        "content": "<p>as far as i understand, <code>rt_db_internal</code> is the in-memory representation of BRL-CAD's database object.</p>",
        "id": 213469077,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1602787045
    },
    {
        "content": "<p><code>RT_CK_DB_INTERNAL</code> is supposed to check the <code>rt_db_internal</code> passed to it for corruption or something like that...</p>",
        "id": 213469260,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1602787128
    },
    {
        "content": "<p><code>RT_BOT_CK_MAGIC</code> is similar to <code>RT_CK_DB_INTERNAL</code> except it checks the <code>magic</code> variable of BoT for something i still dont yet understand.</p>",
        "id": 213469394,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1602787201
    },
    {
        "content": "<p>Thanks. How could I have gotten this information without asking you , like should I read the API docs in more depth or is this just general knowledge</p>",
        "id": 213470066,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1602787496
    },
    {
        "content": "<p>most of it is on the page, i guess</p>",
        "id": 213470129,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1602787534
    },
    {
        "content": "<p>and some of it,  you get to know while exploring the codebase...</p>",
        "id": 213470163,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1602787556
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/213470129\">said</a>:</p>\n<blockquote>\n<p>most of it is on the page, i guess</p>\n</blockquote>\n<p>In the API docs page?</p>",
        "id": 213470300,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1602787614
    },
    {
        "content": "<p>yea</p>",
        "id": 213472195,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1602788364
    },
    {
        "content": "<p>Okay</p>",
        "id": 213472357,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1602788440
    },
    {
        "content": "<p>all of it's thoroughly documented in <a href=\"https://sourceforge.net/p/brlcad/code/HEAD/tree/\">https://sourceforge.net/p/brlcad/code/HEAD/tree/</a> , mostly in c and tcl... quite a bit of c++ these days... :D <br>\nThere are a series of books, they're a bit old (might not be so very in date), but they're kinda modeled after the X docs, one of them has quite a bit of description of the guts. I imagine a pdf of scanned pages is buried in some archive somewhere that someone might know about :D</p>",
        "id": 213497067,
        "sender_full_name": "Erik",
        "timestamp": 1602801793
    },
    {
        "content": "<p>I want to convert a .stl file to a .g file, but in the mged command window it says stl-g is an invalid command. Is there something that I should do before I use the stl-g command?</p>",
        "id": 213689715,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1602999259
    },
    {
        "content": "<p><code>stl-g</code> should be called from the command-line</p>",
        "id": 213693267,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603005684
    },
    {
        "content": "<p>not from the <code>mged</code>. Thats why it was saying invalid command as there is not command in mged called <code>stl-g</code></p>",
        "id": 213693275,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603005722
    },
    {
        "content": "<p>Cool , got it!</p>",
        "id": 213699259,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603015422
    },
    {
        "content": "<p>Could someone explain in more detail the 2.1.1 task in Deuces page ,  <a href=\"https://brlcad.org/wiki/Deuces\">https://brlcad.org/wiki/Deuces</a> ,  I feel the bounding box function is working well enough. I tested it on a .stl file converted into a .g file and a geometry created using mged , and the bounding box was quite good.</p>",
        "id": 213834253,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603136238
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/_Fus8uVkgCQSmbDH2To88Ofa/Screenshot-from-2020-10-20-01-08-39.png\">Screenshot-from-2020-10-20-01-08-39.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/_Fus8uVkgCQSmbDH2To88Ofa/Screenshot-from-2020-10-20-01-08-39.png\" title=\"Screenshot-from-2020-10-20-01-08-39.png\"><img src=\"/user_uploads/1549/_Fus8uVkgCQSmbDH2To88Ofa/Screenshot-from-2020-10-20-01-08-39.png\"></a></div>",
        "id": 213834508,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603136389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  <a href=\"http://brlcad.org\">brlcad.org</a> is down</p>",
        "id": 213834514,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603136392
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"353338\">Vikram Atreya</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/213834253\">said</a>:</p>\n<blockquote>\n<p>Could someone explain in more detail the 2.1.1 task in Deuces page ,  <a href=\"https://brlcad.org/wiki/Deuces\">https://brlcad.org/wiki/Deuces</a> ,  I feel the bounding box function is working well enough. I tested it on a .stl file converted into a .g file and a geometry created using mged , and the bounding box was quite good.</p>\n</blockquote>\n<p>wait a few minutes. the site is down so i cant check what task you are talking about...</p>",
        "id": 213835007,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603136651
    },
    {
        "content": "<p>The site is functional now, if you want I will paste the text here.</p>",
        "id": 213955454,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603216154
    },
    {
        "content": "<p>i actually dont know what to do here</p>",
        "id": 213956031,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603216406
    },
    {
        "content": "<p>can you give me your .g file?</p>",
        "id": 213956149,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603216446
    },
    {
        "content": "<p>Yeah  1 min</p>",
        "id": 213956231,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603216476
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/MP8-hVkDMUWDh4EgdH2usdqv/lego2.g\">lego2.g</a> <br>\nThis is a geometry I converted from a .stl file. P.S. Im just checking the bounding box it makes for this to see if it gives any errors.</p>",
        "id": 213956855,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603216732
    },
    {
        "content": "<p>it actually wont give any errors...</p>",
        "id": 213956897,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603216748
    },
    {
        "content": "<p>So what is the aim of the task?</p>",
        "id": 213957042,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603216807
    },
    {
        "content": "<p>Reducing the size of the bounding box?</p>",
        "id": 213957172,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603216854
    },
    {
        "content": "<p>wait a minute...</p>",
        "id": 213957263,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603216876
    },
    {
        "content": "<p>let me see the bounding box first</p>",
        "id": 213957275,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603216884
    },
    {
        "content": "<p>i actually cant understand why it is said there that the bounding box is inaccurate.</p>",
        "id": 213958376,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217361
    },
    {
        "content": "<p>Is there a command to visualize the bbox, I have just been using the -e option to get the coords</p>",
        "id": 213958515,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603217415
    },
    {
        "content": "<p>Yeah I also did not understand that<br>\nLike the other tasks also seemed to have been solved in that page</p>",
        "id": 213958629,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603217487
    },
    {
        "content": "<p>one of the tasks isnt finished</p>",
        "id": 213958738,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217534
    },
    {
        "content": "<p>i mean solved</p>",
        "id": 213958747,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217539
    },
    {
        "content": "<p>2.1.2 isnt solved</p>",
        "id": 213958790,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217567
    },
    {
        "content": "<p>It is solved I felt, i tried it</p>",
        "id": 213958843,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603217608
    },
    {
        "content": "<p>it isnt solved</p>",
        "id": 213958868,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217624
    },
    {
        "content": "<p>to see the issue</p>",
        "id": 213958885,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217633
    },
    {
        "content": "<p>1) call mged from the commandline</p>",
        "id": 213958971,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217654
    },
    {
        "content": "<p>2) open any file(or dont open any file because it isnt necessary)</p>",
        "id": 213959042,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217686
    },
    {
        "content": "<p>3) close the windows and see the terminal</p>",
        "id": 213959070,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217699
    },
    {
        "content": "<p>close the two windows which are opened after that</p>",
        "id": 213959279,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217810
    },
    {
        "content": "<p>Yeah closing one doesn't take the other with it, but it does say \"Segmentation fault (core dumped)\"</p>",
        "id": 213959283,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603217812
    },
    {
        "content": "<p>what?</p>",
        "id": 213959447,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217905
    },
    {
        "content": "<p>you installed from source or from the tar.gz?</p>",
        "id": 213959475,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217919
    },
    {
        "content": "<p>source</p>",
        "id": 213959498,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603217931
    },
    {
        "content": "<p>you use ubuntu 18.04 right?</p>",
        "id": 213959523,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217949
    },
    {
        "content": "<p>Yeah</p>",
        "id": 213959532,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603217954
    },
    {
        "content": "<p>did you follow the steps i said?</p>",
        "id": 213959572,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603217978
    },
    {
        "content": "<p>Yes I did exactly what was said in this =&gt; <a href=\"https://brlcad.org/wiki/Building_from_SVN\">https://brlcad.org/wiki/Building_from_SVN</a></p>",
        "id": 213959677,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603218021
    },
    {
        "content": "<p>no not that</p>",
        "id": 213959692,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218030
    },
    {
        "content": "<p>i said about opening mged</p>",
        "id": 213959707,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218037
    },
    {
        "content": "<p>I went to the build folder and ran \"bin/mged\" in the command line , is that wrong? <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 213959809,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603218102
    },
    {
        "content": "<p>nope</p>",
        "id": 213959822,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218109
    },
    {
        "content": "<p>nothing wrong</p>",
        "id": 213959872,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218122
    },
    {
        "content": "<p>yet you are getting a segfault?</p>",
        "id": 213959907,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218136
    },
    {
        "content": "<p>Hmm yeah</p>",
        "id": 213959998,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603218191
    },
    {
        "content": "<p>Just to clarify, I closed both the windows and after that I got segmentation fault</p>",
        "id": 213960182,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603218271
    },
    {
        "content": "<p>open mged with a file</p>",
        "id": 213960219,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218300
    },
    {
        "content": "<p>Yeah I opened a file in mged</p>",
        "id": 213960366,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603218377
    },
    {
        "content": "<p>now close them...</p>",
        "id": 213960380,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218384
    },
    {
        "content": "<p>Same thing happens</p>",
        "id": 213960406,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603218396
    },
    {
        "content": "<p>that should not happen i think</p>",
        "id": 213960426,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218409
    },
    {
        "content": "<p>can you rebuild the whole thing right now?</p>",
        "id": 213960589,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218483
    },
    {
        "content": "<p>Yeah</p>",
        "id": 213960619,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603218496
    },
    {
        "content": "<p>then rebuild it and see if it is still happening</p>",
        "id": 213960656,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603218511
    },
    {
        "content": "<p>Yeah same thing happens</p>",
        "id": 213965383,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603220689
    },
    {
        "content": "<p>ummmm...</p>",
        "id": 213965408,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603220703
    },
    {
        "content": "<p>let me see if i get the segfault</p>",
        "id": 213965431,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603220713
    },
    {
        "content": "<p>then it will be much easier for me to understand whats going on</p>",
        "id": 213965456,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603220727
    },
    {
        "content": "<p>Okay</p>",
        "id": 213965494,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603220746
    },
    {
        "content": "<p>Are you running on Windows?</p>",
        "id": 213966105,
        "sender_full_name": "starseeker",
        "timestamp": 1603221000
    },
    {
        "content": "<p>No, ubuntu 18.04</p>",
        "id": 213966192,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603221019
    },
    {
        "content": "<p>Oh, I see it - MGED segfaulting on exit.</p>",
        "id": 213966306,
        "sender_full_name": "starseeker",
        "timestamp": 1603221079
    },
    {
        "content": "<p>one sec...</p>",
        "id": 213966329,
        "sender_full_name": "starseeker",
        "timestamp": 1603221086
    },
    {
        "content": "<p>See if r77518 fixes it</p>",
        "id": 213966715,
        "sender_full_name": "starseeker",
        "timestamp": 1603221260
    },
    {
        "content": "<p>wait a few more minutes...it is rebuilding.</p>",
        "id": 213967748,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603221832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> now this happens when both the windows are closed<br>\n<a href=\"/user_uploads/1549/kNjpDcK1uAkM2WA5zYGf9hWH/Screenshot-from-2020-10-21-19-32-02.png\">Screenshot-from-2020-10-21-19-32-02.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/kNjpDcK1uAkM2WA5zYGf9hWH/Screenshot-from-2020-10-21-19-32-02.png\" title=\"Screenshot-from-2020-10-21-19-32-02.png\"><img src=\"/user_uploads/1549/kNjpDcK1uAkM2WA5zYGf9hWH/Screenshot-from-2020-10-21-19-32-02.png\"></a></div>",
        "id": 214053737,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603288985
    },
    {
        "content": "<p>When both windows are closed?  I'm not quite following - are you launching in classic mode?</p>",
        "id": 214059765,
        "sender_full_name": "starseeker",
        "timestamp": 1603291503
    },
    {
        "content": "<p>classic mode?</p>",
        "id": 214059821,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603291535
    },
    {
        "content": "<p>So when I type \"mged\", I get a command window and a dm window.</p>",
        "id": 214059876,
        "sender_full_name": "starseeker",
        "timestamp": 1603291562
    },
    {
        "content": "<p>yea</p>",
        "id": 214059939,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603291574
    },
    {
        "content": "<p>You say you're \"closing both windows\" - are you closing the dm and then the command window, or vice versa?</p>",
        "id": 214059995,
        "sender_full_name": "starseeker",
        "timestamp": 1603291598
    },
    {
        "content": "<p>vice versa</p>",
        "id": 214060029,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603291611
    },
    {
        "content": "<p>Ah!</p>",
        "id": 214060048,
        "sender_full_name": "starseeker",
        "timestamp": 1603291619
    },
    {
        "content": "<p>OK, let me try that.</p>",
        "id": 214060071,
        "sender_full_name": "starseeker",
        "timestamp": 1603291626
    },
    {
        "content": "<p>even if i close the dm, then the command window, the same thing happens</p>",
        "id": 214060214,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603291685
    },
    {
        "content": "<p>OK, I think I see what the immediate cause is... now where to deal with it.  MGED's state management is spaghetti...</p>",
        "id": 214060361,
        "sender_full_name": "starseeker",
        "timestamp": 1603291754
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> I'm going to have to take apart the dm state management in MGED in more depth to figure out what's happening and what  should be happening instead.</p>",
        "id": 214064551,
        "sender_full_name": "starseeker",
        "timestamp": 1603293232
    },
    {
        "content": "<p>In the meantime, if you quit mged with \"q\" on the MGED command prompt it should exit cleanly.</p>",
        "id": 214064713,
        "sender_full_name": "starseeker",
        "timestamp": 1603293277
    },
    {
        "content": "<p>i wasnt actually quitting it but showing vikram what is supposed to be done in the task 2.1.2 in \"Deuces\" page</p>",
        "id": 214064912,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603293344
    },
    {
        "content": "<p>Since there is some ambiguity in the tasks in the Deuces page , could anyone suggest me some issue/task to work on for my first contribution</p>",
        "id": 214076878,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603297718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/213834514\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span>  <a href=\"http://brlcad.org\">brlcad.org</a> is down</p>\n</blockquote>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> -- that was the same issue as the last time.  something is attacking the machine and locking up apache 100% cpu.  I put a kill script in there, but it hung trying to get status.  just changed it to be more forceful, so we'll have to see if it happens again.</p>",
        "id": 214078738,
        "sender_full_name": "Sean",
        "timestamp": 1603298573
    },
    {
        "content": "<p>As for the BoT bounding box  ... it looks like <span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> bb function change in c54559 may have fixed whatever was wrong, otherwise that change wouldn't have been necessary.  the code was iterating over all vertices and calculating the BB.  now it's apparently iterating over all faces and checking each face vertex.</p>",
        "id": 214082531,
        "sender_full_name": "Sean",
        "timestamp": 1603300051
    },
    {
        "content": "<p>That should be approximately half as fast, so I would question why iterating over vertices wasn't working.  Maybe it was pulling in an errant vertex or was off-by-1 on the vertex list?</p>",
        "id": 214082640,
        "sender_full_name": "Sean",
        "timestamp": 1603300090
    },
    {
        "content": "<p>That's something that would be great to test out.  Run \"svn diff -c54560 src/librt/primitives/bot/bot.c\" and try restoring rt_bot_bbox() to an iteration over vertices, see if there's a problem.</p>",
        "id": 214082780,
        "sender_full_name": "Sean",
        "timestamp": 1603300181
    },
    {
        "content": "<p>If there's not a problem, you will have greatly improved performance of the bbox function.  If there is a problem, perhaps you can find out why.  They should result in the same bbox unless there are orphaned vertices (and perhaps that's the issue, but also addressable)</p>",
        "id": 214082968,
        "sender_full_name": "Sean",
        "timestamp": 1603300255
    },
    {
        "content": "<p>I updated the Deuces page to change the BoT bbox task.</p>",
        "id": 214088655,
        "sender_full_name": "Sean",
        "timestamp": 1603302583
    },
    {
        "content": "<p>Cool, I will work on it</p>",
        "id": 214090208,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603303243
    },
    {
        "content": "<p>Awesome.  Curious to learn what you find out.</p>",
        "id": 214099935,
        "sender_full_name": "Sean",
        "timestamp": 1603307501
    },
    {
        "content": "<p>Just conceptually, I don't think a BoT object is required to use all of its vertices when defining faces.  So it's quite possible (in a data sense) that a bbox of all vertices in the data structure will be much larger than the bbox of the actual mesh...</p>",
        "id": 214127202,
        "sender_full_name": "starseeker",
        "timestamp": 1603322757
    },
    {
        "content": "<p>Could zero-init an int array of the same size as the vertex array, iterate over the faces and set an \"active\" flag for every vertex used by a face, then use the flag array to only use each vertex once to expand the bbox - don't know if that would be a major benefit compared to just walking the face vertices though.  Fewer math operations, but would need the memory calloc and free,  not to mention the array upping the overall memory requirements...</p>",
        "id": 214129371,
        "sender_full_name": "starseeker",
        "timestamp": 1603324642
    },
    {
        "content": "<p>I made changes in the file to iterate only over vertices, I checked it using a geometry(of a lego brick) in 3 formats .g , .stl and .obj  and it seemed to work fine, are there some specific geometries I have to test for?</p>",
        "id": 214175944,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603367846
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214129371\">said</a>:</p>\n<blockquote>\n<p>Could zero-init an int array of the same size as the vertex array, iterate over the faces and set an \"active\" flag for every vertex used by a face, then use the flag array to only use each vertex once to expand the bbox - don't know if that would be a major benefit compared to just walking the face vertices though.  Fewer math operations, but would need the memory calloc and free,  not to mention the array upping the overall memory requirements...</p>\n</blockquote>\n<p>I also thought of this but wont it be looping the same number of times as before, So I did not try doing it</p>",
        "id": 214176077,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603367914
    },
    {
        "content": "<p>It would be looping the same number of times, but it would be doing less math to calculate bounding box extensions (i.e. only considering each point once, instead of multiple times.)</p>",
        "id": 214176335,
        "sender_full_name": "starseeker",
        "timestamp": 1603368083
    },
    {
        "content": "<p>I'm not sure offhand if we have a convenient exposure of a BoT with more vertices than are used in the mesh - you could construct such a bot easily enough in C for testing.</p>",
        "id": 214176463,
        "sender_full_name": "starseeker",
        "timestamp": 1603368151
    },
    {
        "content": "<p>It's what <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> referred to as orphaned vertices - to the best of my knowledge there are no API guarantees that we won't have them in bot objects, and I know some mesh processing algorithms can produce them unless a garbage collection pass is done at the end to produce a minimal vertex set.</p>",
        "id": 214177266,
        "sender_full_name": "starseeker",
        "timestamp": 1603368644
    },
    {
        "content": "<p>How can I time both the functions, I put a printf inside the \"rt_bot_bbox\" , but that doesn't seem to work. I'm attaching my file if any of you wants to take a look. <a href=\"/user_uploads/1549/ck9bkaCzaKVi9KtJ5sR0pSeJ/bot.c\">bot.c</a></p>",
        "id": 214236798,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603394979
    },
    {
        "content": "<p>you can use <code>bu_log</code> instead of <code>printf</code>.</p>",
        "id": 214237227,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1603395154
    },
    {
        "content": "<p>neither is good for timing it.  you'll want to use a timer outside the function, but that's premature as cliff made a good point about  how we deal with unreferenced vertices.</p>",
        "id": 214276356,
        "sender_full_name": "Sean",
        "timestamp": 1603432213
    },
    {
        "content": "<p>I think we have a couple options here.  We can treat them as valid BoT data i.e., an orphaned vertex is still geometric information and still part of that object's definition OR we can treat them as invalid BoT data, i.e., not relevant and that implies needing to do two passes in the bounding box function (one to determined reference vertices in a bit vector, and a second pass to bound them).</p>",
        "id": 214276457,
        "sender_full_name": "Sean",
        "timestamp": 1603432381
    },
    {
        "content": "<p>The orphaned vertices part just flew over my head. How do I find out if a vertex is orphaned or not? By checking is its part of a face ?</p>",
        "id": 214276633,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603432629
    },
    {
        "content": "<p>I think we already have implemented a command that eliminates unused vertices (bot_simplify maybe?) so either option is viable, but I think the intrinsic nature of the primitive type implies unreferenced vertices are non-data.</p>",
        "id": 214276634,
        "sender_full_name": "Sean",
        "timestamp": 1603432630
    },
    {
        "content": "<p>Bingo, right.</p>",
        "id": 214276642,
        "sender_full_name": "Sean",
        "timestamp": 1603432653
    },
    {
        "content": "<p>Do you know what a bit-vector is?</p>",
        "id": 214276645,
        "sender_full_name": "Sean",
        "timestamp": 1603432660
    },
    {
        "content": "<p>Ummm, No</p>",
        "id": 214276650,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603432672
    },
    {
        "content": "<p>Im a total newbie <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 214276699,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603432696
    },
    {
        "content": "<p>so basically we have two arrays in this triangle data structure.  One is an array of faces, the other an array of vertices</p>",
        "id": 214276707,
        "sender_full_name": "Sean",
        "timestamp": 1603432711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214276707\">said</a>:</p>\n<blockquote>\n<p>One is an array of faces, the other an array of vertices</p>\n</blockquote>\n<p>Yeah, that I discovered while I was working on this</p>",
        "id": 214276743,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603432772
    },
    {
        "content": "<p>each face has three integers, and those are indicies into the vertices array</p>",
        "id": 214276746,
        "sender_full_name": "Sean",
        "timestamp": 1603432776
    },
    {
        "content": "<p>each vertex has the actual double-precision XYZ values</p>",
        "id": 214276753,
        "sender_full_name": "Sean",
        "timestamp": 1603432797
    },
    {
        "content": "<p>Yeah</p>",
        "id": 214276812,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603432823
    },
    {
        "content": "<p>so what's needed is to iterate over all faces, and keep track of which vertices are actually used</p>",
        "id": 214276855,
        "sender_full_name": "Sean",
        "timestamp": 1603432899
    },
    {
        "content": "<p>before you switched it back to iterating over the vertices array, it was iterating over all faces</p>",
        "id": 214276909,
        "sender_full_name": "Sean",
        "timestamp": 1603432941
    },
    {
        "content": "<p>but it wasn't keeping track of anything, it just tested every vertex against the bounding box... but that means every vertex is being tested at least twice as many times as it needs to be. </p>\n<p>that doesn't matter much for small meshes, but on something big that could be seconds or minutes of wasted computation</p>",
        "id": 214276959,
        "sender_full_name": "Sean",
        "timestamp": 1603433020
    },
    {
        "content": "<p>so the question is how do you keep track ... and the typical answer for this kind of thing is a bit vector</p>",
        "id": 214277019,
        "sender_full_name": "Sean",
        "timestamp": 1603433051
    },
    {
        "content": "<p>Ohh Got it</p>",
        "id": 214277028,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603433063
    },
    {
        "content": "<p>a bit vector is simply an array of bits, so you'd have a bit for every vertex in the vertices array</p>",
        "id": 214277035,
        "sender_full_name": "Sean",
        "timestamp": 1603433073
    },
    {
        "content": "<p>I knew this but did not know it was called a bit vector</p>",
        "id": 214277042,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603433082
    },
    {
        "content": "<p>and you'd iterate over the faces, and mark the bit as 'on' for that index position</p>",
        "id": 214277048,
        "sender_full_name": "Sean",
        "timestamp": 1603433097
    },
    {
        "content": "<p>then you iterate over your bit array and do the actual bounding box calculation once on the 'on' vertices</p>",
        "id": 214277076,
        "sender_full_name": "Sean",
        "timestamp": 1603433127
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214277048\">said</a>:</p>\n<blockquote>\n<p>and you'd iterate over the faces, and mark the bit as 'on' for that index position</p>\n</blockquote>\n<p>Yeah got it, I will try implementing this then</p>",
        "id": 214277079,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603433134
    },
    {
        "content": "<p>What I was thinking was instead of 2 loops , we just check for the vertex when we switch it on and later if we hit an already switched on vertex we just skip it.</p>",
        "id": 214277179,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603433275
    },
    {
        "content": "<p>we have a pretty fast bit vector data structure you should use for this since you don't have access to c++ stl containers in the bot.c file</p>",
        "id": 214277181,
        "sender_full_name": "Sean",
        "timestamp": 1603433278
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"353338\">Vikram Atreya</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214277179\">said</a>:</p>\n<blockquote>\n<p>What I was thinking was instead of 2 loops , we just check for the vertex when we switch it on and later if we hit an already switched on vertex we just skip it.</p>\n</blockquote>\n<p>You totally could, but two loops will almost certainly be faster due to data coherency and branch prediction misses</p>",
        "id": 214277249,
        "sender_full_name": "Sean",
        "timestamp": 1603433371
    },
    {
        "content": "<p>with two loops, there's no data dependency, so it can literally scream through the array, prefetch data, and just set bits without any stalling.</p>",
        "id": 214277343,
        "sender_full_name": "Sean",
        "timestamp": 1603433478
    },
    {
        "content": "<p>Okay , I will implement it with 2 loops <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 214277418,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603433562
    },
    {
        "content": "<p>if this were a performance bottleneck, it'd be interesting to profile</p>",
        "id": 214277485,
        "sender_full_name": "Sean",
        "timestamp": 1603433654
    },
    {
        "content": "<p>would you like an example on using our bit vector data structure?</p>",
        "id": 214277687,
        "sender_full_name": "Sean",
        "timestamp": 1603433939
    },
    {
        "content": "<p>Yeah sure</p>",
        "id": 214277696,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603433963
    },
    {
        "content": "<p>It's simply:</p>\n<div class=\"codehilite\"><pre><span></span><code>struct bu_bitv *bv = bu_bitv_new(bot-&gt;num_vertices);\n...\nfor (i = 0; i &lt; bot-&gt;num_faces; i++) {\n    BU_BITSET(bv, bot-&gt;faces[(i*3)+X]); BU_BITSET(bv, bot-&gt;faces[(i*3)+Y]); BU_BITSET(bv, bot-&gt;faces[(i*3)+Z]);\n}\nfor (i = 0; i &lt; bot-&gt;num_vertices; i++) {\n    if (BU_BITTEST(bv, i)) {\n        ... do BB test...\n    }\n}\n</code></pre></div>\n\n\n<p>at least something like that.  that's pseudocode off the cuff, but hopefully enough to go on for figuring it out</p>",
        "id": 214278044,
        "sender_full_name": "Sean",
        "timestamp": 1603434368
    },
    {
        "content": "<p>oh, right and a final call to bu_bitv_free() when you're done of course.</p>",
        "id": 214278104,
        "sender_full_name": "Sean",
        "timestamp": 1603434460
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214176463\">said</a>:</p>\n<blockquote>\n<p>you could construct such a bot easily enough in C for testing.</p>\n</blockquote>\n<p>Done implementing and testing with some basic models. But how do I do this?</p>",
        "id": 214301120,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603452535
    },
    {
        "content": "<p>There is a file in src/proc-db called bottest.c  - you can look at that for how to create BoTs, and then deliberately create one with an extra vertex off in space somewhere.</p>",
        "id": 214309676,
        "sender_full_name": "starseeker",
        "timestamp": 1603457951
    },
    {
        "content": "<p>Ohh Thanks!</p>",
        "id": 214315253,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603460910
    },
    {
        "content": "<p>I think you can also do a bot adjust and just provide it additional vertices</p>",
        "id": 214341595,
        "sender_full_name": "Sean",
        "timestamp": 1603473958
    },
    {
        "content": "<p>yeah, that worked.  here's a simple bot with 2 extra vertices <span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> <br>\n<a href=\"/user_uploads/1549/67Gx184ZzghdNOGca1BoDh_x/test.g\">test.g</a></p>",
        "id": 214342319,
        "sender_full_name": "Sean",
        "timestamp": 1603474300
    },
    {
        "content": "<p>\"bot\" has no extra, \"bot.bad\" has 2 extra</p>",
        "id": 214342346,
        "sender_full_name": "Sean",
        "timestamp": 1603474318
    },
    {
        "content": "<p>see if you get a different bounding box for them both</p>",
        "id": 214342420,
        "sender_full_name": "Sean",
        "timestamp": 1603474343
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214342319\">said</a>:</p>\n<blockquote>\n<p>yeah, that worked.  here's a simple bot with 2 extra vertices <span class=\"user-mention silent\" data-user-id=\"353338\">Vikram Atreya</span> <br>\n<a href=\"/user_uploads/1549/67Gx184ZzghdNOGca1BoDh_x/test.g\">test.g</a></p>\n</blockquote>\n<p>Wow! Thank you for taking so much effort <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 214342472,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603474373
    },
    {
        "content": "<p>no problem, that's not something you'd have been able to discover and it just took a second.</p>",
        "id": 214343619,
        "sender_full_name": "Sean",
        "timestamp": 1603474935
    },
    {
        "content": "<p>for what it's worth to reproduce what I did, I created an object, an arb6 I think<br>\n  make arb6 arb6</p>",
        "id": 214343745,
        "sender_full_name": "Sean",
        "timestamp": 1603475011
    },
    {
        "content": "<p>then turned it into a bot:<br>\nfacetize arb6 bot</p>",
        "id": 214343785,
        "sender_full_name": "Sean",
        "timestamp": 1603475038
    },
    {
        "content": "<p>then extracted a version of the bot in text form:<br>\nget bot</p>",
        "id": 214343871,
        "sender_full_name": "Sean",
        "timestamp": 1603475065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214342420\">said</a>:</p>\n<blockquote>\n<p>see if you get a different bounding box for them both</p>\n</blockquote>\n<p>I get the same bounding box for both</p>",
        "id": 214343939,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603475100
    },
    {
        "content": "<p>made a copy:<br>\ncp bot bot.bad<br>\nthen adjusted the copy with a vertex list that had two more added:<br>\nadjust bot.bad V { { 0 0 0 } { -500 500 -1000 } { -500 -500 -1000 } { 500  500 -1000 } {1000 1000 1000} {-1000 -1000 -1000} }</p>",
        "id": 214344036,
        "sender_full_name": "Sean",
        "timestamp": 1603475156
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"353338\">Vikram Atreya</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214343939\">said</a>:</p>\n<blockquote>\n<p>I get the same bounding box for both</p>\n</blockquote>\n<p>You do?  and that's iterating over the vertices array or over the faces array?</p>",
        "id": 214344184,
        "sender_full_name": "Sean",
        "timestamp": 1603475228
    },
    {
        "content": "<p>the latest code will produce the same bounding box.</p>",
        "id": 214344222,
        "sender_full_name": "Sean",
        "timestamp": 1603475250
    },
    {
        "content": "<p>iterating over the vertices array only without consulting the faces array should result in a different box</p>",
        "id": 214344323,
        "sender_full_name": "Sean",
        "timestamp": 1603475295
    },
    {
        "content": "<p>if it doesn't, something's wrong :)</p>",
        "id": 214344338,
        "sender_full_name": "Sean",
        "timestamp": 1603475305
    },
    {
        "content": "<p>Iterating over the faces first , switching on the vertices in the bit vector and then iterating over the vertices</p>",
        "id": 214344341,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603475306
    },
    {
        "content": "<p>This is what I implemented</p>",
        "id": 214344385,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603475333
    },
    {
        "content": "<p>oh, haha, well then that's great -- didn't know you'd gotten that far!</p>",
        "id": 214344409,
        "sender_full_name": "Sean",
        "timestamp": 1603475343
    },
    {
        "content": "<p>You may want to do the control test though, and make sure you do get a different box if you iterate over all of them.</p>",
        "id": 214344466,
        "sender_full_name": "starseeker",
        "timestamp": 1603475376
    },
    {
        "content": "<p>Sure, I just have that code commented</p>",
        "id": 214344597,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603475424
    },
    {
        "content": "<p>yeah, set the bit vector to all on, see if you get a different box</p>",
        "id": 214344604,
        "sender_full_name": "Sean",
        "timestamp": 1603475428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214344604\">said</a>:</p>\n<blockquote>\n<p>yeah, set the bit vector to all on, see if you get a different box</p>\n</blockquote>\n<p>Nice , even easier</p>",
        "id": 214344648,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603475453
    },
    {
        "content": "<p>that'll be a good indication that it's definitely doing what it needs to be doing</p>",
        "id": 214344726,
        "sender_full_name": "Sean",
        "timestamp": 1603475497
    },
    {
        "content": "<p>I got the desired results , when I normally run my code it gives the same bounding box for both ,bot and bot.bad, whereas if I run it with all bits switched on in the bit vector I get different bounding boxes.</p>",
        "id": 214408110,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603512684
    },
    {
        "content": "<p>excellent <span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> !  sounds like you have a viable patch them.  do you know how to submit a patch?</p>",
        "id": 214411119,
        "sender_full_name": "Sean",
        "timestamp": 1603518505
    },
    {
        "content": "<p>I know how to use git, but no idea about svn.  But...<br>\n\"svn co <a href=\"https://brlcad.svn.sourceforge.net/svnroot/brlcad/brlcad/trunk\">https://brlcad.svn.sourceforge.net/svnroot/brlcad/brlcad/trunk</a> brlcad.edit<br>\ncd brlcad.edit</p>\n<h1>make changes</h1>\n<p>svn diff &gt; ~/my.patch</p>\n<h1>read ~/my.patch file with text editor</h1>\n<p>cd ..<br>\nsvn co <a href=\"https://brlcad.svn.sourceforge.net/svnroot/brlcad/brlcad/trunk\">https://brlcad.svn.sourceforge.net/svnroot/brlcad/brlcad/trunk</a> brlcad.fresh<br>\ncd brlcad.fresh<br>\npatch -p0 &lt; ~/my.patch\"</p>\n<h1>submit your patch file to our patches tracker</h1>\n<p>I found this on the website</p>",
        "id": 214411257,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603518877
    },
    {
        "content": "<p>it's very similar to git without github, you just get a diff and save that diff to a file</p>",
        "id": 214411264,
        "sender_full_name": "Sean",
        "timestamp": 1603518931
    },
    {
        "content": "<p>check it over to make sure it only includes what you intended, and then submit it</p>",
        "id": 214411265,
        "sender_full_name": "Sean",
        "timestamp": 1603518949
    },
    {
        "content": "<p>the steps on the website will work, but they're more rigorous having you make sure your patch will apply and compile cleanly, which is how you can prove to yourself that the patch is good.  probably not needed for a patch this small.</p>",
        "id": 214411311,
        "sender_full_name": "Sean",
        "timestamp": 1603519022
    },
    {
        "content": "<p>Okay cool</p>",
        "id": 214411366,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603519189
    },
    {
        "content": "<p>I created my first ticket <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 214412160,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603520920
    },
    {
        "content": "<p>Looks spot on, well done!</p>",
        "id": 214412314,
        "sender_full_name": "Sean",
        "timestamp": 1603521319
    },
    {
        "content": "<p>you know, it'd be really great if you could test performance before and after on something significant.  what platform are you on?</p>",
        "id": 214412370,
        "sender_full_name": "Sean",
        "timestamp": 1603521448
    },
    {
        "content": "<p>I've uploaded a detailed canonical test case you can try it on to <a href=\"https://brlcad.org/~sean/tmp/hairball.g\">https://brlcad.org/~sean/tmp/hairball.g</a></p>",
        "id": 214412419,
        "sender_full_name": "Sean",
        "timestamp": 1603521512
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214412370\">said</a>:</p>\n<blockquote>\n<p>you know, it'd be really great if you could test performance before and after on something significant.  what platform are you on?</p>\n</blockquote>\n<p>Ubuntu 18.04</p>",
        "id": 214412424,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603521555
    },
    {
        "content": "<p>if you're on linux/mac/bsd, a real quick way to test is using mged's command mode.</p>",
        "id": 214412426,
        "sender_full_name": "Sean",
        "timestamp": 1603521567
    },
    {
        "content": "<p>okay, yeah, ubuntu will work well, something like:</p>",
        "id": 214412430,
        "sender_full_name": "Sean",
        "timestamp": 1603521585
    },
    {
        "content": "<p>time mged -c hairball.c bb hairball</p>",
        "id": 214412471,
        "sender_full_name": "Sean",
        "timestamp": 1603521608
    },
    {
        "content": "<p>run that 3 times or so, note the average time.  then do it again without your patch, 3 times or so.</p>",
        "id": 214412477,
        "sender_full_name": "Sean",
        "timestamp": 1603521659
    },
    {
        "content": "<p>Sure , will do</p>",
        "id": 214412485,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603521695
    },
    {
        "content": "<p>oh, and we should eliminate the file I/O time.  for that,  can run something like: time mged -c hairball.c tops</p>",
        "id": 214412533,
        "sender_full_name": "Sean",
        "timestamp": 1603521819
    },
    {
        "content": "<p>In terms of real time there is a 0.5% improvement whereas in sys time it has 5% improvement <a href=\"/user_uploads/1549/oL9axDQxavi_9E50iHBkD1E7/time-stamps-bbox\">time-stamps-bbox</a></p>",
        "id": 214414668,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603526492
    },
    {
        "content": "<p>if you're on linux, <code>/usr/bin/time -v</code> has a lil more info</p>",
        "id": 214423530,
        "sender_full_name": "Erik",
        "timestamp": 1603540470
    },
    {
        "content": "<p>(use the path or it might grab the shell builtin which might not have the -v flag)</p>",
        "id": 214423540,
        "sender_full_name": "Erik",
        "timestamp": 1603540501
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> hm, these numbers don't add up...  You compiled BRL-CAD yourself right?  Do you know if you compiled with optimizations enabled?</p>",
        "id": 214430982,
        "sender_full_name": "Sean",
        "timestamp": 1603550179
    },
    {
        "content": "<p>if you didn't enable optimization, that would account for why the times are the same as there's not really any difference with the old or new without optimization.</p>",
        "id": 214431098,
        "sender_full_name": "Sean",
        "timestamp": 1603550396
    },
    {
        "content": "<p>just crunching some numbers, there are:</p>\n<div class=\"codehilite\"><pre><span></span><code>  1470000 vertices\n  8640000 face vertex indices\n  2940000 unique vertex indices\n</code></pre></div>",
        "id": 214432569,
        "sender_full_name": "Sean",
        "timestamp": 1603552322
    },
    {
        "content": "<p>barring coherency factors, we should expect a 1/3 reduction in time on this model</p>",
        "id": 214432696,
        "sender_full_name": "Sean",
        "timestamp": 1603552462
    },
    {
        "content": "<p>If you're recompiling, you could wrap the function in a better timer: </p>\n<div class=\"codehilite\"><pre><span></span><code>int64_t start = bu_gettime();\n .... do the bb calc ...\ndouble elapsed = bu_gettime() - start;\ndouble seconds = elapsed / 1000000.0;\nbu_log(&quot;time: %.2f\\n&quot;, seconds);\n</code></pre></div>",
        "id": 214432821,
        "sender_full_name": "Sean",
        "timestamp": 1603552630
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214430982\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"353338\">Vikram Atreya</span> hm, these numbers don't add up...  You compiled BRL-CAD yourself right?  Do you know if you compiled with optimizations enabled?</p>\n</blockquote>\n<p>I felt the same. By optimizations you mean compiling the new code I hope, Yes I did enable it. Let me check again</p>",
        "id": 214434413,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603554731
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214432821\">said</a>:</p>\n<blockquote>\n<p>If you're recompiling, you could wrap the function in a better timer: </p>\n</blockquote>\n<p>Yeah I'll do this</p>",
        "id": 214434442,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603554791
    },
    {
        "content": "<p>I get:</p>\n<div class=\"codehilite\"><pre><span></span><code> error: implicit declaration of function ‘bu_gettime’; did you mean ‘rt_get_timer’?\n</code></pre></div>\n\n\n<p>when I try to use  <code>bu_gettime()</code> when I try to compile it<br>\nI tried including time.h but its still the same happens</p>",
        "id": 214436218,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603557018
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> you need to #include \"bu/time.h\"</p>",
        "id": 214437794,
        "sender_full_name": "Sean",
        "timestamp": 1603558787
    },
    {
        "content": "<p>and by optimized build, that's a cmake flag -- did you specify any cmake flags?</p>",
        "id": 214437851,
        "sender_full_name": "Sean",
        "timestamp": 1603558807
    },
    {
        "content": "<p>specify cmake -DCMAKE_BUILD_TYPE=Release</p>",
        "id": 214437868,
        "sender_full_name": "Sean",
        "timestamp": 1603558829
    },
    {
        "content": "<p>No I haven't specified any flags , I just used cmake ..</p>",
        "id": 214437893,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603558871
    },
    {
        "content": "<p>okay, so that's why</p>",
        "id": 214437899,
        "sender_full_name": "Sean",
        "timestamp": 1603558881
    },
    {
        "content": "<p>huge difference.  default compile is designed for debugging, it's a completely unoptimized build.</p>",
        "id": 214437920,
        "sender_full_name": "Sean",
        "timestamp": 1603558906
    },
    {
        "content": "<p>an optimized build will typically be about twice as fast, depending on what's being measured</p>",
        "id": 214438001,
        "sender_full_name": "Sean",
        "timestamp": 1603558964
    },
    {
        "content": "<p>Using the bu_gettime, I get 0.07 sec for the old bounding box code and 0.04 sec for the new code. So 42% improvement <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 214438275,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603559306
    },
    {
        "content": "<p>I bet it's more than that on something more significant with 10's of millions of polygons</p>",
        "id": 214438582,
        "sender_full_name": "Sean",
        "timestamp": 1603559708
    },
    {
        "content": "<p>either way, that's really great vikram!  you cut the time in half on a routine that's used for ray tracing, collisions, bounding volumes, and more...</p>",
        "id": 214438605,
        "sender_full_name": "Sean",
        "timestamp": 1603559760
    },
    {
        "content": "<p>try an svn up and test performance again -- I made a minor adjustment to eliminate the intermediate variables</p>",
        "id": 214438765,
        "sender_full_name": "Sean",
        "timestamp": 1603559964
    },
    {
        "content": "<p>this is a colossal example why memory coherency is so important.  without i/o interrupts, memory allocations, file activity... it can process over 2.8M triangles in 4/100's of a second.  that's about 70M triangles per second.</p>",
        "id": 214439097,
        "sender_full_name": "Sean",
        "timestamp": 1603560432
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214438765\">said</a>:</p>\n<blockquote>\n<p>try an svn up and test performance again -- I made a minor adjustment to eliminate the intermediate variables</p>\n</blockquote>\n<p>Will do</p>",
        "id": 214439168,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603560507
    },
    {
        "content": "<p>I'll note that processing could also be vectorized and parallelized, which would raise the number to 2B triangles/sec if we did both.</p>",
        "id": 214439179,
        "sender_full_name": "Sean",
        "timestamp": 1603560527
    },
    {
        "content": "<p>(4-way simd, 8-way parallel)</p>",
        "id": 214439195,
        "sender_full_name": "Sean",
        "timestamp": 1603560543
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> would you mind deleting that deuces task since you knocked it out so well?</p>",
        "id": 214439613,
        "sender_full_name": "Sean",
        "timestamp": 1603561112
    },
    {
        "content": "<p>Sure...(lol)</p>",
        "id": 214439649,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603561184
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214438765\">said</a>:</p>\n<blockquote>\n<p>try an svn up and test performance again -- I made a minor adjustment to eliminate the intermediate variables</p>\n</blockquote>\n<p>The performance is the same</p>",
        "id": 214445278,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603568170
    },
    {
        "content": "<p>k, thanks for testing it.  Knew there was a chance the optimizer would've taken care of it automatically, but good to know it did (or at least it'd need to be a much much bigger mesh to notice).  What version compiler are you using?</p>",
        "id": 214470592,
        "sender_full_name": "Sean",
        "timestamp": 1603604299
    },
    {
        "content": "<p>After I did an svn up was I supposed to test it as it is, coz i replaced the code in bot.c with my code and then tested it :P</p>",
        "id": 214471947,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603606223
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214470592\">said</a>:</p>\n<blockquote>\n<p>What version compiler are you using?</p>\n</blockquote>\n<p>Cmake 3.12.1</p>",
        "id": 214472033,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603606346
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> was looking for you to test the committed patch, which means not switching the bot.c code.  Also, for version I think he was wanting to know your compiler version (gcc -v or clang --version)</p>",
        "id": 214491572,
        "sender_full_name": "starseeker",
        "timestamp": 1603635274
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"353338\">Vikram Atreya</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214471947\">said</a>:</p>\n<blockquote>\n<p>After I did an svn up was I supposed to test it as it is, coz i replaced the code in bot.c with my code and then tested it :P</p>\n</blockquote>\n<p>Your patch was applied, and then a few more changes were made.  So by \"I replaced the code\" mean you undid the changes and then tested? :)  Because, yeah -- what starseeker said -- the intent was just to update and try the latest code.  If you run \"svn diff\", what changes have you made?    (there shouldn't be a diff for the final test)</p>",
        "id": 214492109,
        "sender_full_name": "Sean",
        "timestamp": 1603635994
    },
    {
        "content": "<p>Wrong choice of words I guess, by replaced I meant I added the <code>bu_gettime()</code> parts to it and then checked, coz that was what I was using to check the performance. So the function was the same.</p>",
        "id": 214498932,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603644443
    },
    {
        "content": "<p>gcc version is 8.4.0</p>",
        "id": 214499545,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603645073
    },
    {
        "content": "<p>And if Im done with this should I pickup another Deuces task or could anyone guide me to some task that I could do?</p>",
        "id": 214505901,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603652121
    },
    {
        "content": "<p>yeah, I think that task is knocked out of the park, well done <span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span></p>",
        "id": 214610155,
        "sender_full_name": "Sean",
        "timestamp": 1603734901
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> since you have some decent coding skills, I suggest another coding task from our TODO file.  how about either 1) create a simple unit test for our rt_boolweave() function or 2) implement simple ray tracing support for points (the rt_pnts_prep() and rt_pnts_shot() function for pnts objects that have a radius).</p>",
        "id": 214612029,
        "sender_full_name": "Sean",
        "timestamp": 1603735684
    },
    {
        "content": "<p>Which one is tougher? :P</p>",
        "id": 214612274,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603735807
    },
    {
        "content": "<p>they're similar difficulty, both actually fairly simple from a quantity-of-code perspective (probably less than 50 lines to do either)</p>",
        "id": 214612395,
        "sender_full_name": "Sean",
        "timestamp": 1603735879
    },
    {
        "content": "<p>Okay then I will do 1) first</p>",
        "id": 214612430,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603735896
    },
    {
        "content": "<p>Basically #1 requires looking at the definition of that function (rt_boolweave), figuring out what the arguments mean, creating a small main() program like hello world, and make your program call rt_boolweave with some meaningful input.</p>",
        "id": 214612608,
        "sender_full_name": "Sean",
        "timestamp": 1603735969
    },
    {
        "content": "<p>now that I type it out and think about potential issues, #2 is probably slightly easier, but still #1 is doable if you think you understand how structs and data in C work</p>",
        "id": 214612745,
        "sender_full_name": "Sean",
        "timestamp": 1603736027
    },
    {
        "content": "<p>Anyways I wanted to do the tougher one</p>",
        "id": 214612941,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603736110
    },
    {
        "content": "<p>with rt_boolweave, the difficulty is going to be understanding what a struct seg and struct partition are so you can construct one by hand, so you can call rt_boolweave()</p>",
        "id": 214612947,
        "sender_full_name": "Sean",
        "timestamp": 1603736113
    },
    {
        "content": "<p>include/rt/boolweave.h has rt_boolweave's definition.  struct seg is in include/rt/seg.h and struct partition is annoyingly in include/rt/ray_partition.h</p>",
        "id": 214613159,
        "sender_full_name": "Sean",
        "timestamp": 1603736201
    },
    {
        "content": "<p>so first step would probably be to create a struct seg by hand and then calling rt_pr_seg() to print it</p>",
        "id": 214613213,
        "sender_full_name": "Sean",
        "timestamp": 1603736229
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214613213\">said</a>:</p>\n<blockquote>\n<p>so first step would probably be to create a struct seg by hand and then calling rt_pr_seg() to print it</p>\n</blockquote>\n<p>Okay</p>",
        "id": 214613254,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603736252
    },
    {
        "content": "<p>if you're not familiar with ray tracing, you might want to try using the 'nirt' tool in mged on some geometry -- there's a whole detailed guide at <a href=\"https://brlcad.org/~nouhrasofat/articles/en/nirt.php\">https://brlcad.org/~nouhrasofat/articles/en/nirt.php</a> that visualizes segments and partitions</p>",
        "id": 214613401,
        "sender_full_name": "Sean",
        "timestamp": 1603736317
    },
    {
        "content": "<p>I know the principles but not the code</p>",
        "id": 214613449,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603736352
    },
    {
        "content": "<p>basically, they're the pieces of geometry along a line</p>",
        "id": 214613459,
        "sender_full_name": "Sean",
        "timestamp": 1603736357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214613401\">said</a>:</p>\n<blockquote>\n<p>if you're not familiar with ray tracing, you might want to try using the 'nirt' tool in mged on some geometry -- there's a whole detailed guide at <a href=\"https://brlcad.org/~nouhrasofat/articles/en/nirt.php\">https://brlcad.org/~nouhrasofat/articles/en/nirt.php</a> that visualizes segments and partitions</p>\n</blockquote>\n<p>i will check this out</p>",
        "id": 214613472,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603736364
    },
    {
        "content": "<p>here's a visual depiction on something less abstract: <a href=\"https://brlcad.org/~nouhrasofat/books/en/images/tutorial_series_volIII_fig18.png\">https://brlcad.org/~nouhrasofat/books/en/images/tutorial_series_volIII_fig18.png</a></p>\n<div class=\"message_inline_image\"><a href=\"https://brlcad.org/~nouhrasofat/books/en/images/tutorial_series_volIII_fig18.png\"><img src=\"https://brlcad.org/~nouhrasofat/books/en/images/tutorial_series_volIII_fig18.png\"></a></div>",
        "id": 214613686,
        "sender_full_name": "Sean",
        "timestamp": 1603736471
    },
    {
        "content": "<p>in that oversimplified example, each of those labeled things is the evaluated partitions and segments you get after boolweave</p>",
        "id": 214613904,
        "sender_full_name": "Sean",
        "timestamp": 1603736571
    },
    {
        "content": "<p>Ohhkay, Let me explore it first then maybe I can ask you doubts if I have</p>",
        "id": 214614037,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603736640
    },
    {
        "content": "<p>yeah, sure -- check out the comments in the header that might help explain some of the terms.  Some may become more clear as you create one and try to use it in code.</p>",
        "id": 214614173,
        "sender_full_name": "Sean",
        "timestamp": 1603736690
    },
    {
        "content": "<p>In the seg structure , there is another structure bu_list, I'mnt able to understand what it is, Is it sort of a vector in c++ and what is it representing?</p>",
        "id": 214935734,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603958793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> excellent question.  yes, that's a generic list structure, and understandable how it will appear confusing as it relies on a really old feature of C (type aliasing).</p>",
        "id": 214990070,
        "sender_full_name": "Sean",
        "timestamp": 1603987953
    },
    {
        "content": "<p>bu_list is a doubly linked list structure that can be used as a simple list, a stack, or a queue.  with it, you can turn ANY existing structure into a list by simply putting the bu_list structure into that existing structure as the first element.</p>",
        "id": 214990364,
        "sender_full_name": "Sean",
        "timestamp": 1603988064
    },
    {
        "content": "<p>for example, say I have a simple:<br>\n    struct point {<br>\n        int x, y, z;<br>\n    };</p>",
        "id": 214990433,
        "sender_full_name": "Sean",
        "timestamp": 1603988099
    },
    {
        "content": "<p>I can make a linked list of points by making that:<br>\nstruct point {<br>\nstruct bu_list *l;<br>\nint x, y, z;<br>\n};</p>",
        "id": 214990538,
        "sender_full_name": "Sean",
        "timestamp": 1603988146
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/214990364\">said</a>:</p>\n<blockquote>\n<p>bu_list is a doubly linked list structure that can be used as a simple list, a stack, or a queue</p>\n</blockquote>\n<p>Yeah I was just figuring it out , like how you represent trees with pointers to the left and right node</p>",
        "id": 214990614,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603988172
    },
    {
        "content": "<p>struct point *my_list_of_pnts = malloc(sizeof(struct point) * 100);</p>",
        "id": 214990643,
        "sender_full_name": "Sean",
        "timestamp": 1603988187
    },
    {
        "content": "<p>Got it!</p>",
        "id": 214990824,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603988267
    },
    {
        "content": "<p>I can of course access, my_list_of_pnts[#] if we allocated that way, but what's more common is to just allocate one and then allocate another and then another, and doing that we can chain them all together</p>",
        "id": 214990837,
        "sender_full_name": "Sean",
        "timestamp": 1603988272
    },
    {
        "content": "<p>the BIG DIFFERENCE is what we can do with a struct point pointer</p>",
        "id": 214991022,
        "sender_full_name": "Sean",
        "timestamp": 1603988342
    },
    {
        "content": "<p>it can be simply cast to a bu_list</p>",
        "id": 214991066,
        "sender_full_name": "Sean",
        "timestamp": 1603988361
    },
    {
        "content": "<p>and we can then iterate over all list members using the forw and back pointers of the bu_list structure, and cast back to struct point to get at the parent structure</p>",
        "id": 214991227,
        "sender_full_name": "Sean",
        "timestamp": 1603988422
    },
    {
        "content": "<p>Yeah got how the struct works <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> , so is what is it representing, lengths of the ray where medium is changing?</p>",
        "id": 214991990,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603988765
    },
    {
        "content": "<p>or the segs themselves as a list</p>",
        "id": 214992043,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603988793
    },
    {
        "content": "<p>segs themselves as a list</p>",
        "id": 214993068,
        "sender_full_name": "Sean",
        "timestamp": 1603989198
    },
    {
        "content": "<p>each segment does represent a section of geometry where the ray intersected the geometry</p>",
        "id": 214993256,
        "sender_full_name": "Sean",
        "timestamp": 1603989273
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>               ________\n     ___       \\      /\n----|---|-------\\----/------&gt;\n    `---´        \\  /\n                  \\/\n</code></pre></div>\n\n\n<p>So a ray going through two objects will result in either two partitions with one segment each OR one partition with two segments.  Which depends how it was modeled and organized, if the objects were part of the same region or separate regions.</p>",
        "id": 214993848,
        "sender_full_name": "Sean",
        "timestamp": 1603989552
    },
    {
        "content": "<p>Nice, thanks!</p>",
        "id": 214998219,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603991467
    },
    {
        "content": "<p>To create hits, xrays, etc do we already have some functions to initialize them or do I give assign everything on my own, one by one?</p>",
        "id": 215007724,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603995589
    },
    {
        "content": "<p>Even soltab, how can i create an soltab variable, since it has so many things inside it</p>",
        "id": 215008403,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603995866
    },
    {
        "content": "<p>there are functions that do that, but I don't think you should use them</p>",
        "id": 215008815,
        "sender_full_name": "Sean",
        "timestamp": 1603996082
    },
    {
        "content": "<p>the goal is to test just rt_boolweave behavior as isolated as possible</p>",
        "id": 215008884,
        "sender_full_name": "Sean",
        "timestamp": 1603996106
    },
    {
        "content": "<p>if you call rt_shootray() for example, that will generate segments and partitions, but they'll already be evaluated via boolweave too and they'll only be a particular  organization of segments and partitions that it's used to creating, which doesn't explore robustness of rt_boolweave.</p>",
        "id": 215009060,
        "sender_full_name": "Sean",
        "timestamp": 1603996185
    },
    {
        "content": "<p>I suggest starting with just passing a single segment to boolweave and see what it does.<br>\nThey maybe try passing an empty segment list.  Then two segments that don't overlap, then two that do, etc.</p>",
        "id": 215009191,
        "sender_full_name": "Sean",
        "timestamp": 1603996250
    },
    {
        "content": "<p>If it crashes, report it and we can figure out if it something can/should be done about it.</p>",
        "id": 215009287,
        "sender_full_name": "Sean",
        "timestamp": 1603996297
    },
    {
        "content": "<p>Yeah , Im talking about creating the segment,  can i assign any random values to the member variables?</p>",
        "id": 215009418,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603996360
    },
    {
        "content": "<p>I don't know :)</p>",
        "id": 215009442,
        "sender_full_name": "Sean",
        "timestamp": 1603996379
    },
    {
        "content": "<p>probably not, maybe</p>",
        "id": 215009452,
        "sender_full_name": "Sean",
        "timestamp": 1603996386
    },
    {
        "content": "<p>it depeds</p>",
        "id": 215009459,
        "sender_full_name": "Sean",
        "timestamp": 1603996391
    },
    {
        "content": "<p>Okay <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 215009463,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603996392
    },
    {
        "content": "<p>could start with a NULL soltab and just see what it does</p>",
        "id": 215009588,
        "sender_full_name": "Sean",
        "timestamp": 1603996453
    },
    {
        "content": "<p>just as a general rule of thumb, you can probably start with everything zero-initialized and work your way filling things out as you go.<br>\npart of the task is figure out just what exactly is required to get a useful result.</p>",
        "id": 215009854,
        "sender_full_name": "Sean",
        "timestamp": 1603996596
    },
    {
        "content": "<p>conceptually, boolweave is deciding whether to merge or split line segments</p>",
        "id": 215009967,
        "sender_full_name": "Sean",
        "timestamp": 1603996646
    },
    {
        "content": "<p>Where do I find the actual code, <a href=\"https://brlcad.org/docs/api/de/d4d/boolweave_8h_source.html\">https://brlcad.org/docs/api/de/d4d/boolweave_8h_source.html</a>, it isn't here</p>",
        "id": 215010057,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603996688
    },
    {
        "content": "<p>so if you have</p>\n<div class=\"codehilite\"><pre><span></span><code>          |----------|  seg1\n|---------------|       seg2\n\n    if they are seg1 - seg2 then the result should be:\n                |----|\n    if they are seg2 - seg1 then the result should be:\n|---------|\n    if they are seg1 U seg2, then the result could be:\n|--------------------|\n    or it could be an overlap condition:\n|---------|-----|----|\n</code></pre></div>",
        "id": 215010352,
        "sender_full_name": "Sean",
        "timestamp": 1603996849
    },
    {
        "content": "<p>At least, I think.  it may be doing  more or less than that too as some processing is delegated to rt_boolfinal() and I don't recall where the responsibilities start/end.</p>",
        "id": 215010440,
        "sender_full_name": "Sean",
        "timestamp": 1603996917
    },
    {
        "content": "<p>so from an input perspective, do you see how the seg_in and seg_out fields can describe either seg1 and/or seg2 above as a \"struct hit\"?</p>",
        "id": 215010685,
        "sender_full_name": "Sean",
        "timestamp": 1603997048
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/215010685\">said</a>:</p>\n<blockquote>\n<p>so from an input perspective, do you see how the seg_in and seg_out fields can describe either seg1 and/or seg2 above as a \"struct hit\"?</p>\n</blockquote>\n<p>yeah</p>",
        "id": 215010786,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603997116
    },
    {
        "content": "<p>maybe start with a struct hit seg1hit = RT_HIT_INIT_ZERO; seg1hit.hit_dist = 1.0;</p>",
        "id": 215010913,
        "sender_full_name": "Sean",
        "timestamp": 1603997171
    },
    {
        "content": "<p>then make an out with hit_dist = 10.0;</p>",
        "id": 215010949,
        "sender_full_name": "Sean",
        "timestamp": 1603997191
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/215010913\">said</a>:</p>\n<blockquote>\n<p>struct hit seg1hit = RT_HIT_INIT_ZERO;</p>\n</blockquote>\n<p>This was the function I was asking for, to initialize it, thanks</p>",
        "id": 215011118,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603997259
    },
    {
        "content": "<p>you'll have to read the source code of rt_boolweave() to see if it reads any other fields of the seg_in/seg_out hit struct fields.</p>",
        "id": 215011134,
        "sender_full_name": "Sean",
        "timestamp": 1603997271
    },
    {
        "content": "<p>nearly all the complex structs have an *_INIT_ZERO macro.</p>",
        "id": 215011197,
        "sender_full_name": "Sean",
        "timestamp": 1603997287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/215011134\">said</a>:</p>\n<blockquote>\n<p>you'll have to read the source code of rt_boolweave() to see if it reads any other fields of the seg_in/seg_out hit struct fields.</p>\n</blockquote>\n<p>im not able to find this . Its not there in boolweave,h</p>",
        "id": 215011208,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603997295
    },
    {
        "content": "<p>to find what?</p>",
        "id": 215011259,
        "sender_full_name": "Sean",
        "timestamp": 1603997324
    },
    {
        "content": "<p>the source code <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span>  <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span> <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 215011337,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603997367
    },
    {
        "content": "<p>Its just the declaration given there</p>",
        "id": 215011357,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603997382
    },
    {
        "content": "<p>well the header would only have declaration and types <br>\n\"grep -r rt_boolweave src\" will show all the places it's used and where it's defined.</p>",
        "id": 215011490,
        "sender_full_name": "Sean",
        "timestamp": 1603997430
    },
    {
        "content": "<p>grep will tell you it lives in src/librt</p>",
        "id": 215011533,
        "sender_full_name": "Sean",
        "timestamp": 1603997451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"353338\">Vikram Atreya</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/215011208\">said</a>:</p>\n<blockquote>\n<p>im not able to find this . Its not there in boolweave,h</p>\n</blockquote>\n<p>Ooooh, the struggles of being a beginner <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 215011764,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603997545
    },
    {
        "content": "<p>this is a fairly advanced beginner task :)</p>",
        "id": 215012255,
        "sender_full_name": "Sean",
        "timestamp": 1603997793
    },
    {
        "content": "<p>Lol</p>",
        "id": 215012877,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1603998111
    },
    {
        "content": "<p>Its been a while ig, Nov is going to be quite busy for me due to end semester exams coming up <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 215967823,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1604774583
    },
    {
        "content": "<p>How I do I call rt_boolweave in a separate file,  I included \"bool.c\"  and wrote a  program, but that dint work out <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span> ?</p>",
        "id": 215967828,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1604774588
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> heh, you will not want to include bool.c - that's compiled into a library (librt).  you will want to create your own whatever.c, include the interface for librt (#include &lt;rt/boolweave.h&gt; in your file), and compile it making sure to link with -I include dirs and linking against librt.</p>",
        "id": 216226175,
        "sender_full_name": "Sean",
        "timestamp": 1605021588
    },
    {
        "content": "<p>It's probably best if you start with <a href=\"https://brlcad.org/wiki/Example_Application\">https://brlcad.org/wiki/Example_Application</a> and get that working first.</p>",
        "id": 216226281,
        "sender_full_name": "Sean",
        "timestamp": 1605021618
    },
    {
        "content": "<p>it's a single file example that has includes and links against libraries</p>",
        "id": 216226322,
        "sender_full_name": "Sean",
        "timestamp": 1605021642
    },
    {
        "content": "<p>Finally my exams are over and I hope to contribute as much as I can as we have vacation whole of December!</p>",
        "id": 218809267,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607073758
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/216226281\">said</a>:</p>\n<blockquote>\n<p>It's probably best if you start with <a href=\"https://brlcad.org/wiki/Example_Application\">https://brlcad.org/wiki/Example_Application</a> and get that working first.</p>\n</blockquote>\n<p>I was trying to get this working<br>\nbut when I run \"cc -I/usr/brlcad/include/brlcad -L/usr/brlcad/lib -o rtexample rtexample.c -lbu -lrt -lm\", it says  \"fatal error: common.h: No such file or directory\"</p>",
        "id": 218809324,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607073815
    },
    {
        "content": "<p>You need to  tell the compiler to include the directory with the common.h header in it.</p>",
        "id": 218826547,
        "sender_full_name": "starseeker",
        "timestamp": 1607085220
    },
    {
        "content": "<p>Does /usr/brlcad/include/brlcad have common.h?</p>",
        "id": 218826619,
        "sender_full_name": "starseeker",
        "timestamp": 1607085248
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/218826619\">said</a>:</p>\n<blockquote>\n<p>Does /usr/brlcad/include/brlcad have common.h?</p>\n</blockquote>\n<p>There is no \"brlcad\" folder in \"/usr/brlcad/include/\" <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218864735,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607103098
    },
    {
        "content": "<p>The common.h file is in /usr/brlcad/include/</p>",
        "id": 218865428,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607103401
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> Then that's the folder you need to put on the -I option  ... -I/usr/brlcad/include</p>",
        "id": 218971770,
        "sender_full_name": "Sean",
        "timestamp": 1607235285
    },
    {
        "content": "<p>Yeah tried that but still I get:- \"fatal error: common.h: No such file or directory\"<br>\nThe address of my brlcad folder is: <code> ~/brlcad  </code> ,  I tried with this -&gt; ( -I/brlcad/include ) as well but still dint work</p>",
        "id": 218972205,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607236175
    },
    {
        "content": "<p>you compiled and installed or just compiled?</p>",
        "id": 218972420,
        "sender_full_name": "Sean",
        "timestamp": 1607236512
    },
    {
        "content": "<p>I didnt get you</p>",
        "id": 218972482,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607236602
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"353338\">Vikram Atreya</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/218972482\">said</a>:</p>\n<blockquote>\n<p>I didnt get you</p>\n</blockquote>\n<p>You're compiling against BRL-CAD.  Where did the BRL-CAD that you're going to be compiling against come from?  Did you compile it?  Did you install it?</p>",
        "id": 218972742,
        "sender_full_name": "Sean",
        "timestamp": 1607237081
    },
    {
        "content": "<p><a href=\"https://brlcad.org/wiki/Building_from_SVN\">https://brlcad.org/wiki/Building_from_SVN</a><br>\nI had followed this when i installed BRL-CAD,So I think I compiled it<br>\nIm not fully clear about terms like compiling and installing, but ill get it slowly I hope</p>",
        "id": 218972920,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607237406
    },
    {
        "content": "<p>What was the last command from those instructions that you did?</p>",
        "id": 218972936,
        "sender_full_name": "Sean",
        "timestamp": 1607237508
    },
    {
        "content": "<p>make test</p>",
        "id": 218973028,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607237671
    },
    {
        "content": "<p>So note those are under the \"compile\" instructions.  You've only compiled, not installed, which is an optional step later.</p>",
        "id": 218973042,
        "sender_full_name": "Sean",
        "timestamp": 1607237731
    },
    {
        "content": "<p>so   you need to specify the path to your build folder</p>",
        "id": 218973044,
        "sender_full_name": "Sean",
        "timestamp": 1607237744
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/guidance.20for.20the.20first.20contribution/near/218973042\">said</a>:</p>\n<blockquote>\n<p>So note those are under the \"compile\" instructions.  You've only compiled, not installed, which is an optional step later.</p>\n</blockquote>\n<p>Got it</p>",
        "id": 218973083,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607237767
    },
    {
        "content": "<p>that will be wherever you are running make, there is an include folder and an include/brlcad folder there.   That's what you need to specify to the -I include directory option</p>",
        "id": 218973085,
        "sender_full_name": "Sean",
        "timestamp": 1607237781
    },
    {
        "content": "<p>Yeah, now I see the brlcad folder in include<br>\nI was looking in the wrong include folder before</p>",
        "id": 218973136,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1607237921
    },
    {
        "content": "<p>Hello everyone!<br>\nToday is the last day of GSoC and I wanted to express my gratitude to all of you for helping me reach here. When I was planning to start contributing to an organization last October, I had very little knowledge of development and just knew the basics of C++. I tried to reach out to a few organizations before I came to know about BRL-CAD and failed to even compile their code. I was just throwing a stone when I messaged in the new members channel here. The response I received was very helpful and <span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> <span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> literally guided me at every step to get the code compiled. It was the first time in my life that I had compiled a codebase. Even after that everyone was so helpful when I was overwhelmed when I saw the code for the first time, everything was greek and Latin, and I was scared that open source was too tough for me. The guidance I received was so warm, that it really encouraged me to put in more effort and seriously contribute. I was so happy after I submitted my the patch to increase speed of the bounding box algorithm, also the first PR in my life that I decided I would like to apply for GSoC in BRL-CAD. From there on there were a few breaks and tough challenges, compiling with OpenCL enabled and the raytrace tests, and was pretty scared if I could do GSoC. Finally, I found the perfect task for me to do in GSoC after I implemented the overwrite functionality for dbconcat. <br>\n    Getting selected for GSoC was a great feeling and achievement for me, pursuing mechanical engineering as my major, this was validation that I knew how to code and from there on it was a wonderful journey for all the 10 weeks. I really enjoyed solving problems, finding better methods, implementing them and debugging them.  Finally a special thanks to <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> for helping me and guiding me all the way through right from the beginning, with so much patience, I still remember asking what the difference was between compiling and installing, it embarasses me now but all of it was part of the journey. I will take a small break and then surely contribute again. I'll also try to participate in GSoC next year and do something even more exciting. <br>\nThank you everyone for all the kindness</p>",
        "id": 250392892,
        "sender_full_name": "Vikram Atreya",
        "timestamp": 1629743684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"353338\">@Vikram Atreya</span> You've been amazing.  Thank you for all your efforts this GSoC.  Excellent progress on the project and your development learning and developing the infrastructure has been impressive.  It's been a wonderful exemplary journey and hopefully a rewarding one that you'll carry with you.  Open source is something you can do, whether with BRL-CAD or other projects, for years to come personally and professionally, taking on projects you find interesting, rewarding.</p>",
        "id": 250443729,
        "sender_full_name": "Sean",
        "timestamp": 1629782669
    }
]