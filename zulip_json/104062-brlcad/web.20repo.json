[
    {
        "content": "<p>I think I got the github web repo set up to use LFS (anyone with existing forks/checkouts will probably have to rebase).</p>\n<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  I don't think I can see the org capacity settings for LFS - if I'm reading the docs right it's actually a 1GB size limit, so I'm not sure how useful that's really going to be...</p>",
        "id": 209230453,
        "sender_full_name": "starseeker",
        "timestamp": 1599407175
    },
    {
        "content": "<p>lets see if it's actually a limit</p>",
        "id": 209237845,
        "sender_full_name": "Sean",
        "timestamp": 1599419969
    },
    {
        "content": "<p>yea i also read that 1 gb is the limit for lfs for orgs if i remember correctly</p>",
        "id": 209238013,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1599420215
    },
    {
        "content": "<p>I'm just wondering if it's a hard limit.  They used to have documented that there was a limit on repos to, but then that turned out to just be documentation, not an actual limit imposed.</p>",
        "id": 209238067,
        "sender_full_name": "Sean",
        "timestamp": 1599420271
    },
    {
        "content": "<p>it was a soft limit to get communities to at least try to not use too much space, not a limit on orgs that genuinely need to go over</p>",
        "id": 209238087,
        "sender_full_name": "Sean",
        "timestamp": 1599420322
    },
    {
        "content": "<p>could be a hard limit.  easy enough to find out.</p>",
        "id": 209238096,
        "sender_full_name": "Sean",
        "timestamp": 1599420341
    },
    {
        "content": "<p>Here's 1GB of docs... <a href=\"https://brlcad.org/BRL-CAD_V_and_V_Documentation.7z\">https://brlcad.org/BRL-CAD_V_and_V_Documentation.7z</a></p>",
        "id": 209238151,
        "sender_full_name": "Sean",
        "timestamp": 1599420390
    },
    {
        "content": "<p>is this seriously a 1gb file?</p>",
        "id": 209238168,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1599420445
    },
    {
        "content": "<p>1024172845 bytes, 977M</p>",
        "id": 209238257,
        "sender_full_name": "Sean",
        "timestamp": 1599420602
    },
    {
        "content": "<p>ooh</p>",
        "id": 209238295,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1599420645
    },
    {
        "content": "<p>nearly all our docs related to verification and validation, official report published, user docs, administrative docs, etc.</p>",
        "id": 209238554,
        "sender_full_name": "Sean",
        "timestamp": 1599421079
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> What's up with all the web repo closures?  Some of the ones outstanding needed work while others were conflicting efforts (some that broke others).  Did you clean them up?</p>",
        "id": 209259347,
        "sender_full_name": "Sean",
        "timestamp": 1599457674
    },
    {
        "content": "<p>I didn't deliberately close them - it looks like I may have inadvertently done that while enabling the LFS bits.</p>",
        "id": 209308507,
        "sender_full_name": "starseeker",
        "timestamp": 1599493444
    },
    {
        "content": "<p>Crud.</p>",
        "id": 209308728,
        "sender_full_name": "starseeker",
        "timestamp": 1599493628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> I tried to restore the repository to the point before I made changes, but doesn't seem to have allowed me to reopen the pull requests.</p>",
        "id": 209312330,
        "sender_full_name": "starseeker",
        "timestamp": 1599496481
    },
    {
        "content": "<p>They might have to be resubmitted, but the repo history should now again match what's being used in the forks</p>",
        "id": 209312578,
        "sender_full_name": "starseeker",
        "timestamp": 1599496692
    },
    {
        "content": "<p>We'll have to decide what we're going to do about that at some point - it looks like to \"properly\" migrate the repo to LFS the change is disruptive.   Maybe the better thing to do is just make a separate repo for the timeline and other doc heavy content and then have the web repo treat it as a submodule?</p>",
        "id": 209312916,
        "sender_full_name": "starseeker",
        "timestamp": 1599496981
    },
    {
        "content": "<p>I guess the thing to do is post an explanatory note on the closed pull requests so people know to resubmit them?</p>",
        "id": 209313187,
        "sender_full_name": "starseeker",
        "timestamp": 1599497202
    },
    {
        "content": "<p>I doubt people will, super confusing, but maybe.  Seems odd that it can't be undone -- this didn't work?  <a href=\"https://help.github.jp/enterprise/2.11/user/articles/deleting-and-restoring-branches-in-a-pull-request/\">https://help.github.jp/enterprise/2.11/user/articles/deleting-and-restoring-branches-in-a-pull-request/</a></p>",
        "id": 209328294,
        "sender_full_name": "Sean",
        "timestamp": 1599513678
    },
    {
        "content": "<p>in theory the branch and the commits should still be there</p>",
        "id": 209328302,
        "sender_full_name": "Sean",
        "timestamp": 1599513702
    },
    {
        "content": "<p>I doubt it because of the way I had to restore.</p>",
        "id": 209328318,
        "sender_full_name": "starseeker",
        "timestamp": 1599513722
    },
    {
        "content": "<p>what do you mean?  what'd you do?  o.O</p>",
        "id": 209328373,
        "sender_full_name": "Sean",
        "timestamp": 1599513817
    },
    {
        "content": "<p>yeah, it's saying \"this branch has no history in common with BRL-CAD:master\" .. so it won't allow them to be reopened</p>",
        "id": 209328423,
        "sender_full_name": "Sean",
        "timestamp": 1599513852
    },
    {
        "content": "<p>When I did the LFS migration I rewrote part of the Git history - when you pointed out that closed the patches I put back an older forked copy without those changes, but Github doesn't recognize that the old copy is back</p>",
        "id": 209328458,
        "sender_full_name": "starseeker",
        "timestamp": 1599513929
    },
    {
        "content": "<p>oh man</p>",
        "id": 209328505,
        "sender_full_name": "Sean",
        "timestamp": 1599513964
    },
    {
        "content": "<p>The SHA1s should match again, so the forks will \"see\" the same repo they forked from, but Github doesn't know that.</p>",
        "id": 209328514,
        "sender_full_name": "starseeker",
        "timestamp": 1599513980
    },
    {
        "content": "<p>My apologies - I should have foreseen that as a possible consequence, but it didn't occur to me</p>",
        "id": 209328624,
        "sender_full_name": "starseeker",
        "timestamp": 1599514164
    },
    {
        "content": "<p>according to the closed pull requests, it does know and sees them as yet another forced push that doesn't match the original</p>",
        "id": 209328625,
        "sender_full_name": "Sean",
        "timestamp": 1599514165
    },
    {
        "content": "<p>No, those are both from yesterday - the revert push was earlier today</p>",
        "id": 209328692,
        "sender_full_name": "starseeker",
        "timestamp": 1599514255
    },
    {
        "content": "<p>ah, hrm</p>",
        "id": 209328696,
        "sender_full_name": "Sean",
        "timestamp": 1599514264
    },
    {
        "content": "<p>If you check out one of the forks, and clone the current repo, and look at the SHA1 in the logs, you should see that they match now.</p>",
        "id": 209328714,
        "sender_full_name": "starseeker",
        "timestamp": 1599514319
    },
    {
        "content": "<p>That wiped out the timeline commits of course, but that won't matter - the key point is the history that the forks are using should be back.  It's just not a situation the github pull system was designed for.</p>",
        "id": 209328771,
        "sender_full_name": "starseeker",
        "timestamp": 1599514404
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/questions/62479813/github-how-to-re-open-a-pull-request-when-the-branch-has-no-more-history-in-com\">https://stackoverflow.com/questions/62479813/github-how-to-re-open-a-pull-request-when-the-branch-has-no-more-history-in-com</a></p>",
        "id": 209328832,
        "sender_full_name": "Sean",
        "timestamp": 1599514468
    },
    {
        "content": "<p>Can I do that though, or does the submitter need to do it?</p>",
        "id": 209328869,
        "sender_full_name": "starseeker",
        "timestamp": 1599514531
    },
    {
        "content": "<p>I wouldn't think they should need to.  The info should be accessible.</p>",
        "id": 209328936,
        "sender_full_name": "Sean",
        "timestamp": 1599514609
    },
    {
        "content": "<p>looks like you might have to do it locally, commit to a new branch, push that new branch, and then do a PR from the new branch (i.e., recreate it on their behalf).. which is probably as much work as simply cherry picking all their commits and merging properly</p>",
        "id": 209329025,
        "sender_full_name": "Sean",
        "timestamp": 1599514776
    },
    {
        "content": "<p>Except I thought the pull requests weren't ready to be merged?</p>",
        "id": 209329073,
        "sender_full_name": "starseeker",
        "timestamp": 1599514820
    },
    {
        "content": "<p>man sh!t happens, but that really sucks... there's at least weeks of work in those pull requests.</p>",
        "id": 209329079,
        "sender_full_name": "Sean",
        "timestamp": 1599514847
    },
    {
        "content": "<p>The work isn't lost</p>",
        "id": 209329092,
        "sender_full_name": "starseeker",
        "timestamp": 1599514874
    },
    {
        "content": "<p>That's an aspect of Git I'm not familiar with, but I can try to grab their patches and submit pull requests.</p>",
        "id": 209329154,
        "sender_full_name": "starseeker",
        "timestamp": 1599514937
    },
    {
        "content": "<p>they were all in different states.  some just simply hadn't been reviewed or tested.  some had minor conflicts because another pull request made theirs non-automatic.  others had undesirable changes mixed in with super desirable changes (like the big front-page cleanup -- it was awesome except it changed the menu not for the better imho)</p>",
        "id": 209329158,
        "sender_full_name": "Sean",
        "timestamp": 1599514946
    },
    {
        "content": "<p>I'm just leery of screwing something up even worse.</p>",
        "id": 209329166,
        "sender_full_name": "starseeker",
        "timestamp": 1599514964
    },
    {
        "content": "<p>probably safe if you don't use a force flag, no history rewriting... ;)</p>",
        "id": 209329172,
        "sender_full_name": "Sean",
        "timestamp": 1599514989
    },
    {
        "content": "<p>I still don't even fully understand what happened.. this is not something I've seen before.</p>",
        "id": 209329184,
        "sender_full_name": "Sean",
        "timestamp": 1599515040
    },
    {
        "content": "<p>Well, let me try one and see - so I do a clone, use gh pr to get the patch, apply it, and then push?  Or do I fork to my own account, apply the patch, and submit from my own account?</p>",
        "id": 209329222,
        "sender_full_name": "starseeker",
        "timestamp": 1599515048
    },
    {
        "content": "<p>It's my screw-up, pure and simple.</p>",
        "id": 209329229,
        "sender_full_name": "starseeker",
        "timestamp": 1599515064
    },
    {
        "content": "<p>maybe wait and see if github catches up and lets them be reopened automatically</p>",
        "id": 209329235,
        "sender_full_name": "Sean",
        "timestamp": 1599515090
    },
    {
        "content": "<p>could be a latent update process that takes time for it to notice and update all caches</p>",
        "id": 209329245,
        "sender_full_name": "Sean",
        "timestamp": 1599515106
    },
    {
        "content": "<p>I tried to make LFS the default for our PDF files, and before doing that I scrubbed four spam PDFs out of the history so they wouldn't get fossilized in LFS.  Then I did a migrate so the big existing PDFs would also be on LFS.  Both of those ended up rewriting the history, which broke the SHA1s, which broke the pull requests.</p>",
        "id": 209329263,
        "sender_full_name": "starseeker",
        "timestamp": 1599515149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> <a href=\"#narrow/stream/104062-general/topic/web.20repo/near/209329222\">said</a>:</p>\n<blockquote>\n<p>Well, let me try one and see - so I do a clone, use gh pr to get the patch, apply it, and then push?  Or do I fork to my own account, apply the patch, and submit from my own account?</p>\n</blockquote>\n<p>yeah, that I'm not sure about</p>",
        "id": 209329320,
        "sender_full_name": "Sean",
        "timestamp": 1599515181
    },
    {
        "content": "<p>I didn't save quite an old enough backup, so I had to restore the history from one of the forks - that worked, but may not have saved any internal pull request info github stashed in the repo (if that's what it needs to \"restore\" the pull requests.)</p>",
        "id": 209329338,
        "sender_full_name": "starseeker",
        "timestamp": 1599515237
    },
    {
        "content": "<p><a href=\"https://github.com/letsencrypt/website/issues/639\">https://github.com/letsencrypt/website/issues/639</a></p>",
        "id": 209329410,
        "sender_full_name": "Sean",
        "timestamp": 1599515314
    },
    {
        "content": "<p>seems to indicate it updates slowly, might be reopenable on a case-by-case given enough time</p>",
        "id": 209329421,
        "sender_full_name": "Sean",
        "timestamp": 1599515332
    },
    {
        "content": "<p>OK, so give it a week or so looks like?</p>",
        "id": 209329442,
        "sender_full_name": "starseeker",
        "timestamp": 1599515365
    },
    {
        "content": "<p>3 days should be plenty</p>",
        "id": 209329449,
        "sender_full_name": "Sean",
        "timestamp": 1599515385
    },
    {
        "content": "<p>if it's not by then, I suggest we simply work on cherry-picking all the commits in those half dozen prs to close them out.  shouldn't take more than a day I'd hope to review and cull the undesirable bits and merge the rest.</p>",
        "id": 209329536,
        "sender_full_name": "Sean",
        "timestamp": 1599515503
    },
    {
        "content": "<p>Sounds like a plan, although I'm not skilled enough at web stuff to do those merges with any assurance of a working output...</p>",
        "id": 209329657,
        "sender_full_name": "starseeker",
        "timestamp": 1599515640
    },
    {
        "content": "<p>Or do you mean cherry pick them as branches on the main repo and merge from there?</p>",
        "id": 209329709,
        "sender_full_name": "starseeker",
        "timestamp": 1599515676
    },
    {
        "content": "<p>I mean cherry pick and merge/commit the work (i.e., lets just process the pull requests) ... or alternatively create new PRs with the commits, so it doesn't get lose out-of-sight-out-of-mind.</p>",
        "id": 209329800,
        "sender_full_name": "Sean",
        "timestamp": 1599515800
    },
    {
        "content": "<p>it's pretty simple to clone out the repo and test from some ~/public_html subdirs, or even clone locally and point firefox.  I don't think we have any remaining dynamic bits.</p>",
        "id": 209329820,
        "sender_full_name": "Sean",
        "timestamp": 1599515837
    },
    {
        "content": "<p>Well, the cute trick doesn't work:</p>\n<p>gh pr checkout 37<br>\ngit push origin HEAD:refs/pull/37/head</p>\n<p>! [remote rejected] HEAD -&gt; refs/pull/37/head (deny updating a hidden ref)<br>\nerror: failed to push some refs to 'git@github.com:BRL-CAD/web.git'</p>",
        "id": 209329834,
        "sender_full_name": "starseeker",
        "timestamp": 1599515864
    },
    {
        "content": "<p>Can't restore the pr that way</p>",
        "id": 209329884,
        "sender_full_name": "starseeker",
        "timestamp": 1599515891
    },
    {
        "content": "<p>what was this all about? git pull origin master --allow-unrelated-histories</p>",
        "id": 209329896,
        "sender_full_name": "Sean",
        "timestamp": 1599515941
    },
    {
        "content": "<p>might that tell origin to allow them?</p>",
        "id": 209329912,
        "sender_full_name": "Sean",
        "timestamp": 1599515980
    },
    {
        "content": "<p>That will pull the upstream into a locally altered copy of the repository, even though the local SHA1s don't have anything to do with the upstream</p>",
        "id": 209329915,
        "sender_full_name": "starseeker",
        "timestamp": 1599515989
    },
    {
        "content": "<p>\"push\" would try to send something back to origin, but I did that accidentally once working with my local cad conversion  tests - it really made a mess</p>",
        "id": 209329967,
        "sender_full_name": "starseeker",
        "timestamp": 1599516029
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>   Will this work?   <a href=\"https://github.com/BRL-CAD/web/pull/50\">https://github.com/BRL-CAD/web/pull/50</a></p>",
        "id": 209330766,
        "sender_full_name": "starseeker",
        "timestamp": 1599517047
    },
    {
        "content": "<p>Doesn't re-create the comment history in the pull request, but if We link to the closed PR in the comment everything's still tied together.</p>",
        "id": 209330846,
        "sender_full_name": "starseeker",
        "timestamp": 1599517179
    },
    {
        "content": "<p>If that's acceptable that's not too hard to do, and should restore all of them - it'll show them coming from my account, but it looks like the commits are all correctly attributed to their actual author.</p>\n<p>Main problem would be if there is more work done by the original authors in their downstream forks - in that case they'd still need to make a new pull request.</p>",
        "id": 209331448,
        "sender_full_name": "starseeker",
        "timestamp": 1599517989
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> I think I've got everything resubmitted as pull requests</p>",
        "id": 209697173,
        "sender_full_name": "starseeker",
        "timestamp": 1599766143
    },
    {
        "content": "<p>okay, thank for the reparo .. I really need to spend a day merging outstanding requests soon. :/</p>",
        "id": 209737505,
        "sender_full_name": "Sean",
        "timestamp": 1599794494
    },
    {
        "content": "<p>/me nods.  At some point we also need to decide what to do about LFS and scrubbing out spam files from the history (this time with an awareness of the consequences).  Even with the pull requests closed cleaning that up will still inevitably diverge the repo from external forks regardless - people will need to \"re-fork\" and rebase.  We <em>might</em> be able to turn on LFS just for files going forward, but when I tried that each clone operation printed out a list of files that matched the LFS filters that hadn't been migrated (harmless but rather annoying).  Even if we did that though, it still would leave the spam files in the existing repo history.</p>",
        "id": 209773570,
        "sender_full_name": "starseeker",
        "timestamp": 1599827226
    },
    {
        "content": "<p>Also, do we want to consider using submodules for specific pieces of the website (like the timeline) so we can alter portions of the site more radically without disturbing the full history?</p>",
        "id": 209773808,
        "sender_full_name": "starseeker",
        "timestamp": 1599827354
    }
]