[
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  is there any python interface of brlcad or any python files in the project?</p>",
        "id": 197370897,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589348594
    },
    {
        "content": "<p>if there isnt any, should i try adding a feature in python  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> ?(i will start contributing in C++/C )</p>",
        "id": 197371410,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589349356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> there is an unofficial python interface from a couple years ago that you can find by searching.  there's a development version not committed yet to the repo, which you can find in our patches tracker.   You could contribute by applying that to current trunk sources,  make any changes necessary to get it working again.</p>",
        "id": 197374491,
        "sender_full_name": "Sean",
        "timestamp": 1589352967
    },
    {
        "content": "<p>@Sean Where to search for that? Can you give me a link to the patches<br>\ntracker?</p>",
        "id": 197387482,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589362145
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/development/near/197387482\">said</a>:</p>\n<blockquote>\n<p>@Sean Where to search for that? Can you give me a link to the patches<br>\ntracker?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> how have you tried looking for it?</p>",
        "id": 197432026,
        "sender_full_name": "Sean",
        "timestamp": 1589384715
    },
    {
        "content": "<p>I don't know where to start looking from</p>",
        "id": 197432770,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589384910
    },
    {
        "content": "<p>heh, really?  so you're saying you don't know how to search for things?</p>",
        "id": 197433144,
        "sender_full_name": "Sean",
        "timestamp": 1589385077
    },
    {
        "content": "<p>I don't mean to say that</p>",
        "id": 197434111,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589385443
    },
    {
        "content": "<p>I just don't know where to look for</p>",
        "id": 197434147,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589385453
    },
    {
        "content": "<p>so you're saying you know how to search for things but don't know where to search for things?  I'm not sure I understand how that's possible.  please explain.</p>",
        "id": 197434421,
        "sender_full_name": "Sean",
        "timestamp": 1589385558
    },
    {
        "content": "<p>Okay</p>",
        "id": 197435053,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589385825
    },
    {
        "content": "<p>I am going to try and search in places I can find</p>",
        "id": 197435136,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589385850
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/development/near/197374491\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> there is an unofficial python interface from a couple years ago that you can find by searching.  there's a development version not committed yet to the repo, which you can find in our patches tracker.   You could contribute by applying that to current trunk sources,  make any changes necessary to get it working again.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  i found the patch, is that all?</p>",
        "id": 197438445,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589387206
    },
    {
        "content": "<p>I couldn't complete my message earlier</p>",
        "id": 197446142,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589390273
    },
    {
        "content": "<p>there's an unofficial python interface AND there's a patch, they are separate things.  glad you found the patch as that was the part that you could review and try to get working on the latest sources</p>",
        "id": 197447207,
        "sender_full_name": "Sean",
        "timestamp": 1589390623
    },
    {
        "content": "<p>So they are seperate things. Thanks for the info.</p>",
        "id": 197447329,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589390659
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  By unofficial, you mean, that I will not find it in the source forge repo?</p>",
        "id": 197447364,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589390683
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>, is this the one you were talking about?<br>\n<a href=\"https://brlcad.org/wiki/User:Krajkreddy/GSOC14/proposal\">https://brlcad.org/wiki/User:Krajkreddy/GSOC14/proposal</a></p>",
        "id": 197464404,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589398272
    },
    {
        "content": "<p>the unofficial python interface?</p>",
        "id": 197464426,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589398282
    },
    {
        "content": "<p>i also found a pip package related to this</p>",
        "id": 197464655,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589398380
    },
    {
        "content": "<p>python-brlcad</p>",
        "id": 197464666,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589398384
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/development/near/197447364\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span>  By unofficial, you mean, that I will not find it in the source forge repo?</p>\n</blockquote>\n<p>Correct.</p>\n<p>And the unofficial one is the pip package you found from kanzure.</p>",
        "id": 197465520,
        "sender_full_name": "Sean",
        "timestamp": 1589398799
    },
    {
        "content": "<p>i found the inerface you were talking about, i think</p>",
        "id": 197465653,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589398855
    },
    {
        "content": "<p>but i dont think i found the right patch in the patches tracker</p>",
        "id": 197465703,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589398877
    },
    {
        "content": "<p>why do you say that?</p>",
        "id": 197465734,
        "sender_full_name": "Sean",
        "timestamp": 1589398891
    },
    {
        "content": "<p>i got a patch called superell.patch</p>",
        "id": 197465793,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589398920
    },
    {
        "content": "<p>is that the one you were talking about?</p>",
        "id": 197466029,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399003
    },
    {
        "content": "<p>where did you get that from?</p>",
        "id": 197466207,
        "sender_full_name": "Sean",
        "timestamp": 1589399065
    },
    {
        "content": "<p><a href=\"https://sourceforge.net/p/brlcad/patches/277/\">https://sourceforge.net/p/brlcad/patches/277/</a></p>",
        "id": 197466238,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399079
    },
    {
        "content": "<p><span aria-label=\"shock\" class=\"emoji emoji-1f628\" role=\"img\" title=\"shock\">:shock:</span></p>",
        "id": 197466253,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399087
    },
    {
        "content": "<p>I don't see any mention of python whatsoever</p>",
        "id": 197466279,
        "sender_full_name": "Sean",
        "timestamp": 1589399105
    },
    {
        "content": "<p>i searched for python and it returned this</p>",
        "id": 197466308,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399124
    },
    {
        "content": "<p>ah, that's because I was mistaken -- it's right there in the description.</p>",
        "id": 197466355,
        "sender_full_name": "Sean",
        "timestamp": 1589399151
    },
    {
        "content": "<p>hmm</p>",
        "id": 197466413,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399165
    },
    {
        "content": "<p>hold on, let me look</p>",
        "id": 197466705,
        "sender_full_name": "Sean",
        "timestamp": 1589399291
    },
    {
        "content": "<p>So, here's a good write-up on the python interface -- you could try and see if you can get it working by yourself:  <a href=\"https://medium.com/@Mr_Jaypee/brl-cads-python-procedural-geometry-990e3c286a63\">https://medium.com/@Mr_Jaypee/brl-cads-python-procedural-geometry-990e3c286a63</a></p>",
        "id": 197466750,
        "sender_full_name": "Sean",
        "timestamp": 1589399318
    },
    {
        "content": "<p>This was the most recent work: <a href=\"https://github.com/Killthebug/python-brlcad/\">https://github.com/Killthebug/python-brlcad/</a></p>",
        "id": 197466963,
        "sender_full_name": "Sean",
        "timestamp": 1589399405
    },
    {
        "content": "<p>Log of that work is here: <a href=\"https://brlcad.org/wiki/User:Schindler97/GSoC18/Log\">https://brlcad.org/wiki/User:Schindler97/GSoC18/Log</a></p>",
        "id": 197466994,
        "sender_full_name": "Sean",
        "timestamp": 1589399422
    },
    {
        "content": "<p>i would try my best to get it working  if i can</p>",
        "id": 197467003,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399429
    },
    {
        "content": "<p>i have to go in a few minutes</p>",
        "id": 197467120,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399513
    },
    {
        "content": "<p>i have classes tomorrow so before that i will take a look in the above links</p>",
        "id": 197467220,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399540
    },
    {
        "content": "<p>or else tomorrow</p>",
        "id": 197467236,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399550
    },
    {
        "content": "<p>it looks like the one pending patch I was thinking of is already integrated, so nothing to do there.  the other one appears to be on that github repo</p>",
        "id": 197467593,
        "sender_full_name": "Sean",
        "timestamp": 1589399754
    },
    {
        "content": "<p>the other one?</p>",
        "id": 197467669,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399778
    },
    {
        "content": "<p>you question is incomplete</p>",
        "id": 197467757,
        "sender_full_name": "Sean",
        "timestamp": 1589399825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/197467593\">said</a>:</p>\n<blockquote>\n<p>it looks like the one pending patch I was thinking of is already integrated, so nothing to do there.  the other one appears to be on that github repo</p>\n</blockquote>\n<p>what is \"the other one\"?</p>",
        "id": 197467802,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399850
    },
    {
        "content": "<p>the other patch I was thinking of appears to be that github repo</p>",
        "id": 197467900,
        "sender_full_name": "Sean",
        "timestamp": 1589399887
    },
    {
        "content": "<p>it was a gsoc project two years ago</p>",
        "id": 197467923,
        "sender_full_name": "Sean",
        "timestamp": 1589399900
    },
    {
        "content": "<p>oh ok</p>",
        "id": 197467936,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589399909
    },
    {
        "content": "<p>i have a far-fetched idea</p>",
        "id": 197468472,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400159
    },
    {
        "content": "<p>should i try making a GUI?</p>",
        "id": 197468499,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400177
    },
    {
        "content": "<p>haha. no.</p>",
        "id": 197468527,
        "sender_full_name": "Sean",
        "timestamp": 1589400192
    },
    {
        "content": "<p>i am practicing pyqt(PySide2)</p>",
        "id": 197468531,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400193
    },
    {
        "content": "<p>ok no problem</p>",
        "id": 197468543,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400199
    },
    {
        "content": "<p>that's so much more complexity to create something useful</p>",
        "id": 197468580,
        "sender_full_name": "Sean",
        "timestamp": 1589400220
    },
    {
        "content": "<p>i can understand</p>",
        "id": 197468596,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400234
    },
    {
        "content": "<p>let me ask you, what are you trying to accomplish?</p>",
        "id": 197468605,
        "sender_full_name": "Sean",
        "timestamp": 1589400238
    },
    {
        "content": "<p>what would you like to do?  why did you mention python in the first place?</p>",
        "id": 197468675,
        "sender_full_name": "Sean",
        "timestamp": 1589400254
    },
    {
        "content": "<p>are you looking to take on a project?</p>",
        "id": 197468712,
        "sender_full_name": "Sean",
        "timestamp": 1589400270
    },
    {
        "content": "<p>i wanted to contribute to brlcad using python</p>",
        "id": 197468713,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400270
    },
    {
        "content": "<p>nope</p>",
        "id": 197468722,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400276
    },
    {
        "content": "<p>why?</p>",
        "id": 197468723,
        "sender_full_name": "Sean",
        "timestamp": 1589400276
    },
    {
        "content": "<p>why \"using python\"?</p>",
        "id": 197468752,
        "sender_full_name": "Sean",
        "timestamp": 1589400290
    },
    {
        "content": "<p>i am much more comfortable now in python</p>",
        "id": 197468770,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400301
    },
    {
        "content": "<p>but how are you looking to contribute?  towards what end?</p>",
        "id": 197468824,
        "sender_full_name": "Sean",
        "timestamp": 1589400323
    },
    {
        "content": "<p>i thought if there's a python interface of brl-cad, i would contribute to that</p>",
        "id": 197468947,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400370
    },
    {
        "content": "<p>or else try to make one(if i could)</p>",
        "id": 197468990,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400390
    },
    {
        "content": "<p>you just repeated yourself without answering the question :)</p>",
        "id": 197469015,
        "sender_full_name": "Sean",
        "timestamp": 1589400398
    },
    {
        "content": "<p>ok</p>",
        "id": 197469037,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400410
    },
    {
        "content": "<p>how are you looking to contribute? towards what end?</p>",
        "id": 197469061,
        "sender_full_name": "Sean",
        "timestamp": 1589400425
    },
    {
        "content": "<p>you said you would contribute to \"that\" -- presumably \"that\" is the python interface itself?  or create something using python?  or model with python?  or improve the ability to work with python in brl-cad? or ... ???</p>",
        "id": 197469164,
        "sender_full_name": "Sean",
        "timestamp": 1589400481
    },
    {
        "content": "<p>i wanted to improve the ability to work with python in brl-cad</p>",
        "id": 197469283,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400527
    },
    {
        "content": "<p>so there's two ways you can do that.  there's a \"script\" entity type <em>inside</em> BRL-CAD that could be improved and there's a python interface <em>outside</em> BRL-CAD that could be improved.</p>",
        "id": 197469519,
        "sender_full_name": "Sean",
        "timestamp": 1589400616
    },
    {
        "content": "<p>what is \"script\"?</p>",
        "id": 197469562,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400647
    },
    {
        "content": "<p>the <em>inside</em> one requires that you have basic understanding of BRL-CAD's tools</p>",
        "id": 197469582,
        "sender_full_name": "Sean",
        "timestamp": 1589400661
    },
    {
        "content": "<p>ok</p>",
        "id": 197469606,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400672
    },
    {
        "content": "<p>then i would  start contributing to the <em>outside</em> one first</p>",
        "id": 197469689,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> you're asking such fundamental questions that I really recommend you first complete tutorials so you at least have a basic understanding of terms</p>",
        "id": 197469831,
        "sender_full_name": "Sean",
        "timestamp": 1589400773
    },
    {
        "content": "<p>have you done the MGED tutorials?</p>",
        "id": 197469874,
        "sender_full_name": "Sean",
        "timestamp": 1589400789
    },
    {
        "content": "<p>yeah, i think so</p>",
        "id": 197469895,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400803
    },
    {
        "content": "<p>then you should know what a script entity probably refers to... just like there are ell and sph and arb8 entities, there is a script entity</p>",
        "id": 197469973,
        "sender_full_name": "Sean",
        "timestamp": 1589400837
    },
    {
        "content": "<p>entity = object</p>",
        "id": 197470048,
        "sender_full_name": "Sean",
        "timestamp": 1589400852
    },
    {
        "content": "<p>i confused entity with something else</p>",
        "id": 197470099,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400872
    },
    {
        "content": "<p>sorry</p>",
        "id": 197470104,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589400873
    },
    {
        "content": "<p>the general idea is a user can create an object that is a python script that defines how that object behaves.  this interface does not yet exist, but would be a goal.</p>",
        "id": 197470233,
        "sender_full_name": "Sean",
        "timestamp": 1589400931
    },
    {
        "content": "<p>the script creates geometry and is called by C code on the fly</p>",
        "id": 197470370,
        "sender_full_name": "Sean",
        "timestamp": 1589400963
    },
    {
        "content": "<p>that's for the work <em>inside</em> BRL-CAD</p>",
        "id": 197470638,
        "sender_full_name": "Sean",
        "timestamp": 1589400996
    },
    {
        "content": "<p>for the python work <em>outside</em> BRL-CAD, the approach is very different.  You should read the links I provided or you will not be able to help with it.</p>",
        "id": 197470969,
        "sender_full_name": "Sean",
        "timestamp": 1589401025
    },
    {
        "content": "<p>ok</p>",
        "id": 197470994,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401037
    },
    {
        "content": "<p>I'd start with <a href=\"https://medium.com/@Mr_Jaypee/brl-cads-python-procedural-geometry-990e3c286a63\">https://medium.com/@Mr_Jaypee/brl-cads-python-procedural-geometry-990e3c286a63</a><br>\nand get it working on your computer.</p>",
        "id": 197471064,
        "sender_full_name": "Sean",
        "timestamp": 1589401056
    },
    {
        "content": "<p>i am going to sleep right now as i have school</p>",
        "id": 197471122,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401079
    },
    {
        "content": "<p>i will test that tomorrow</p>",
        "id": 197471176,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401086
    },
    {
        "content": "<p>If you can't get it working, then you might not have enough background -- you might want to pick a much simpler goal, which I would recommend regardless just to get familiarized.</p>",
        "id": 197471320,
        "sender_full_name": "Sean",
        "timestamp": 1589401133
    },
    {
        "content": "<p>like?</p>",
        "id": 197471366,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401151
    },
    {
        "content": "<p>what goal can you recommend to me right now to get familiarised?</p>",
        "id": 197471451,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401173
    },
    {
        "content": "<p>like starting with a simple tcl script that creates some geomtry</p>",
        "id": 197471462,
        "sender_full_name": "Sean",
        "timestamp": 1589401175
    },
    {
        "content": "<p>it will be much helpful</p>",
        "id": 197471554,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401182
    },
    {
        "content": "<p>using mged commands</p>",
        "id": 197471578,
        "sender_full_name": "Sean",
        "timestamp": 1589401185
    },
    {
        "content": "<p>what's a shape or object that you want to model?</p>",
        "id": 197471698,
        "sender_full_name": "Sean",
        "timestamp": 1589401209
    },
    {
        "content": "<p>asking me or saying to me?</p>",
        "id": 197471884,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401229
    },
    {
        "content": "<p>asking</p>",
        "id": 197471888,
        "sender_full_name": "Sean",
        "timestamp": 1589401234
    },
    {
        "content": "<p>umm... i dont have a answer  for that right now</p>",
        "id": 197471985,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401268
    },
    {
        "content": "<p>for example, you could try to model this: <a href=\"https://brlcad.org/gci/ideas/puzzle/puzzle.jpg\">https://brlcad.org/gci/ideas/puzzle/puzzle.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"https://brlcad.org/gci/ideas/puzzle/puzzle.jpg\"><img src=\"https://brlcad.org/gci/ideas/puzzle/puzzle.jpg\"></a></div>",
        "id": 197472057,
        "sender_full_name": "Sean",
        "timestamp": 1589401307
    },
    {
        "content": "<p>thats nice</p>",
        "id": 197472166,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401333
    },
    {
        "content": "<p>i would like to try that</p>",
        "id": 197472190,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401341
    },
    {
        "content": "<p>model it yourself first, maybe redo the tutorials if you forgot all the commands</p>",
        "id": 197472216,
        "sender_full_name": "Sean",
        "timestamp": 1589401354
    },
    {
        "content": "<p>alongside that i can try making the python-brlcad work</p>",
        "id": 197472239,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401369
    },
    {
        "content": "<p>then once you have done that, you could try turning it into a script</p>",
        "id": 197472250,
        "sender_full_name": "Sean",
        "timestamp": 1589401376
    },
    {
        "content": "<p>ooh</p>",
        "id": 197472270,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401384
    },
    {
        "content": "<p>thats a nice idea</p>",
        "id": 197472305,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401393
    },
    {
        "content": "<p>once you have it in a script, you could try turning it into a python script</p>",
        "id": 197472316,
        "sender_full_name": "Sean",
        "timestamp": 1589401396
    },
    {
        "content": "<p>i do things like that now</p>",
        "id": 197472357,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401409
    },
    {
        "content": "<p>first script would be an mged script, also known as a tcl script</p>",
        "id": 197472365,
        "sender_full_name": "Sean",
        "timestamp": 1589401410
    },
    {
        "content": "<p>i saw shell scripting</p>",
        "id": 197472414,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401431
    },
    {
        "content": "<p>i can somewhat convert a sh file to python(not much confident about that)</p>",
        "id": 197472534,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401462
    },
    {
        "content": "<p>you can script mged itself externally with anything including a shell script</p>",
        "id": 197472550,
        "sender_full_name": "Sean",
        "timestamp": 1589401468
    },
    {
        "content": "<p>thats nice</p>",
        "id": 197472575,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401481
    },
    {
        "content": "<p>i would do shell scripting rather than tcl</p>",
        "id": 197472613,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401500
    },
    {
        "content": "<p>you could use python today, but you don't know the mged commands</p>",
        "id": 197472617,
        "sender_full_name": "Sean",
        "timestamp": 1589401502
    },
    {
        "content": "<p>i know shell but not tcl</p>",
        "id": 197472644,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401515
    },
    {
        "content": "<p>hmm</p>",
        "id": 197472651,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401517
    },
    {
        "content": "<p>you're getting far too caught up in the language if you ask me</p>",
        "id": 197472658,
        "sender_full_name": "Sean",
        "timestamp": 1589401520
    },
    {
        "content": "<p>yea</p>",
        "id": 197472668,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401528
    },
    {
        "content": "<p>i first want to be confident about python then start learning another language</p>",
        "id": 197472738,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401559
    },
    {
        "content": "<p>like I said, you are lacking on some basics first.  if you don't learn them, you won't be able to do these more advanced ideas</p>",
        "id": 197472797,
        "sender_full_name": "Sean",
        "timestamp": 1589401569
    },
    {
        "content": "<p>you write commands to create geometry.. there are hundreds of commands in BRL-CAD</p>",
        "id": 197472914,
        "sender_full_name": "Sean",
        "timestamp": 1589401623
    },
    {
        "content": "<p>hmm</p>",
        "id": 197472964,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401631
    },
    {
        "content": "<p>those commands can be created from any language</p>",
        "id": 197472997,
        "sender_full_name": "Sean",
        "timestamp": 1589401649
    },
    {
        "content": "<p>you're wanting to use python, but you don't know the commands yet</p>",
        "id": 197473032,
        "sender_full_name": "Sean",
        "timestamp": 1589401665
    },
    {
        "content": "<p>i gotta go after the source code of the brl cad has been downloaded</p>",
        "id": 197473048,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401672
    },
    {
        "content": "<p>so I recommend learning some of the commands first by creating some geometry like that cube example</p>",
        "id": 197473089,
        "sender_full_name": "Sean",
        "timestamp": 1589401684
    },
    {
        "content": "<p>i would do that</p>",
        "id": 197473149,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401709
    },
    {
        "content": "<p>compile brl-cad, run mged or archer, and create that \"dice\" model</p>",
        "id": 197473157,
        "sender_full_name": "Sean",
        "timestamp": 1589401714
    },
    {
        "content": "<p>keep notes on what commands you used to create the dice model</p>",
        "id": 197473183,
        "sender_full_name": "Sean",
        "timestamp": 1589401729
    },
    {
        "content": "<p>what steps you do</p>",
        "id": 197473207,
        "sender_full_name": "Sean",
        "timestamp": 1589401738
    },
    {
        "content": "<p>i will write them down on txt file</p>",
        "id": 197473219,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401746
    },
    {
        "content": "<p>good luck</p>",
        "id": 197473262,
        "sender_full_name": "Sean",
        "timestamp": 1589401768
    },
    {
        "content": "<p>in the meanwhile should i try getting python-brlcad to work on my computer?</p>",
        "id": 197473313,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401784
    },
    {
        "content": "<p>you're welcome to try, but based on your questions I honestly do not think you will be successful without lots of help</p>",
        "id": 197473432,
        "sender_full_name": "Sean",
        "timestamp": 1589401812
    },
    {
        "content": "<p>whom can i take help about this from?</p>",
        "id": 197473476,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401832
    },
    {
        "content": "<p>you can ask here, that's not the point</p>",
        "id": 197473503,
        "sender_full_name": "Sean",
        "timestamp": 1589401844
    },
    {
        "content": "<p>ok</p>",
        "id": 197473517,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401850
    },
    {
        "content": "<p>the point is that it is going to take you a very long time and will likely be frustrating or confusing or \"hard\"</p>",
        "id": 197473550,
        "sender_full_name": "Sean",
        "timestamp": 1589401866
    },
    {
        "content": "<p>you're going to have to read a lot, and you don't seem very inclined to read a lot...</p>",
        "id": 197473607,
        "sender_full_name": "Sean",
        "timestamp": 1589401887
    },
    {
        "content": "<p>why do u say that?</p>",
        "id": 197473662,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589401912
    },
    {
        "content": "<p>some people like to be told what to do, others are good at discovering things on their own</p>",
        "id": 197473881,
        "sender_full_name": "Sean",
        "timestamp": 1589402018
    },
    {
        "content": "<p>i am a middle man</p>",
        "id": 197473971,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402048
    },
    {
        "content": "<p>i discover things on my own but sometimes i need to be told what to do</p>",
        "id": 197474008,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402071
    },
    {
        "content": "<p>if you need it even sometimes, then you're the first type</p>",
        "id": 197474136,
        "sender_full_name": "Sean",
        "timestamp": 1589402151
    },
    {
        "content": "<p>that can be so</p>",
        "id": 197474227,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402178
    },
    {
        "content": "<p>people good at discovery can figure out almost any problem given enough time and motivation, they discover how on their own even when they do not know</p>",
        "id": 197474266,
        "sender_full_name": "Sean",
        "timestamp": 1589402200
    },
    {
        "content": "<p>it's a good skill to practice</p>",
        "id": 197474283,
        "sender_full_name": "Sean",
        "timestamp": 1589402210
    },
    {
        "content": "<p>i am trying to do that as much as i can</p>",
        "id": 197474326,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402225
    },
    {
        "content": "<p>that said, your skills are young, so you still need to have realistic goals or you'll just get frustrated</p>",
        "id": 197474350,
        "sender_full_name": "Sean",
        "timestamp": 1589402242
    },
    {
        "content": "<p>what do u mean by realistic goals?</p>",
        "id": 197474400,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402267
    },
    {
        "content": "<p>if you told me that you wanted to model your car in 3D</p>",
        "id": 197474567,
        "sender_full_name": "Sean",
        "timestamp": 1589402341
    },
    {
        "content": "<p>with enough accuracy that it could be manufactured or even just 3D printed faithfully</p>",
        "id": 197474611,
        "sender_full_name": "Sean",
        "timestamp": 1589402366
    },
    {
        "content": "<p>that would not be a realistic goal</p>",
        "id": 197474614,
        "sender_full_name": "Sean",
        "timestamp": 1589402368
    },
    {
        "content": "<p>i could not think of anything other than some sleep</p>",
        "id": 197474644,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402383
    },
    {
        "content": "<p>i would go to sleep after the build of brl-cad is finished</p>",
        "id": 197474756,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402429
    },
    {
        "content": "<p>there's plenty of time to sleep after we die ;)</p>",
        "id": 197474774,
        "sender_full_name": "Sean",
        "timestamp": 1589402439
    },
    {
        "content": "<p><span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span></p>",
        "id": 197474798,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402451
    },
    {
        "content": "<p>i am trying to do as much programming and contributing this year as i can do because next year i wouldnt get much time</p>",
        "id": 197474899,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402515
    },
    {
        "content": "<p>i have to study almost all of the day</p>",
        "id": 197474955,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402529
    },
    {
        "content": "<p>how much time can brl-cad take to build</p>",
        "id": 197475032,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402574
    },
    {
        "content": "<p>okay good night everyone</p>",
        "id": 197475286,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402707
    },
    {
        "content": "<p>see you tomorrow</p>",
        "id": 197475302,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589402715
    },
    {
        "content": "<p>I thought, the point with BRL-CAD's Python interface is that the current one is Python 2.x based, which will reach its end of life soon and is deprecated therefore. I.e. the task would be to write a Python 3.x interface.</p>",
        "id": 197512552,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589439925
    },
    {
        "content": "<p>I will try my best at that</p>",
        "id": 197513725,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589440838
    },
    {
        "content": "<p>As you have already discussed with Sean: This is not a trivial task. I t means to program most of the time in C or C++, not Python. It means to implement the piece of code, which a programmer can use in Python, not the Python code itself.</p>",
        "id": 197514816,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589441668
    },
    {
        "content": "<p>i was fixing the code for the python interface</p>",
        "id": 197540021,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456061
    },
    {
        "content": "<p>it cannot find nurb.h</p>",
        "id": 197540034,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456078
    },
    {
        "content": "<p>in which folder is it stored</p>",
        "id": 197540045,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456093
    },
    {
        "content": "<p>Maybe, we don't have this header anymore.</p>",
        "id": 197540325,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589456346
    },
    {
        "content": "<p>probably replaced or removed</p>",
        "id": 197540356,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456372
    },
    {
        "content": "<p>is it replaced by opennurbs?</p>",
        "id": 197540372,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456385
    },
    {
        "content": "<p>I would expect this.</p>",
        "id": 197540460,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589456446
    },
    {
        "content": "<p>i didnt understand</p>",
        "id": 197540483,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456465
    },
    {
        "content": "<p>I think that this is a header for the predecessor of openNURBS, but I'm not sure.</p>",
        "id": 197540831,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589456721
    },
    {
        "content": "<p>ok</p>",
        "id": 197540851,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456737
    },
    {
        "content": "<p>i was trying to fix the python interface <em>outside</em> brl cad</p>",
        "id": 197541109,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456908
    },
    {
        "content": "<p>my computer cannot handle brl cad rendering right now so i will do the inner interface later</p>",
        "id": 197541159,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589456949
    },
    {
        "content": "<p>BTW, I don't think that this is the right way to do it. In my opinion, the whole interface has to be rewritten. There are many changes in the BRL-CAD API too.</p>\n<p>This means, you should start with designing the Python interface. I.e., how should the Python functions look like? To answer this, you have to learn more about APIs and interfaces in general.</p>\n<p>Sean showed you a way to do this: Find a problem which shall be solved with Python. E.g., model a puzzle. (You can model other things too, if you like.) The curse of action would be the following:</p>\n<ul>\n<li>Model the geometry as usual in mged or archer.</li>\n<li>Write a program which utilizes the BRL-CAD C API to model the geometry. In src/proc-db are a lot of programs which are doing such kind of tasks. You can put your own program in this directory too (in your own copy).</li>\n<li>Write a TCL program which runs in mged to model the geometry.</li>\n<li>Write a program which utilizes the BRL-CAD core C++ interface to model the geometry. This interface can be found in the rt^3 repository branch. In tests/coreInterface you find examples of such programs.</li>\n<li>Write a Lua program to model the geometry. The Lua interface can be found in the rt^3 branch too. In tests/embeddedLua are example programs.</li>\n</ul>\n<p>When you have done this, you learned a lot about BRL-CAD interfaces and you may have an idea of how the one to Python should look like.</p>",
        "id": 197543694,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589458408
    },
    {
        "content": "<p>ok</p>",
        "id": 197543712,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589458423
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/197543694\">said</a>:</p>\n<blockquote>\n<p>BTW, I don't think that this is the right way to do it. In my opinion, the whole interface has to be rewritten. There are many changes in the BRL-CAD API too.</p>\n<p>This means, you should start with designing the Python interface. I.e., how should the Python functions look like? To answer this, you have to learn more about APIs and interfaces in general.</p>\n<p>Sean showed you a way to do this: Find a problem which shall be solved with Python. E.g., model a puzzle. (You can model other things too, if you like.) The curse of action would be the following:</p>\n<ul>\n<li>Model the geometry as usual in mged or archer.</li>\n<li>Write a program which utilizes the BRL-CAD C API to model the geometry. In src/proc-db are a lot of programs which are doing such kind of tasks. You can put your own program in this directory too (in your own copy).</li>\n<li>Write a TCL program which runs in mged to model the geometry.</li>\n<li>Write a program which utilizes the BRL-CAD core C++ interface to model the geometry. This interface can be found in the rt^3 repository branch. In tests/coreInterface you find examples of such programs.</li>\n<li>Write a Lua program to model the geometry. The Lua interface can be found in the rt^3 branch too. In tests/embeddedLua are example programs.</li>\n</ul>\n<p>When you have done this, you learned a lot about BRL-CAD interfaces and you may have an idea of how the one to Python should look like.</p>\n</blockquote>\n<ul>\n<li>i dont know much about tcl or lua</li>\n<li>i have used the c++ interface of BRL-CAD</li>\n<li>i was thinking about doing scripting via shell scripting</li>\n</ul>",
        "id": 197544000,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589458597
    },
    {
        "content": "<p>and also i have this year's time as i will not be doing anything much next year(i will continue contributing the year after the next one)</p>",
        "id": 197544201,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589458752
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span>  should i use the old python-interface as a base?</p>",
        "id": 197544367,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589458875
    },
    {
        "content": "<p>This is one possibility, to \"simply\" port the interface from Python 2.x to 3.x. But, I'm afraid that this is not simple because of API changes. And, there were a lot of issues with the old interface too. I.e., you can try to do so, but a restart could be easier.</p>",
        "id": 197544824,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589459219
    },
    {
        "content": "<p>it seems so</p>",
        "id": 197544842,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589459232
    },
    {
        "content": "<p>i tried fixing eveything but it was very much tough and still it isnt  1% fixed</p>",
        "id": 197544954,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589459287
    },
    {
        "content": "<p>what is the main library in Brl-cad?</p>",
        "id": 197545932,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589459903
    },
    {
        "content": "<p>which nearly include all the functions for making shapes?</p>",
        "id": 197545965,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589459932
    },
    {
        "content": "<p>i am going to try to restart the whole thing</p>",
        "id": 197546017,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589459976
    },
    {
        "content": "<p>In my opinion, it's worth to dive deeper into the different kinds of BRL-CAD programming. It may feel as being not productive, but learning about the different interface designs is very helpful if you want to design an own one.</p>",
        "id": 197546047,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589459995
    },
    {
        "content": "<p>i will do that first, mainly the c++ one</p>",
        "id": 197546115,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589460015
    },
    {
        "content": "<p>i had an introduction in that one in 2019 gci</p>",
        "id": 197546148,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589460038
    },
    {
        "content": "<p>Most people consider librt as the main library, but libwdb is used to create the database entries.</p>",
        "id": 197546171,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589460055
    },
    {
        "content": "<p>ok</p>",
        "id": 197546182,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589460061
    },
    {
        "content": "<p>There are two main designs for the interfaces:</p>\n<ul>\n<li>Object oriented, following the C++ core interface (the Lua bridge was done this way)</li>\n<li>Command interface utilizing libged, like TCL does</li>\n</ul>",
        "id": 197546475,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589460205
    },
    {
        "content": "<p>I am going to do something like the first one</p>",
        "id": 197550268,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589461838
    },
    {
        "content": "<p>Then, if it's necessary, I will make a command line interface(if that's what you tried to mean in the second way)</p>",
        "id": 197550411,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589461893
    },
    {
        "content": "<p>It's your decision. Which of the two would look more Python-like?</p>",
        "id": 197551068,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589462044
    },
    {
        "content": "<p>First one</p>",
        "id": 197552236,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589462409
    },
    {
        "content": "<p>The ctypesgen interface does utilize an object-oriented design, if I recall correctly.  It low-level binds into libwdb, but then presents a database and object API, not a command API like ged.</p>",
        "id": 197575392,
        "sender_full_name": "Sean",
        "timestamp": 1589471378
    },
    {
        "content": "<p>here's an example <a href=\"https://github.com/kanzure/python-brlcad/blob/master/examples/wdb_globe.py\">https://github.com/kanzure/python-brlcad/blob/master/examples/wdb_globe.py</a></p>",
        "id": 197575414,
        "sender_full_name": "Sean",
        "timestamp": 1589471388
    },
    {
        "content": "<p>not the cleanest, the args are nearly a pass-through to the C api, but definitely a bit closer to objects than commands in style.  not an example to necessarily repeat, but an interesting study</p>",
        "id": 197575601,
        "sender_full_name": "Sean",
        "timestamp": 1589471472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  can i use the old python interface as a base for the newer python package?</p>",
        "id": 197597958,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589480933
    },
    {
        "content": "<p>what are the libraries required to access the BRL-CAD core interface?</p>",
        "id": 197662836,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589532470
    },
    {
        "content": "<p>Do you see the <strong>TARGET_LINK_LIBRARIES</strong> in rt^3/src/coreInterface/CMakeLists.txt?</p>",
        "id": 197663468,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589532813
    },
    {
        "content": "<p>lemme see</p>",
        "id": 197664358,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589533303
    },
    {
        "content": "<p>so i was trying to use ctypesgen to generate a py file from all the header files in include/brlcad/rt folder</p>",
        "id": 197687269,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589548002
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 197687376,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589548058
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 197687408,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589548077
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>, do u know how to use ctypesgen command to get the macro definitions?</p>",
        "id": 197789725,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589625982
    },
    {
        "content": "<p>i was trying out the ctypesgen command to convert raytrace.h, vmath.h and common.h to write the rtexample.c in python</p>",
        "id": 197789942,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589626336
    },
    {
        "content": "<p>but ctypesgen couldnt convert macro definitions</p>",
        "id": 197789950,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589626376
    },
    {
        "content": "<p>btw it somewhat works</p>",
        "id": 197793487,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589632112
    },
    {
        "content": "<p>So an update about the python interface</p>",
        "id": 197816899,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589665910
    },
    {
        "content": "<p>Everything is working fine except the macro definitions</p>",
        "id": 197816956,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589665956
    },
    {
        "content": "<p>I was trying to convert rtexample.c to rtexample.py using the ctypes wrappers but the many of the macro definitions are not available so it is hard as I am having to redefine them as functions in the python file</p>",
        "id": 197817028,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589666099
    },
    {
        "content": "<p>So what should I do about it?</p>",
        "id": 197817043,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589666147
    },
    {
        "content": "<p>I am still trying to make the macro definitions work</p>",
        "id": 197817088,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589666169
    },
    {
        "content": "<p>macros don't exist to the compiler, so you may not have an alternative except wrapping them in functions or using alternative functions (many already have an alternate C function)</p>",
        "id": 197817116,
        "sender_full_name": "Sean",
        "timestamp": 1589666244
    },
    {
        "content": "<p>that's pretty cool that you got as far as you did <span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> -- can you show a screenshot and code example where it's at?</p>",
        "id": 197817621,
        "sender_full_name": "Sean",
        "timestamp": 1589667008
    },
    {
        "content": "<p>most of the vmath stuff I would expect to be available in other existing python packages -- that's basic math</p>",
        "id": 197817646,
        "sender_full_name": "Sean",
        "timestamp": 1589667070
    },
    {
        "content": "<p>that just leaves a few to worry about which aren't critical and/or have function alternatives.  Case by case..</p>",
        "id": 197817680,
        "sender_full_name": "Sean",
        "timestamp": 1589667110
    },
    {
        "content": "<p>I will push the code to GitHub</p>",
        "id": 197831650,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589693214
    },
    {
        "content": "<p>And the screenshot I will give to you later</p>",
        "id": 197831671,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589693239
    },
    {
        "content": "<p>By the way, I haven't organized the code</p>",
        "id": 197831674,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589693262
    },
    {
        "content": "<p>So it might be a bit harder to read</p>",
        "id": 197831676,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589693270
    },
    {
        "content": "<p>The GitHub link is <a href=\"https://github.com/sumagnadas/python-brlcad\">https://github.com/sumagnadas/python-brlcad</a></p>",
        "id": 197832424,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589694634
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  i am also creating a parser which parses the macros into normal python functions(not ctypes.CFUNCTYPE)</p>",
        "id": 197842343,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589711715
    },
    {
        "content": "<p>i have to see whether it gets all the macros or misses some of them</p>",
        "id": 197842392,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589711787
    },
    {
        "content": "<p>what are the back slashes for at end of some of the lines in some macros?</p>",
        "id": 197842532,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589712063
    },
    {
        "content": "<p>i have to pause the work on the interface right now because of my school and some personal problems.</p>",
        "id": 197853059,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589727589
    },
    {
        "content": "<p>i will resume the work from next week onwards</p>",
        "id": 197853109,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589727605
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/_Ej7VRet7qOsrKe2EXDoS5Hy/rtexample-and-rtexample.py.png\">rtexample-and-rtexample.py.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/_Ej7VRet7qOsrKe2EXDoS5Hy/rtexample-and-rtexample.py.png\" title=\"rtexample-and-rtexample.py.png\"><img src=\"/user_uploads/1549/_Ej7VRet7qOsrKe2EXDoS5Hy/rtexample-and-rtexample.py.png\"></a></div>",
        "id": 197890330,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589779418
    },
    {
        "content": "<p>the screenshot of the working of the python file</p>",
        "id": 197890352,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589779441
    },
    {
        "content": "<p>it is somewhat working because i couldnt make the macros(converted to python functions) work so some of the calculations are wrong</p>",
        "id": 197890495,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589779571
    },
    {
        "content": "<p>or else all of the things are printed using bu_log and VPRINT</p>",
        "id": 197890519,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589779610
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/fLMlWjQOzMcloS5udkBaElEz/rtexample.py\">rtexample.py</a></p>",
        "id": 197890535,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589779646
    },
    {
        "content": "<p>this is the file</p>",
        "id": 197890537,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589779650
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/63khBrdAYiEHXCviyvBraJL6/test1.py\">vmath_macros.py</a></p>",
        "id": 197890751,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589779807
    },
    {
        "content": "<p>this file contains almost all of the macros. it was mostly made using a parsing python script i had made.</p>",
        "id": 197890758,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589779847
    },
    {
        "content": "<p>umm do i need all the macros or do i need the most  useful?</p>",
        "id": 197917530,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589799526
    },
    {
        "content": "<p>so another update about the interface</p>",
        "id": 197928500,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589805847
    },
    {
        "content": "<p>i made the example specified in  this link: <a href=\"https://medium.com/@Mr_Jaypee/brl-cads-python-procedural-geometry-990e3c286a63\">https://medium.com/@Mr_Jaypee/brl-cads-python-procedural-geometry-990e3c286a63</a> and it was succesful</p>",
        "id": 197928570,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589805899
    },
    {
        "content": "<p>here's the screenshot of the shape i made  using my code  <a href=\"/user_uploads/1549/k0YeqHHfpg53VPu1XuRxi7bs/example.png\">example.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/k0YeqHHfpg53VPu1XuRxi7bs/example.png\" title=\"example.png\"><img src=\"/user_uploads/1549/k0YeqHHfpg53VPu1XuRxi7bs/example.png\"></a></div>",
        "id": 197928782,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589806022
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/197842532\">said</a>:</p>\n<blockquote>\n<p>what are the back slashes for at end of some of the lines in some macros?</p>\n</blockquote>\n<p>Same as it is elsewhere in C.  Those are line continuations.  It's how you have a macro that's effectively multiple lines of logic.</p>",
        "id": 197984684,
        "sender_full_name": "Sean",
        "timestamp": 1589830294
    },
    {
        "content": "<p>Okay</p>",
        "id": 197992393,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589834224
    },
    {
        "content": "<p>I was trying to parse them but it was hard so I left the parser</p>",
        "id": 197992427,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589834247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> that rtexample.py you wrote is impressive!  I think it shows a lot of the limitations of doing a direct conversion from C to Py, but it clearly works.  Do you think you could create a fake rtexample that is 'ideal', what you think the python interface should look like?</p>",
        "id": 198016102,
        "sender_full_name": "Sean",
        "timestamp": 1589854303
    },
    {
        "content": "<p>because the direct conversion feels very low-level to me, too low-level.  That if I were to design a python API from scratch, I probably would create  a raytracing example differently.</p>",
        "id": 198016153,
        "sender_full_name": "Sean",
        "timestamp": 1589854357
    },
    {
        "content": "<p>If you could mock it out, we could look at what changes might be needed, either on the C/C++ side or as a higher layer in python.</p>",
        "id": 198016163,
        "sender_full_name": "Sean",
        "timestamp": 1589854394
    },
    {
        "content": "<p>Here's a good example of a more pure object approach using the MOOSE API: <a href=\"https://brlcad.org/wiki/CoreInterface_Hallo_World_Example\">https://brlcad.org/wiki/CoreInterface_Hallo_World_Example</a></p>",
        "id": 198016240,
        "sender_full_name": "Sean",
        "timestamp": 1589854457
    },
    {
        "content": "<p>ok</p>",
        "id": 198018201,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589857862
    },
    {
        "content": "<p>i will try</p>",
        "id": 198018204,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589857866
    },
    {
        "content": "<p>i just wanted to show through that example that the bindings work</p>",
        "id": 198018319,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858085
    },
    {
        "content": "<p>i made another example using wdb</p>",
        "id": 198018351,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858132
    },
    {
        "content": "<p>please see to that and tell me how it is</p>",
        "id": 198018402,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858181
    },
    {
        "content": "<p>later i would make classes very much similar to the previous interfaces</p>",
        "id": 198018414,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858247
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/198018319\">said</a>:</p>\n<blockquote>\n<p>i just wanted to show through that example that the bindings work</p>\n</blockquote>\n<p>yeah, no don't get me wrong -- that's amazing!</p>",
        "id": 198018416,
        "sender_full_name": "Sean",
        "timestamp": 1589858252
    },
    {
        "content": "<p>you're on python 2 yes?</p>",
        "id": 198018422,
        "sender_full_name": "Sean",
        "timestamp": 1589858273
    },
    {
        "content": "<p>i can underdstand what you wanted to say</p>",
        "id": 198018423,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858273
    },
    {
        "content": "<p>no python3</p>",
        "id": 198018426,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858282
    },
    {
        "content": "<p>python 3.8</p>",
        "id": 198018463,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858286
    },
    {
        "content": "<p>using ctypesgen?</p>",
        "id": 198018469,
        "sender_full_name": "Sean",
        "timestamp": 1589858293
    },
    {
        "content": "<p>yea</p>",
        "id": 198018470,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858300
    },
    {
        "content": "<p>huh, so someone must have finally fixed it, updated it?</p>",
        "id": 198018477,
        "sender_full_name": "Sean",
        "timestamp": 1589858314
    },
    {
        "content": "<p>ctypesgen?</p>",
        "id": 198018487,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858324
    },
    {
        "content": "<p>do you mean someone fixed ctypesgen?</p>",
        "id": 198018502,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589858388
    },
    {
        "content": "<p>if you mean ctypesgen, its latest update on pip was in december 2019 and latest commit on github repo is in march 2020</p>",
        "id": 198019098,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589859452
    },
    {
        "content": "<p>wow, so then yeah.. really recent.  it was broken for python3 for years.  that's why the python work stalled. the entire approach relied on it.</p>",
        "id": 198022215,
        "sender_full_name": "Sean",
        "timestamp": 1589863952
    },
    {
        "content": "<p>so then since you're looking at it... do you think you could review <a href=\"https://github.com/kanzure/python-brlcad\">https://github.com/kanzure/python-brlcad</a>  and its forks to merge everyone's efforts <span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span>?</p>\n<p><a href=\"https://github.com/Killthebug/python-brlcad\">https://github.com/Killthebug/python-brlcad</a> in particular has the latest but there are at least two other forks that have commits ahead of kanzure's:</p>",
        "id": 198022295,
        "sender_full_name": "Sean",
        "timestamp": 1589864154
    },
    {
        "content": "<p><a href=\"https://github.com/kanzure/python-brlcad/network/members\">https://github.com/kanzure/python-brlcad/network/members</a></p>",
        "id": 198022334,
        "sender_full_name": "Sean",
        "timestamp": 1589864164
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/198022295\">said</a>:</p>\n<blockquote>\n<p>so then since you're looking at it... do you think you could review <a href=\"https://github.com/kanzure/python-brlcad\">https://github.com/kanzure/python-brlcad</a>  and its forks to merge everyone's efforts <span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span>?</p>\n<p><a href=\"https://github.com/Killthebug/python-brlcad\">https://github.com/Killthebug/python-brlcad</a> in particular has the latest but there are at least two other forks that have commits ahead of kanzure's:</p>\n</blockquote>\n<p>i will do that after i make the pip package for the python interface or something like that</p>",
        "id": 198023218,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589865700
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/198016240\">said</a>:</p>\n<blockquote>\n<p>Here's a good example of a more pure object approach using the MOOSE API: <a href=\"https://brlcad.org/wiki/CoreInterface_Hallo_World_Example\">https://brlcad.org/wiki/CoreInterface_Hallo_World_Example</a></p>\n</blockquote>\n<p>this is rt^3, right?</p>",
        "id": 198026811,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589870459
    },
    {
        "content": "<p>In general, yes. Headers are in include/brlcad and sources in src/coreInterface. But this is the C++ core interface. For a MOOSE version see <a href=\"https://github.com/drossberg/MOOSE\">https://github.com/drossberg/MOOSE</a>. From the programmers point of view, they are very much the same. For the moment, it doesn't matter which one you use. With Visual Studio you can use the brlcad.dll too (<a href=\"https://sourceforge.net/projects/brlcad/files/BRL-CAD%20Runtime%20Libraries/7.26.0/brlcad-7.26.0_dll_devel.zip/download\">https://sourceforge.net/projects/brlcad/files/BRL-CAD%20Runtime%20Libraries/7.26.0/brlcad-7.26.0_dll_devel.zip/download</a>).</p>",
        "id": 198028637,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1589872213
    },
    {
        "content": "<p>ok then</p>",
        "id": 198037106,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589877968
    },
    {
        "content": "<p>yeah, I'm considering them one in the same.  MOOSE == core interface ;)</p>",
        "id": 198082578,
        "sender_full_name": "Sean",
        "timestamp": 1589901827
    },
    {
        "content": "<p>i was seeing KilltheBug's repo on python-brlcad</p>",
        "id": 198082690,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589901883
    },
    {
        "content": "<p>i saw that he used numpy for vmath</p>",
        "id": 198082714,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589901901
    },
    {
        "content": "<p>so should i do something similar?</p>",
        "id": 198082761,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589901923
    },
    {
        "content": "<p>It's not a bad way to go about it.  vmath is basic math so using something already in python is probably preferable to transcoding vmath to python</p>",
        "id": 198083623,
        "sender_full_name": "Sean",
        "timestamp": 1589902280
    },
    {
        "content": "<p>ok</p>",
        "id": 198083896,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589902404
    },
    {
        "content": "<p>is there a list or something like that which can tell me what are the important vmath function from vmath.h?</p>",
        "id": 198084440,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589902620
    },
    {
        "content": "<p>you could grep for them all and count up their usage</p>",
        "id": 198087002,
        "sender_full_name": "Sean",
        "timestamp": 1589903716
    },
    {
        "content": "<p>counting them now with:</p>\n<div class=\"codehilite\"><pre><span></span><code>grep &#39;define[^d]&#39; include/vmath.h | grep &#39;#&#39; | sed &#39;s/.*define[[:space:]]\\([A-Z0-9_]*\\).*/\\1/g&#39; | while read symbol ; do echo -n &quot;$symbol &quot; ; grep -r -I -E &quot;[^a-zA-Z0-9_]$symbol[^a-zA-Z0-9_]&quot; include src/[^o]* 2&gt;/dev/null | wc -l ; done | sort -n\n</code></pre></div>",
        "id": 198089697,
        "sender_full_name": "Sean",
        "timestamp": 1589904814
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/198089697\">said</a>:</p>\n<blockquote>\n<p>counting them now with:</p>\n<div class=\"codehilite\"><pre><span></span><code>grep &#39;define[^d]&#39; include/vmath.h | grep &#39;#&#39; | sed &#39;s/.*define[[:space:]]\\([A-Z0-9_]*\\).*/\\1/g&#39; | while read symbol ; do echo -n &quot;$symbol &quot; ; grep -r -I -E &quot;[^a-zA-Z0-9_]$symbol[^a-zA-Z0-9_]&quot; include src/[^o]* 2&gt;/dev/null | wc -l ; done | sort -n\n</code></pre></div>\n\n\n</blockquote>\n<p>thanks for the command</p>",
        "id": 198092221,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589905929
    },
    {
        "content": "<p>going to work on vmath next with numpy</p>",
        "id": 198092705,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589906142
    },
    {
        "content": "<p>then try to make a much more organized python file for calling the modules</p>",
        "id": 198092859,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589906192
    },
    {
        "content": "<p>here's the ones that are called at least 100 times:</p>\n<div class=\"codehilite\"><pre><span></span><code>4425 VMOVE\n3131 VSET\n2092 VSCALE\n1646 V3ARGS\n1579 VSUB2\n1485 MAT4X3PNT\n1294 VDOT\n1229 VJOIN1\n1182 VUNITIZE\n1089 VADD2\n1075 MAGNITUDE\n1044 ZERO\n770 VSETALL\n731 NEAR_ZERO\n678 VCROSS\n651 SMALL_FASTF\n546 MAT_IDN\n520 INFINITY\n517 MAT4X3VEC\n501 VINIT_ZERO\n499 VPRINT\n459 ELEMENTS_PER_VECT\n433 NEAR_EQUAL\n430 EQUAL\n409 VJOIN2\n380 MAT_COPY\n359 INTCLAMP\n348 VREVERSE\n308 MAX_FASTF\n300 DEG2RAD\n284 VMINMAX\n276 V_MAX\n262 MAGSQ\n249 ELEMENTS_PER_POINT\n237 V_MIN\n226 M_PI\n206 M_2PI\n202 V2MOVE\n195 SQRT_SMALL_FASTF\n167 V2SET\n154 RAD2DEG\n130 VUNITIZE_TOL\n129 VADD3\n108 VNEAR_EQUAL\n</code></pre></div>",
        "id": 198096523,
        "sender_full_name": "Sean",
        "timestamp": 1589907712
    },
    {
        "content": "<p>not to say that the ones called fewer times aren't important too, but it gives an idea of the utilization</p>",
        "id": 198096652,
        "sender_full_name": "Sean",
        "timestamp": 1589907758
    },
    {
        "content": "<p>also note that some usages are in other macros which themselves might be used hundreds/thousands of times.  I didn't try to count that, but it'd be a similar counting process to identify usage in include/ and look for those indirect calls</p>",
        "id": 198096866,
        "sender_full_name": "Sean",
        "timestamp": 1589907854
    },
    {
        "content": "<p>I used a script to parse the macros into functions</p>",
        "id": 198099518,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589908981
    },
    {
        "content": "<p>Some of them worked</p>",
        "id": 198099528,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589908987
    },
    {
        "content": "<p>Others have to be fixed</p>",
        "id": 198100283,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589909284
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> but why?? that means it will be out of sync the instant anyone makes a change to vmath.h ... it does change from time to time.</p>",
        "id": 198100437,
        "sender_full_name": "Sean",
        "timestamp": 1589909368
    },
    {
        "content": "<p>that i have to see to</p>",
        "id": 198107773,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589912910
    },
    {
        "content": "<p>that is the issue i had</p>",
        "id": 198107799,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589912925
    },
    {
        "content": "<p>because of that i didnt use that file nor the (somewhat) parser</p>",
        "id": 198107956,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589913007
    },
    {
        "content": "<p>I discarded that idea</p>",
        "id": 198155457,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589951453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> so what's next?</p>",
        "id": 198213247,
        "sender_full_name": "Sean",
        "timestamp": 1589987755
    },
    {
        "content": "<p>I don't know right now</p>",
        "id": 198213375,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589987795
    },
    {
        "content": "<p>There's a storm raging outside</p>",
        "id": 198213388,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589987803
    },
    {
        "content": "<p>It will continue until tomorrow morning I think</p>",
        "id": 198213446,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1589987828
    },
    {
        "content": "<p>yikes, hope you don't loose power</p>",
        "id": 198215168,
        "sender_full_name": "Sean",
        "timestamp": 1589988477
    },
    {
        "content": "<p>Actually the power is cut off for 7 or 8 hours now</p>",
        "id": 198245068,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590002462
    },
    {
        "content": "<p>yikes, sorry to hear that <span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span></p>",
        "id": 198245435,
        "sender_full_name": "Sean",
        "timestamp": 1590002672
    },
    {
        "content": "<p>My father told me that it will be back by tomorrow morning</p>",
        "id": 198245530,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590002733
    },
    {
        "content": "<p>Its 1 in midnight</p>",
        "id": 198245561,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590002754
    },
    {
        "content": "<p>So I don't think I will be back on the interface at least for this week</p>",
        "id": 198246090,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590003006
    },
    {
        "content": "<p>So I will not be back on the interface for a couple of days</p>",
        "id": 198282572,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590031506
    },
    {
        "content": "<p>Internet is not working here</p>",
        "id": 198282600,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590031550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> how are you on chat then?  is there anything I can do to help?</p>",
        "id": 198286104,
        "sender_full_name": "Sean",
        "timestamp": 1590036153
    },
    {
        "content": "<p>Wifi is not available. I am online through cellular net which is very very<br>\nslow.</p>",
        "id": 198302146,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590053715
    },
    {
        "content": "<p>Wifi will be back after three days or so</p>",
        "id": 198302296,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590053841
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  my net is coming back after a few days(it is working well right now, though it is midnight) so I think I will be back when it comes back</p>",
        "id": 198600015,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590354082
    },
    {
        "content": "<p>The cyclone did too much damage to internet and cellular networks</p>",
        "id": 198600055,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590354123
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/198016102\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> that rtexample.py you wrote is impressive!  I think it shows a lot of the limitations of doing a direct conversion from C to Py, but it clearly works.  Do you think you could create a fake rtexample that is 'ideal', what you think the python interface should look like?</p>\n</blockquote>\n<p>As you said, i created a fake example, wdbexample(as it was easier to make than rtexample) in python to demonstrate the use of the prototype python interface. Right now, it only includes a Database class(yes, i somewhat copied it from the previous python interface) with support to make a sphere. The use of Database class is demonstrated in wdbexample.py file.</p>",
        "id": 199088886,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1590701392
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>, what do you think about it?</p>",
        "id": 199446759,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591067815
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> Where's the wdbexample code?   I saw the rtexample but not wdb one...</p>",
        "id": 199450323,
        "sender_full_name": "Sean",
        "timestamp": 1591073301
    },
    {
        "content": "<p>It's pretty amazing that you got it all working again. Seriously, the python interface stalled for years because ctypesgen hadn't been ported to python3.</p>",
        "id": 199450359,
        "sender_full_name": "Sean",
        "timestamp": 1591073394
    },
    {
        "content": "<p>So next, would be a question on where you want to take this next?  I know what I'd love to see but would rather hear your interests and ideas first.</p>",
        "id": 199450425,
        "sender_full_name": "Sean",
        "timestamp": 1591073496
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199450323\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> Where's the wdbexample code?   I saw the rtexample but not wdb one...</p>\n</blockquote>\n<p>if you mean C code for the wdexample, then its not ported from c but a new file showing the working of libwdb or wdb.h in a more organized looking way.</p>",
        "id": 199451996,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591076217
    },
    {
        "content": "<p>you said you created a fake example, wdbexample -- I've not seen this example</p>",
        "id": 199456738,
        "sender_full_name": "Sean",
        "timestamp": 1591082137
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199456738\">said</a>:</p>\n<blockquote>\n<p>you said you created a fake example, wdbexample -- I've not seen this example</p>\n</blockquote>\n<p>an example in python (actually not present in c files) showing the prototype working of the python interface</p>",
        "id": 199459625,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591084494
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199450425\">said</a>:</p>\n<blockquote>\n<p>So next, would be a question on where you want to take this next?  I know what I'd love to see but would rather hear your interests and ideas first.</p>\n</blockquote>\n<p>Tell me what you would like to see. i will try to implement that. i am very much confused as to what to do next</p>",
        "id": 199603758,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591181003
    },
    {
        "content": "<p>We would like to hear your ideas and vision and interest, we want to craft this experience to be beneficial to both parties , not \"just a job\".</p>",
        "id": 199603922,
        "sender_full_name": "Erik",
        "timestamp": 1591181120
    },
    {
        "content": "<p><span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 199603944,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591181136
    },
    {
        "content": "<p>i was thinking about creating a prototype rtexample in python(which isn't a direct connversion from C to Python)</p>",
        "id": 199604055,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591181190
    },
    {
        "content": "<p>BTW, what is the \"magic\" variable in nearly every struct used for?</p>",
        "id": 199604133,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591181255
    },
    {
        "content": "<p>It's a  number stashed at the beginning to help deduce type, common in programming language implementations</p>",
        "id": 199604429,
        "sender_full_name": "Erik",
        "timestamp": 1591181431
    },
    {
        "content": "<p>ohh</p>",
        "id": 199604475,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591181461
    },
    {
        "content": "<p>Bualloca also stashes a little magic up front  to help with memory mgmt</p>",
        "id": 199604483,
        "sender_full_name": "Erik",
        "timestamp": 1591181466
    },
    {
        "content": "<p>its just a number then?</p>",
        "id": 199604496,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591181481
    },
    {
        "content": "<p>Yes, and arbitrary. They should be #defined in headers if you want to peruse</p>",
        "id": 199604622,
        "sender_full_name": "Erik",
        "timestamp": 1591181560
    },
    {
        "content": "<p>i was going to port vmath.h functions in a python file using numpy</p>",
        "id": 199604694,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591181616
    },
    {
        "content": "<p>Should I complete the Database class first or should I try implementing the raytracing interface?</p>",
        "id": 199665516,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591212715
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>, what is libbn for?</p>",
        "id": 199755230,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591281119
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> A brief description of all the libraries is in HACKING.  bn is for numerics.</p>",
        "id": 199755859,
        "sender_full_name": "Sean",
        "timestamp": 1591281337
    },
    {
        "content": "<p>ok</p>",
        "id": 199755978,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591281363
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199665516\">said</a>:</p>\n<blockquote>\n<p>Should I complete the Database class first or should I try implementing the raytracing interface?</p>\n</blockquote>\n<p>what should i do first?</p>",
        "id": 199756099,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591281410
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>, what information is most required when a ray hits something during raytracing.</p>",
        "id": 199760556,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591283189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> The magic numbers definitely shouldn't be translated to python.  They are an artifice of C programming, they primarily are used to catch low-level memory corruption.</p>",
        "id": 199798480,
        "sender_full_name": "Sean",
        "timestamp": 1591299423
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199756099\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199665516\">said</a>:</p>\n<blockquote>\n<p>Should I complete the Database class first or should I try implementing the raytracing interface?</p>\n</blockquote>\n<p>what should i do first?</p>\n</blockquote>\n<p>I would think Database would be more desirable first.  Ability to create stuff using python scripts cleanly.</p>",
        "id": 199798604,
        "sender_full_name": "Sean",
        "timestamp": 1591299470
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199760556\">said</a>:</p>\n<blockquote>\n<p>hey <span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span>, what information is most required when a ray hits something during raytracing.</p>\n</blockquote>\n<p>This very much depends on the person or application shooting the rays.  It could be almost anything.  Some care about the first hit point, some care about the thickness of the things hit, some care about the curvature of the surface at the entry or exit hit point, some care how many things were hit, some want to know whether two objects are in proximity or overlap, etc ...</p>",
        "id": 199798821,
        "sender_full_name": "Sean",
        "timestamp": 1591299581
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199798821\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199760556\">said</a>:</p>\n<blockquote>\n<p>hey <span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span>, what information is most required when a ray hits something during raytracing.</p>\n</blockquote>\n<p>This very much depends on the person or application shooting the rays.  It could be almost anything.  Some care about the first hit point, some care about the thickness of the things hit, some care about the curvature of the surface at the entry or exit hit point, some care how many things were hit, some want to know whether two objects are in proximity or overlap, etc ...</p>\n</blockquote>\n<p>should i see to the rtexample for the information i can send during raytracing?</p>",
        "id": 199832503,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591327104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> that's part why I suggested Database first .. ray tracing is an order of magnitude more complicated...</p>",
        "id": 199832593,
        "sender_full_name": "Sean",
        "timestamp": 1591327272
    },
    {
        "content": "<p>okay</p>",
        "id": 199832595,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591327286
    },
    {
        "content": "<p>but if that's what's more interesting to you,rtexample is as good a place as any to start.  it shows hit points, thicknesses, and normals</p>",
        "id": 199832602,
        "sender_full_name": "Sean",
        "timestamp": 1591327307
    },
    {
        "content": "<p>okay</p>",
        "id": 199832679,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591327418
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span>  which repo of ctypesgen are you using ? I had forked from <a href=\"https://github.com/olsonse/ctypesgen\">https://github.com/olsonse/ctypesgen</a> and did some changes,  for py3 but I think olsonse's repo now support py3 :)</p>",
        "id": 199844089,
        "sender_full_name": "scorp08",
        "timestamp": 1591343065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"228172\">scorp08</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/199844089\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span>  which repo of ctypesgen are you using ? I had forked from <a href=\"https://github.com/olsonse/ctypesgen\">https://github.com/olsonse/ctypesgen</a> and did some changes,  for py3 but I think olsonse's repo now support py3 <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>\n</blockquote>\n<p><a href=\"https://github.com/davidjamesca/ctypesgen\">https://github.com/davidjamesca/ctypesgen</a></p>",
        "id": 199862528,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591355934
    },
    {
        "content": "<p>they are even</p>",
        "id": 199862546,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591355946
    },
    {
        "content": "<p>which function in wdb can be used to open existing geometry databases?</p>",
        "id": 199987629,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591468593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> i got this error while trying to make a combination</p>",
        "id": 200416591,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591796188
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>ERROR: bad pointer 0x1bf5bb0: s/b rt_comb_internal(x436f6d49), was Unknown_Magic(x22af6f0), file /mnt/sda2/github/brlcad/src/librt/comb/comb.c, line 284\n</code></pre></div>",
        "id": 200416599,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591796194
    },
    {
        "content": "<p>what is happening?</p>",
        "id": 200416670,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591796238
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200416599\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>ERROR: bad pointer 0x1bf5bb0: s/b rt_comb_internal(x436f6d49), was Unknown_Magic(x22af6f0), file /mnt/sda2/github/brlcad/src/librt/comb/comb.c, line 284\n</code></pre></div>\n\n\n</blockquote>\n<p>hey <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> can you help me with this?</p>",
        "id": 200432935,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591803372
    },
    {
        "content": "<p>It looks like you made an error, but I've no idea what you made.</p>",
        "id": 200440176,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591806212
    },
    {
        "content": "<p>what can it be related to?</p>",
        "id": 200440410,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591806325
    },
    {
        "content": "<p>what is Unknown_Magic anyways?</p>",
        "id": 200440552,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591806400
    },
    {
        "content": "<p>It means that you put an object in a function which expects a combination which was in fact no combination.</p>",
        "id": 200441628,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591806920
    },
    {
        "content": "<p>ok</p>",
        "id": 200451834,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591811461
    },
    {
        "content": "<p>i have to check the code then</p>",
        "id": 200451897,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591811490
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"103601\">@LordOfBikes</span> why is this coming </p>\n<div class=\"codehilite\"><pre><span></span><code>ERROR: bad pointer 0x1be4200: s/b union tree(x91191191), was Unknown_Magic(x5f687073), file /mnt/sda2/github/brlcad/src/librt/comb/comb.c, line 93\n</code></pre></div>",
        "id": 200467171,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591818447
    },
    {
        "content": "<p>or can you tell me what should be the magic number for the union called \"tree\"</p>",
        "id": 200468898,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591819216
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> , sadly I cant help here. I'm a LibreCAD maintainer and do not have sound knowledge of BRL-CAD code base.</p>",
        "id": 200515641,
        "sender_full_name": "Armin (LordOfBikes)",
        "timestamp": 1591863001
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> can you see a backtrace i got and tell me if this is a fault with my code in python(i am calling wdb_export) or this is a fault in the brlcad code?</p>",
        "id": 200636898,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591941124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200636898\">said</a>:</p>\n<blockquote>\n<p>hey <span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> can you see a backtrace i got and tell me if this is a fault with my code in python(i am calling wdb_export) or this is a fault in the brlcad code?</p>\n</blockquote>\n<p>hey <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> can you help me with this?</p>",
        "id": 200638565,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591943828
    },
    {
        "content": "<p>I can't say more as I already did without more information: You probably made an error and used a bad parameter in a function.</p>",
        "id": 200640203,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591945996
    },
    {
        "content": "<p>should i send the backtrace</p>",
        "id": 200640233,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591946037
    },
    {
        "content": "<p>This would be a start point.<br>\nWhere is your source code?</p>",
        "id": 200640295,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591946096
    },
    {
        "content": "<p>python source code?</p>",
        "id": 200640312,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591946113
    },
    {
        "content": "<p>Whatever you have written to get it working with Python.</p>",
        "id": 200640602,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591946347
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 200641035,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591946762
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200640602\">said</a>:</p>\n<blockquote>\n<p>Whatever you have written to get it working with Python.</p>\n</blockquote>\n<p>sorry for the late reply. i didnt push the changes to my repo.</p>",
        "id": 200641096,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591946810
    },
    {
        "content": "<p>i have to code at <a href=\"https://github.com/sumagnadas/python-brlcad\">https://github.com/sumagnadas/python-brlcad</a></p>",
        "id": 200641128,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591946843
    },
    {
        "content": "<p>it has the bindings pregenerated and libraries set to default locations(like /usr/brlcad/dev-7.31.0/lib/)</p>",
        "id": 200641207,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591946910
    },
    {
        "content": "<p>so it might be a problem</p>",
        "id": 200641303,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591947004
    },
    {
        "content": "<p>Do you have the back-trace too?</p>",
        "id": 200642271,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591947999
    },
    {
        "content": "<p>yea</p>",
        "id": 200642874,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591948597
    },
    {
        "content": "<p>got it from gdb(as per StackOverflow) as it was giving a SIGSEGV</p>",
        "id": 200642906,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591948636
    },
    {
        "content": "<p>should i send it?</p>",
        "id": 200642920,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591948651
    },
    {
        "content": "<p>AS far as I can see, this should happen when you create a combination?</p>",
        "id": 200643341,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591948956
    },
    {
        "content": "<p>yea when i am trying to use wdb_export for making a combination(i dont know if i need it)</p>",
        "id": 200643392,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591949003
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>#0  __memcmp_sse4_1 () at ../sysdeps/x86_64/multiarch/memcmp-sse4.S:73\n#1  0x00007fffe9f9f5ce in bn_mat_is_identity (m=0x736772615f) at /mnt/sda2/github/brlcad/src/libbn/mat.c:992\n#2  0x00007fffea876d12 in db_tree_counter (tp=0xdc9400, tcsp=0x7fffffffc8f0) at /mnt/sda2/github/brlcad/src/librt/comb/comb.c:99\n#3  0x00007fffea87788a in rt_comb_export5 (ep=0x7fffffffc9e0, ip=0x7fffffffcaa0, UNUSED_local2mm=1, dbip=0xd53640,\n    resp=0x7fffeac88f00 &lt;rt_uniresource&gt;) at /mnt/sda2/github/brlcad/src/librt/comb/comb.c:292\n#4  0x00007fffea88fd1b in rt_db_cvt_to_external5 (ext=0x7fffffffca40, name=0x7fffe6750410 &quot;sph_with_args_region&quot;, ip=0x7fffffffcaa0, conv2mm=1,\n    dbip=0xd53640, resp=0x7fffeac88f00 &lt;rt_uniresource&gt;, major=1) at /mnt/sda2/github/brlcad/src/librt/db5_io.c:663\n#5  0x00007fffeabf013f in wdb_put_internal (wdbp=0xd74070, name=0x7fffe6750410 &quot;sph_with_args_region&quot;, ip=0x7fffffffcaa0, local2mm=1)\n    at /mnt/sda2/github/brlcad/src/librt/wdb.c:246\n#6  0x00007fffeabf038d in wdb_export (wdbp=0xd74070, name=0x7fffe6750410 &quot;sph_with_args_region&quot;, gp=0xb03a60, id=31, local2mm=1)\n    at /mnt/sda2/github/brlcad/src/librt/wdb.c:293\n#7  0x00007ffff7fbeff5 in ?? () from /lib/x86_64-linux-gnu/libffi.so.7\n#8  0x00007ffff7fbe40a in ?? () from /lib/x86_64-linux-gnu/libffi.so.7\n#9  0x00007ffff752e69c in _ctypes_callproc () from /usr/lib/python3.8/lib-dynload/_ctypes.cpython-38-x86_64-linux-gnu.so\n#10 0x00007ffff752ec9c in ?? () from /usr/lib/python3.8/lib-dynload/_ctypes.cpython-38-x86_64-linux-gnu.so\n#11 0x00000000005f2246 in _PyObject_MakeTpCall ()\n#12 0x000000000056c70f in _PyEval_EvalFrameDefault ()\n#13 0x00000000005654d2 in _PyEval_EvalCodeWithName ()\n#14 0x00000000005f1bc5 in _PyFunction_Vectorcall ()\n#15 0x0000000000508386 in ?? ()\n#16 0x00000000005f0e3e in PyObject_Call ()\n#17 0x0000000000568985 in _PyEval_EvalFrameDefault ()\n#18 0x00000000005654d2 in _PyEval_EvalCodeWithName ()\n#19 0x0000000000507e8f in ?? ()\n#20 0x0000000000568404 in _PyEval_EvalFrameDefault ()\n#21 0x00000000005654d2 in _PyEval_EvalCodeWithName ()\n#22 0x0000000000686d53 in PyEval_EvalCode ()\n#23 0x0000000000676101 in ?? ()\n#24 0x000000000067617f in ?? ()\n#25 0x0000000000676237 in PyRun_FileExFlags ()\n#26 0x00000000006782ba in PyRun_SimpleFileExFlags ()\n#27 0x00000000006af5ce in Py_RunMain ()\n#28 0x00000000006af959 in Py_BytesMain ()\n#29 0x00007ffff7de10b3 in __libc_start_main (main=0x4ec640 &lt;main&gt;, argc=2, argv=0x7fffffffdae8, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;,\n    rtld_fini=&lt;optimized out&gt;, stack_end=0x7fffffffdad8) at ../csu/libc-start.c:308\n#30 0x00000000005f69be in _start ()\n</code></pre></div>",
        "id": 200643404,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591949012
    },
    {
        "content": "<p>this is the backtrace</p>",
        "id": 200643413,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591949021
    },
    {
        "content": "<p>so i was seeing mk_region1() arguments</p>",
        "id": 200644875,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591950273
    },
    {
        "content": "<p>what should be an ideal value for rgb?</p>",
        "id": 200644887,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591950287
    },
    {
        "content": "<p>i mean this one <code>const unsigned char *    rgb</code></p>",
        "id": 200644941,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591950360
    },
    {
        "content": "<p>Using wdb_export() is okay, The error is probable in the new_comb structure or how it is transferred to the C functions. What says the debugger about ip-&gt;idb_ptr in rt_comb_export5()? How does it look?</p>",
        "id": 200644982,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591950369
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200644982\">said</a>:</p>\n<blockquote>\n<p>Using wdb_export() is okay, The error is probable in the new_comb structure or how it is transferred to the C functions. What says the debugger about ip-&gt;idb_ptr in rt_comb_export5()? How does it look?</p>\n</blockquote>\n<p>how to see that?</p>",
        "id": 200645022,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591950418
    },
    {
        "content": "<p><code>break rt_comb_export5</code> in gdb? Step to line 284 and do a <code>print comb</code> there? (I haven't tested it and I'm not very used in using gdb, but it should work somehow like this.)</p>",
        "id": 200645767,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591951046
    },
    {
        "content": "<p>it is giving me this <code>(struct rt_comb_internal *) 0xdb2970</code></p>",
        "id": 200646047,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591951268
    },
    {
        "content": "<p>this is before stepping to line 284</p>",
        "id": 200646166,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591951356
    },
    {
        "content": "<p>because <code>print comb</code> doesnt work there</p>",
        "id": 200646186,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591951376
    },
    {
        "content": "<p>comb is assigned at line 283. That's why you have to go to line 284 first to step over 283 and get this assignment.</p>",
        "id": 200646421,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591951520
    },
    {
        "content": "<p>However, how are the members of rt_comb_internal doing? can you attach them to the printed variable (by \"-&gt;member_name\")?</p>",
        "id": 200646530,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591951598
    },
    {
        "content": "<p><code>print ip-&gt;idb_ptr</code> gives me <code>(void *) 0x0</code></p>",
        "id": 200646680,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591951687
    },
    {
        "content": "<p>NULL is not enough ;)</p>",
        "id": 200646741,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591951737
    },
    {
        "content": "<p>what?</p>",
        "id": 200646793,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591951773
    },
    {
        "content": "<p>rt_comb_export5() got NULL as input, this is not enough to create a combination.</p>",
        "id": 200646909,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591951850
    },
    {
        "content": "<p>ok</p>",
        "id": 200646923,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591951858
    },
    {
        "content": "<p>sorry gotta go</p>",
        "id": 200646977,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591951909
    },
    {
        "content": "<p>my laptop has 3% charge</p>",
        "id": 200646995,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591951920
    },
    {
        "content": "<p>Now, you should go up the call stack in gdb to the wdb_export() function and look what it got from Python (I think it's the <code>frame</code> command).</p>",
        "id": 200647164,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591951986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200646995\">said</a>:</p>\n<blockquote>\n<p>my laptop has 3% charge</p>\n</blockquote>\n<p>Okay, bye...</p>",
        "id": 200647185,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591952002
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200647164\">said</a>:</p>\n<blockquote>\n<p>Now, you should go up the call stack in gdb to the wdb_export() function and look what it got from Python (I think it's the <code>frame</code> command).</p>\n</blockquote>\n<p>went up the call stack but what should i specifically look for?</p>",
        "id": 200659788,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591962176
    },
    {
        "content": "<p>i looked at gp and got \"ImoC\"</p>",
        "id": 200660014,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591962401
    },
    {
        "content": "<p>What is \"ImoC\"?</p>",
        "id": 200662571,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591964267
    },
    {
        "content": "<p>dont know but i found an interesting thing</p>",
        "id": 200662627,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591964283
    },
    {
        "content": "<p>i have struct tree_db_leaf whose tl_mat is None</p>",
        "id": 200662669,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591964317
    },
    {
        "content": "<p>for which there is an error happening whenever <code>bn_mat_is_identity(tp-&gt;tr_l.tl_mat))</code>is called</p>",
        "id": 200662757,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591964378
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200662757\">said</a>:</p>\n<blockquote>\n<p>for which there is an error happening whenever <code>bn_mat_is_identity(tp-&gt;tr_l.tl_mat))</code>is called</p>\n</blockquote>\n<p>This shouldn't be an issue because it is tested for NULL before.</p>",
        "id": 200663059,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591964581
    },
    {
        "content": "<p>oh sorry wrong line</p>",
        "id": 200663105,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591964622
    },
    {
        "content": "<p>this is where the error occurs <code>return ! memcmp(m, bn_mat_identity, sizeof(mat_t));</code></p>",
        "id": 200663185,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591964657
    },
    {
        "content": "<p>m is NULL so the error is coming?</p>",
        "id": 200663569,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591964938
    },
    {
        "content": "<p>It should not call bn_mat_is_identity() if the matrix is NULL. Therefore, what do you mean with \"tl_mat is None\"?</p>",
        "id": 200663622,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591964970
    },
    {
        "content": "<p>tl_mat is actually NULL</p>",
        "id": 200663640,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591964988
    },
    {
        "content": "<p>None = NULL</p>",
        "id": 200663725,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965016
    },
    {
        "content": "<p>In this case, bn_mat_is_identity() wan't be called and there can't be an error.</p>",
        "id": 200663766,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591965045
    },
    {
        "content": "<p>so what should i do?</p>",
        "id": 200663779,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965057
    },
    {
        "content": "<p>It looks like the structure you hand over to wdb_export() is not what you think it is. Break at wdb_export(), check that gp is not NULL, then cast it to rt_comb_internal*, and examine it.</p>",
        "id": 200664093,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591965263
    },
    {
        "content": "<p>sorry if i am asking a stupid question but how to check if its NULL</p>",
        "id": 200664264,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965375
    },
    {
        "content": "<p><code>print gp</code> should be something like 0x000000.</p>",
        "id": 200664311,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591965411
    },
    {
        "content": "<p>Nope</p>",
        "id": 200664320,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965419
    },
    {
        "content": "<p><code>(struct rt_comb_internal *) 0xb03a50</code></p>",
        "id": 200664339,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965428
    },
    {
        "content": "<p>which means it is not NULL</p>",
        "id": 200664616,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965614
    },
    {
        "content": "<p><code>(void *) 0xb03a50</code> when <code>print gp</code> is used</p>",
        "id": 200664648,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965640
    },
    {
        "content": "<p>What gives you <code>print ((rt_comb_internal*)gp)-&gt;magic</code>?</p>",
        "id": 200664700,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591965685
    },
    {
        "content": "<p>1131375945</p>",
        "id": 200664792,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965733
    },
    {
        "content": "<p>or more specifically 0x436f6d49</p>",
        "id": 200664823,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965756
    },
    {
        "content": "<p>Is this the right number for a combination?</p>",
        "id": 200664889,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591965795
    },
    {
        "content": "<p>how can i know?</p>",
        "id": 200664906,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965808
    },
    {
        "content": "<p>should that be RT_COMB_MAGIC?</p>",
        "id": 200665002,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965855
    },
    {
        "content": "<p>BTW, if gp is 0xb03a50 in  wdb_export(), then ip-&gt;idb_ptr in wdb_put_internal() should be 0xb03a50 too, right?</p>",
        "id": 200665061,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591965904
    },
    {
        "content": "<p>lemme see</p>",
        "id": 200665081,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965922
    },
    {
        "content": "<p><code>print ip-&gt;idb_ptr</code> gives <code>(void *) 0xb03a50</code></p>",
        "id": 200665193,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965979
    },
    {
        "content": "<p>so yeah they are same</p>",
        "id": 200665215,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591965993
    },
    {
        "content": "<p>But, this value should be assigned to comb in src/librt/comb/comb.c line 283, right?</p>",
        "id": 200665314,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591966080
    },
    {
        "content": "<p>probably</p>",
        "id": 200665364,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591966091
    },
    {
        "content": "<p>I.e., not NULL.</p>",
        "id": 200665385,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591966108
    },
    {
        "content": "<p>umm yeah</p>",
        "id": 200665395,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591966118
    },
    {
        "content": "<p><code>comb = (struct rt_comb_internal *) 0xb03a50</code></p>",
        "id": 200665592,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591966231
    },
    {
        "content": "<p>(from gdb)</p>",
        "id": 200665602,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591966241
    },
    {
        "content": "<p><code>print comb-&gt;magic</code> still okay?</p>",
        "id": 200666047,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591966533
    },
    {
        "content": "<p>yea</p>",
        "id": 200666153,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591966583
    },
    {
        "content": "<p>same as before, 1131375945</p>",
        "id": 200666196,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591966609
    },
    {
        "content": "<p>Then, <code>RT_CK_COMB(comb);</code> should be okay too?</p>",
        "id": 200666210,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591966620
    },
    {
        "content": "<p>(the next line in the source code)</p>",
        "id": 200666282,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591966663
    },
    {
        "content": "<p>cant check that from gdb, i think</p>",
        "id": 200666293,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591966669
    },
    {
        "content": "<p>step over the next line (284)</p>",
        "id": 200666361,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1591966689
    },
    {
        "content": "<p>sorry for not replying but something happened and gdb is giving me SIGSEGV in another area</p>",
        "id": 200667258,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591967125
    },
    {
        "content": "<p>so i will be right back after fixing it</p>",
        "id": 200667280,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591967137
    },
    {
        "content": "<p>so i fixed it</p>",
        "id": 200671346,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591969432
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200666210\">said</a>:</p>\n<blockquote>\n<p>Then, <code>RT_CK_COMB(comb);</code> should be okay too?</p>\n</blockquote>\n<p>it is actually alright, it think</p>",
        "id": 200673043,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591970201
    },
    {
        "content": "<p>i couldnt step over to 284</p>",
        "id": 200673106,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1591970220
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> , if you come online ping me</p>",
        "id": 200758367,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592041747
    },
    {
        "content": "<p>i need your help to find out why the segfault is happening</p>",
        "id": 200758374,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592041774
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span>  does what should bn_mat_is_identity return</p>",
        "id": 200761332,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592046632
    },
    {
        "content": "<p>?</p>",
        "id": 200761333,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592046634
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200761332\">said</a>:</p>\n<blockquote>\n<p>hey <span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span>  does what should bn_mat_is_identity return</p>\n</blockquote>\n<p>grammatical mistake: what should bn_mat_is_identity return?</p>",
        "id": 200761933,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592047708
    },
    {
        "content": "<p>new backtrace</p>",
        "id": 200763028,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592049614
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>#0  tcache_get (tc_idx=&lt;optimized out&gt;) at malloc.c:2937\n#1  __GI___libc_malloc (bytes=13) at malloc.c:3051\n#2  0x00007ffff7e59ad8 in _mid_memalign (address=&lt;optimized out&gt;, bytes=13, alignment=&lt;optimized out&gt;) at malloc.c:3277\n#3  __posix_memalign (size=13, alignment=&lt;optimized out&gt;, memptr=0x7fffffffc7a0) at malloc.c:5366\n#4  __posix_memalign (memptr=0x7fffffffc7a0, alignment=&lt;optimized out&gt;, size=13) at malloc.c:5353\n#5  0x00007fffe7733d91 in alloc (type=CALLOC, cnt=1, sz=13, str=0x7fffeac0dc9b &quot;rt_comb_export5 ext_buf&quot;)\n    at /mnt/sda2/github/brlcad/src/libbu/malloc.c:137\n#6  0x00007fffe7733ee5 in bu_calloc (nelem=1, elsize=13, str=0x7fffeac0dc9b &quot;rt_comb_export5 ext_buf&quot;)\n    at /mnt/sda2/github/brlcad/src/libbu/malloc.c:174\n#7  0x00007fffea877a07 in rt_comb_export5 (ep=0x7fffffffc9d0, ip=0x7fffffffca90, UNUSED_local2mm=1, dbip=0xd75870,\n    resp=0x7fffeac88f00 &lt;rt_uniresource&gt;) at /mnt/sda2/github/brlcad/src/librt/comb/comb.c:326\n#8  0x00007fffea88fd1b in rt_db_cvt_to_external5 (ext=0x7fffffffca30, name=0x7fffeaf8e090 &quot;sph_with_args_region&quot;, ip=0x7fffffffca90, conv2mm=1,\n    dbip=0xd75870, resp=0x7fffeac88f00 &lt;rt_uniresource&gt;, major=1) at /mnt/sda2/github/brlcad/src/librt/db5_io.c:663\n#9  0x00007fffeabf013f in wdb_put_internal (wdbp=0xd54aa0, name=0x7fffeaf8e090 &quot;sph_with_args_region&quot;, ip=0x7fffffffca90, local2mm=1)\n    at /mnt/sda2/github/brlcad/src/librt/wdb.c:246\n#10 0x00007fffeabf038d in wdb_export (wdbp=0xd54aa0, name=0x7fffeaf8e090 &quot;sph_with_args_region&quot;, gp=0xaa9cc0, id=31, local2mm=1)\n    at /mnt/sda2/github/brlcad/src/librt/wdb.c:293\n#11 0x00007ffff7fbeff5 in ?? () from /lib/x86_64-linux-gnu/libffi.so.7\n#12 0x00007ffff7fbe40a in ?? () from /lib/x86_64-linux-gnu/libffi.so.7\n#13 0x00007ffff752e69c in _ctypes_callproc () from /usr/lib/python3.8/lib-dynload/_ctypes.cpython-38-x86_64-linux-gnu.so\n#14 0x00007ffff752ec9c in ?? () from /usr/lib/python3.8/lib-dynload/_ctypes.cpython-38-x86_64-linux-gnu.so\n#15 0x00000000005f2246 in _PyObject_MakeTpCall ()\n#16 0x000000000056c70f in _PyEval_EvalFrameDefault ()\n#17 0x00000000005654d2 in _PyEval_EvalCodeWithName ()\n#18 0x00000000005f1bc5 in _PyFunction_Vectorcall ()\n#19 0x0000000000508386 in ?? ()\n#20 0x00000000005f0e3e in PyObject_Call ()\n#21 0x0000000000568985 in _PyEval_EvalFrameDefault ()\n#22 0x00000000005654d2 in _PyEval_EvalCodeWithName ()\n#23 0x0000000000507e8f in ?? ()\n#24 0x0000000000568404 in _PyEval_EvalFrameDefault ()\n#25 0x00000000005654d2 in _PyEval_EvalCodeWithName ()\n#26 0x0000000000686d53 in PyEval_EvalCode ()\n#27 0x0000000000676101 in ?? ()\n#28 0x000000000067617f in ?? ()\n#29 0x0000000000676237 in PyRun_FileExFlags ()\n#30 0x00000000006782ba in PyRun_SimpleFileExFlags ()\n#31 0x00000000006af5ce in Py_RunMain ()\n#32 0x00000000006af959 in Py_BytesMain ()\n#33 0x00007ffff7de10b3 in __libc_start_main (main=0x4ec640 &lt;main&gt;, argc=2, argv=0x7fffffffdad8, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, rtld_fini=&lt;optimized out&gt;, stack_end=0x7fffffffdac8) at ../csu/libc-start.c:308\n#34 0x00000000005f69be in _start ()\n</code></pre></div>",
        "id": 200763046,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592049704
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/200761332\">said</a>:</p>\n<blockquote>\n<p>hey <span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span>  does what should bn_mat_is_identity return</p>\n</blockquote>\n<p>It's declared in include/bn/mat.h.</p>\n<p>I'll run your Python tests by myself, next week.</p>",
        "id": 200776499,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1592069322
    },
    {
        "content": "<p>sure and they are not actually tests but simple demonstrations of what is possible with the interface right now</p>",
        "id": 200777414,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592070762
    },
    {
        "content": "<p>but take care to change the genwrapper file according to your brlcad installation location</p>",
        "id": 200777494,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592070905
    },
    {
        "content": "<p>my installation is default and version is dev-7.31.0</p>",
        "id": 200778787,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592072627
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> , if you cloned the github repo for python-brlcad before today, then it might not have the recent changes which fix the memcmp problem and has the recent problem i am struggling to fx</p>",
        "id": 200804603,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592119825
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> how does one reproduce the error you're seeing?  The backtrace is still indicating that the call to wdb_export() is wrong.  As this is happening on the FFI side of things for ctypesgen, it may be a sign there's something wrong in the binding setup.  That said, the crash deep inside malloc typically indicates general corruption too.  It might help to run inside valgrind to catch the memory fault earlier.</p>",
        "id": 200902846,
        "sender_full_name": "Sean",
        "timestamp": 1592234146
    },
    {
        "content": "<p>the malloc error is most recent one which i couldnt fix</p>",
        "id": 200969762,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592278291
    },
    {
        "content": "<p>Umm I don't know much about the use of valgrind so a little help will be good for me</p>",
        "id": 201199693,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592427524
    },
    {
        "content": "<p>so i tried using valgrind but cant understand much of it</p>",
        "id": 201225702,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592452188
    },
    {
        "content": "<p>if you guys can get anything out of it please notify me</p>",
        "id": 201225745,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592452212
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/zCDnYlAYENPAb5OHE7BnjdFx/valgrind.log\">valgrind.log</a></p>",
        "id": 201225750,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592452231
    },
    {
        "content": "<p>this is the log</p>",
        "id": 201225751,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592452236
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> , what should the shaderargs argument get in this function? <a href=\"https://brlcad.org/docs/doxygen-r64112/db/d4a/group__wdb.xhtml#ga67ddf35d1fcfc8399d90bb8b527700bf\">https://brlcad.org/docs/doxygen-r64112/db/d4a/group__wdb.xhtml#ga67ddf35d1fcfc8399d90bb8b527700bf</a></p>",
        "id": 201254381,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592479132
    },
    {
        "content": "<p>grep says, that shaderargs is usually empty (NULL or \"\"), but only for shadername \"light\" \"shadows=1\" is a good value.</p>",
        "id": 201302620,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1592502299
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/201302620\">said</a>:</p>\n<blockquote>\n<p>grep says, that shaderargs is usually empty (NULL or \"\"), but only for shadername \"light\" \"shadows=1\" is a good value.</p>\n</blockquote>\n<p>thanks</p>",
        "id": 201350883,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592540395
    },
    {
        "content": "<p>i might try using mk_region1 for making regions if thats what it is supposed to do</p>",
        "id": 201350930,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592540420
    },
    {
        "content": "<p>and i also want to know...</p>",
        "id": 201351721,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592541628
    },
    {
        "content": "<p>why is the function called mk_region1 and not mk_region(i know there is a full caps MK_REGION definition)</p>",
        "id": 201351739,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592541668
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/201302620\">said</a>:</p>\n<blockquote>\n<p>grep says, that shaderargs is usually empty (NULL or \"\"), but only for shadername \"light\" \"shadows=1\" is a good value.</p>\n</blockquote>\n<p>i also forgot to ask another thing. what is the membname supposed to be?</p>",
        "id": 201351975,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592542008
    },
    {
        "content": "<p>or what should be an ideal call to this function</p>",
        "id": 201352168,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592542304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/201351975\">said</a>:</p>\n<blockquote>\n<p>i also forgot to ask another thing. what is the membname supposed to be?</p>\n</blockquote>\n<p>It's the name of the object you want to put in the region. E.g., the name of an arb8.</p>\n<p>The \"1\" means that you create a region with only one member. There is a mk_comb1() too.</p>",
        "id": 201487772,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1592673631
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/201487772\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/201351975\">said</a>:</p>\n<blockquote>\n<p>i also forgot to ask another thing. what is the membname supposed to be?</p>\n</blockquote>\n<p>It's the name of the object you want to put in the region. E.g., the name of an arb8.</p>\n<p>The \"1\" means that you create a region with only one member. There is a mk_comb1() too.</p>\n</blockquote>\n<p>by the object u mean the name of the shape</p>",
        "id": 201492416,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592680218
    },
    {
        "content": "<p>i have a sph object named 'sphere' and i passed the shader \"plastic {di .9 sp .4}\"</p>",
        "id": 201492516,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592680336
    },
    {
        "content": "<p>so should the call to function be like mk_region1(h.db_fp, \"random\", \"sphere\", \"plastic {di .9 sp .4}\", \"\"/None, \"255 0 0\") where arguments are fp=h.db_fp, combname=\"random\", membname=\"sphere\", shadername=\"plastic {di .9 sp .4}\", shaderargs=(\"\" or None), rgb=\"255 0 0\"(i dont know much about the rgb argument)</p>",
        "id": 201493360,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592681356
    },
    {
        "content": "<p>The <strong>rgb</strong> is not a real string but a 3 byte value with the colors. I.e. a <code>unsigned char rgb[3]</code> with the numbers for red, green, and blue between 0 and 255.</p>",
        "id": 201547897,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1592765305
    },
    {
        "content": "<p>ohh</p>",
        "id": 201547910,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592765345
    },
    {
        "content": "<p>can that be a reason for it returning a zero?</p>",
        "id": 201547978,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592765414
    },
    {
        "content": "<p>i was passing a string and not an array of unsigned char</p>",
        "id": 201547988,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1592765445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span>,  so that might be the reason for the mk_region1 returning 0 when i called it with the above arguments</p>",
        "id": 201983811,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593098649
    },
    {
        "content": "<p><a href=\"/user_uploads/1549/wxRr4mAx6fbAVnmiqlfHpau7/python-mk_region1.png\">python-mk_region1.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/wxRr4mAx6fbAVnmiqlfHpau7/python-mk_region1.png\" title=\"python-mk_region1.png\"><img src=\"/user_uploads/1549/wxRr4mAx6fbAVnmiqlfHpau7/python-mk_region1.png\"></a></div>",
        "id": 201993466,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593103099
    },
    {
        "content": "<p>the previous lines show what the arguments i am passing</p>",
        "id": 201993518,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593103129
    },
    {
        "content": "<p>You can try to pass 0 (NULL), which means \"no color\", for now.</p>",
        "id": 201994061,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1593103447
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/201351739\">said</a>:</p>\n<blockquote>\n<p>why is the function called mk_region1 and not mk_region(i know there is a full caps MK_REGION definition)</p>\n</blockquote>\n<p>This predates me, but it's quite likely that either (A) there was an mk_region for v4 databases that got replaced when we moved to v5 format (late 90's) or (B) it was to avoid confusion with MK_REGION, particularly for 3rd party devs working in case-insensitive languages like FORTRAN (which was a thing long ago).   We should rename it (heck the entire \"mk_\" prefix is inconsistent and clumsy), and likely will when libg comes to life.</p>",
        "id": 202028720,
        "sender_full_name": "Sean",
        "timestamp": 1593121248
    },
    {
        "content": "<p>or what daniel said, makes even more sense.. I forgot all about mk_comb1! hah.</p>",
        "id": 202028783,
        "sender_full_name": "Sean",
        "timestamp": 1593121283
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/201994061\">said</a>:</p>\n<blockquote>\n<p>You can try to pass 0 (NULL), which means \"no color\", for now.</p>\n</blockquote>\n<p>passed NULL but nothing new</p>",
        "id": 202053212,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593147836
    },
    {
        "content": "<p>still gives me 0 for some reason</p>",
        "id": 202053269,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593147874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> To clarify, are you saying the return code from mk_region1 is a zero and you're wondering why?</p>",
        "id": 202055466,
        "sender_full_name": "Sean",
        "timestamp": 1593151203
    },
    {
        "content": "<p>I believe a zero return code indicates success...</p>",
        "id": 202055491,
        "sender_full_name": "Sean",
        "timestamp": 1593151251
    },
    {
        "content": "<p>mk_region1 returns what mk_comb returns which returns what wdb_put_internal returns which returns what wdb_export_external returns which returns zero on success, or non-zero on failure anywhere along that call stack.</p>",
        "id": 202055560,
        "sender_full_name": "Sean",
        "timestamp": 1593151386
    },
    {
        "content": "<p>oh</p>",
        "id": 202057870,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593154632
    },
    {
        "content": "<p>i went with the boolean true-false(0=false, 1=true)</p>",
        "id": 202057876,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593154647
    },
    {
        "content": "<p>btw shouldnt the color of the region show up during  raytracing?</p>",
        "id": 202057954,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593154720
    },
    {
        "content": "<p>understandable.  always good to check the header and/or implementation.  it's not typical for C functions that have a plethora of potential error conditions to return just zero for all of them unless there's some sort of error argument or a separate error function that will tell you which occurred.</p>",
        "id": 202058058,
        "sender_full_name": "Sean",
        "timestamp": 1593154817
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 202058107,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593154887
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/202057954\">said</a>:</p>\n<blockquote>\n<p>btw shouldnt the color of the region show up during  raytracing?</p>\n</blockquote>\n<p>it depends how the color was set and what you're drawing, but in general yes it should i you set one.  that's pretty easy to sort out by looking at the resulting geometry.</p>",
        "id": 202058108,
        "sender_full_name": "Sean",
        "timestamp": 1593154887
    },
    {
        "content": "<p>so coming to the next issue</p>",
        "id": 202133708,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593200613
    },
    {
        "content": "<p>what should be passed to mk_comb() to make a region?</p>",
        "id": 202133760,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593200640
    },
    {
        "content": "<p>i have had no luck with mk_region1()</p>",
        "id": 202133837,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593200667
    },
    {
        "content": "<p>what does your mk_region1 call look like?</p>",
        "id": 202133918,
        "sender_full_name": "Sean",
        "timestamp": 1593200727
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/201993466\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/1549/wxRr4mAx6fbAVnmiqlfHpau7/python-mk_region1.png\">python-mk_region1.png</a></p>\n</blockquote>\n<p>this is from the python interactive shell</p>",
        "id": 202133971,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593200762
    },
    {
        "content": "<p>yes, and? :)</p>",
        "id": 202134052,
        "sender_full_name": "Sean",
        "timestamp": 1593200810
    },
    {
        "content": "<p>and?</p>",
        "id": 202134064,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593200819
    },
    {
        "content": "<p>do you know how the python code is transforming the wdb.mk_region1 into the actual function call?</p>",
        "id": 202134125,
        "sender_full_name": "Sean",
        "timestamp": 1593200869
    },
    {
        "content": "<p>i thought it calls the C function directly from this</p>",
        "id": 202134224,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593200906
    },
    {
        "content": "<p>okay<br>\ndo you know that j.db_fp.contents is right or should that be j.db_fp?</p>",
        "id": 202134269,
        "sender_full_name": "Sean",
        "timestamp": 1593200939
    },
    {
        "content": "<p>i think it is</p>",
        "id": 202134342,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593200984
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/202134269\">said</a>:</p>\n<blockquote>\n<p>okay<br>\ndo you know that j.db_fp.contents is right or should that be j.db_fp?</p>\n</blockquote>\n<p>j.db_fp actually</p>",
        "id": 202134369,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201000
    },
    {
        "content": "<p>it produces the same when called with j.db_fp</p>",
        "id": 202134449,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201020
    },
    {
        "content": "<p>what does it produce?</p>",
        "id": 202134565,
        "sender_full_name": "Sean",
        "timestamp": 1593201076
    },
    {
        "content": "<p>also, huge different between those two -- need to know which was right</p>",
        "id": 202134593,
        "sender_full_name": "Sean",
        "timestamp": 1593201093
    },
    {
        "content": "<p>i wanted to mean it returns the same</p>",
        "id": 202134597,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201098
    },
    {
        "content": "<p>0</p>",
        "id": 202134602,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201099
    },
    {
        "content": "<p>btw should i move the dev-7.31.0-disabled folder back</p>",
        "id": 202134621,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201113
    },
    {
        "content": "<p>uhm, I'm not sure the return value has any meaning yet</p>",
        "id": 202134676,
        "sender_full_name": "Sean",
        "timestamp": 1593201124
    },
    {
        "content": "<p>you should be checking the actual result</p>",
        "id": 202134685,
        "sender_full_name": "Sean",
        "timestamp": 1593201131
    },
    {
        "content": "<p>the database needs to be closed, and then see if it made a \"random\" object</p>",
        "id": 202134717,
        "sender_full_name": "Sean",
        "timestamp": 1593201150
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/202134621\">said</a>:</p>\n<blockquote>\n<p>btw should i move the dev-7.31.0-disabled folder back</p>\n</blockquote>",
        "id": 202134797,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201192
    },
    {
        "content": "<p>doesn't matter -- you don't need to install if you're not going to be running from there.  if you are going to run from there, you need to consistently run \"make install\" or you'll end up needing to debug weird states where what's in the install location doesn't match what's in the build tree</p>",
        "id": 202134932,
        "sender_full_name": "Sean",
        "timestamp": 1593201255
    },
    {
        "content": "<p>having both a build tree specified to compile into /usr/brlcad/dev-7.31.0 and ALSO a previous dev version installed in that same location is just asking for trouble.</p>",
        "id": 202135000,
        "sender_full_name": "Sean",
        "timestamp": 1593201295
    },
    {
        "content": "<p>if you're not going to use it, you can just delete it or leave it disabled.</p>",
        "id": 202135021,
        "sender_full_name": "Sean",
        "timestamp": 1593201307
    },
    {
        "content": "<p>i needed the libraries from the lib folder</p>",
        "id": 202135045,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201322
    },
    {
        "content": "<p>ah, for linking against ctypesgen?</p>",
        "id": 202135074,
        "sender_full_name": "Sean",
        "timestamp": 1593201347
    },
    {
        "content": "<p>sure</p>",
        "id": 202135075,
        "sender_full_name": "Sean",
        "timestamp": 1593201350
    },
    {
        "content": "<p>and i dont want to change every line containing the wrong path in the raw bindings</p>",
        "id": 202135079,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201352
    },
    {
        "content": "<p>so yeah, you can move it back -- just keep in mind that if you run into something weird with mged again, first thing to check will be making sure you \"make install\"'d</p>",
        "id": 202135217,
        "sender_full_name": "Sean",
        "timestamp": 1593201419
    },
    {
        "content": "<p>region is not there</p>",
        "id": 202135231,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201426
    },
    {
        "content": "<p>how was the database closed?</p>",
        "id": 202135269,
        "sender_full_name": "Sean",
        "timestamp": 1593201441
    },
    {
        "content": "<p>i called the function just now and checked if the region was there</p>",
        "id": 202135280,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201451
    },
    {
        "content": "<p>which function?</p>",
        "id": 202135296,
        "sender_full_name": "Sean",
        "timestamp": 1593201459
    },
    {
        "content": "<p>from mged</p>",
        "id": 202135313,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201470
    },
    {
        "content": "<p>i checked from mged</p>",
        "id": 202135323,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201475
    },
    {
        "content": "<p><code>wdb.wdb_close(self.db_fp)</code> to close the database</p>",
        "id": 202135386,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201493
    },
    {
        "content": "<p>there's no python binding in mged that will close the j.db_ip you were using</p>",
        "id": 202135396,
        "sender_full_name": "Sean",
        "timestamp": 1593201498
    },
    {
        "content": "<p>how is j.db_ip different from self.db_fp ?<br>\nand where did .contents come from?  really need to know which is correct.</p>",
        "id": 202135499,
        "sender_full_name": "Sean",
        "timestamp": 1593201557
    },
    {
        "content": "<p>db_ip is the db_i pointer</p>",
        "id": 202135660,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201621
    },
    {
        "content": "<p>db_fp is the rt_wdb pointer</p>",
        "id": 202135688,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201636
    },
    {
        "content": "<p>I meant j.db_fp and self.db_fp</p>",
        "id": 202135748,
        "sender_full_name": "Sean",
        "timestamp": 1593201664
    },
    {
        "content": "<p>the .contents is the main variable(not the pointer form)</p>",
        "id": 202135763,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201671
    },
    {
        "content": "<p>are there any other mk_ calls that work?  what do they look like?</p>",
        "id": 202135837,
        "sender_full_name": "Sean",
        "timestamp": 1593201720
    },
    {
        "content": "<p>the fucntion call in the picture i referenced was when i was still seeing if it works</p>",
        "id": 202135850,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201722
    },
    {
        "content": "<p>mk_sph?</p>",
        "id": 202135892,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201730
    },
    {
        "content": "<p>what's a call to it look like?</p>",
        "id": 202135936,
        "sender_full_name": "Sean",
        "timestamp": 1593201745
    },
    {
        "content": "<p>just like they are normally called from c code</p>",
        "id": 202135976,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201764
    },
    {
        "content": "<p>the functions are called the same way in python as they are called in C</p>",
        "id": 202136108,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201830
    },
    {
        "content": "<p>the arguments are same</p>",
        "id": 202136152,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201842
    },
    {
        "content": "<p>it differs in the language they are called from</p>",
        "id": 202136199,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201861
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>&gt;&gt;&gt; wdb.mk_comb()\nTraceback (most recent call last):\n  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;\nTypeError: this function takes at least 14 arguments (0 given)\n</code></pre></div>",
        "id": 202136355,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201943
    },
    {
        "content": "<p>the mk_comb requires (as it seems) 14 arguments from python</p>",
        "id": 202136381,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593201962
    },
    {
        "content": "<p>so what should a mk_comb call look like for a region in C?</p>",
        "id": 202137104,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593202392
    },
    {
        "content": "<p>mk_region1 just calls mk_comb, so if you can't get region working, you're less likely to get comb working ;)</p>",
        "id": 202148940,
        "sender_full_name": "Sean",
        "timestamp": 1593209533
    },
    {
        "content": "<p>mk_comb is fully generalized (hence the <em>14</em> arguments...)</p>",
        "id": 202148984,
        "sender_full_name": "Sean",
        "timestamp": 1593209560
    },
    {
        "content": "<p>can you show me a call to mk_sph that works?</p>",
        "id": 202149003,
        "sender_full_name": "Sean",
        "timestamp": 1593209574
    },
    {
        "content": "<p>yea wait</p>",
        "id": 202179931,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593255034
    },
    {
        "content": "<p><code>wdb.mk_sph(self.db_fp, name, point_t(*center), radius)</code> where <code>radius</code> is 1 by default (if no arguments are provided), <code>center</code> is a tuple (0, 0, 0) if no arguments are provided and <code>name</code> is the name of  the sph to be made</p>",
        "id": 202180606,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593256093
    },
    {
        "content": "<p>btw you might find this call in the Database class in the repo</p>",
        "id": 202185080,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593262877
    },
    {
        "content": "<p>okay, so then your  region call should be something like wdb.mk_region1(self.db_fp, combname, membname, \"\", \"\", rgb).</p>\n<p>I suspect the issue is passing None for NULL (my quick reading indicates that's not how ctypesgen works).  There's also a question of what 'h' was as it looked like in your code that you were supposed to pass 'rgb' (or maybe wants it as a byte array).</p>",
        "id": 202537352,
        "sender_full_name": "Sean",
        "timestamp": 1593587683
    },
    {
        "content": "<p>h = rgb</p>",
        "id": 202631127,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593642439
    },
    {
        "content": "<p>rgb was a more generalized name of the variable</p>",
        "id": 202631143,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593642455
    },
    {
        "content": "<p>sure, but I mean it might need to be in a different format like bytes(rgb)</p>",
        "id": 202631419,
        "sender_full_name": "Sean",
        "timestamp": 1593642655
    },
    {
        "content": "<p>you'd have to know more intimately what ctypesgen does with a int[3], because the function is expecting a char[3] and will have no way to know how to convert.</p>",
        "id": 202631536,
        "sender_full_name": "Sean",
        "timestamp": 1593642727
    },
    {
        "content": "<p>i am passing an unsigned char, which is interpreted as c_ubyte in ctypes.</p>",
        "id": 202709141,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593706092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/202537352\">said</a>:</p>\n<blockquote>\n<p>okay, so then your  region call should be something like wdb.mk_region1(self.db_fp, combname, membname, \"\", \"\", rgb).</p>\n<p>I suspect the issue is passing None for NULL (my quick reading indicates that's not how ctypesgen works).  There's also a question of what 'h' was as it looked like in your code that you were supposed to pass 'rgb' (or maybe wants it as a byte array).</p>\n</blockquote>\n<p>passing None might be the issue</p>",
        "id": 202709413,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593706231
    },
    {
        "content": "<p>i tried calling the way you said but it just doesnt work</p>",
        "id": 202712572,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593707767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/202709141\">said</a>:</p>\n<blockquote>\n<p>i am passing an unsigned char, which is interpreted as c_ubyte in ctypes.</p>\n</blockquote>\n<p>The parameter to mk_region1 doesn't take an unsigned char... it takes a pointer to one.  i.e., an array of three unsigned chars.</p>",
        "id": 202750220,
        "sender_full_name": "Sean",
        "timestamp": 1593728035
    },
    {
        "content": "<p>Unless you meant c_ubyte* that could also be the issue.  Can you step through it in a debugger?  That will say for certain what is going on and whether the arguments are correct.  Just put a breakpoint on mk_region1.</p>",
        "id": 202750582,
        "sender_full_name": "Sean",
        "timestamp": 1593728293
    },
    {
        "content": "<p>Do you know how to do that?</p>",
        "id": 202750592,
        "sender_full_name": "Sean",
        "timestamp": 1593728303
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/202750582\">said</a>:</p>\n<blockquote>\n<p>Unless you meant c_ubyte* that could also be the issue.  Can you step through it in a debugger?  That will say for certain what is going on and whether the arguments are correct.  Just put a breakpoint on mk_region1.</p>\n</blockquote>\n<p>i actually meant c_ubyte *. Sorry for the confusion</p>",
        "id": 202826062,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593798767
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> , I was thinking about switching the bindings generator to this one <a href=\"https://github.com/gjcarneiro/pybindgen\">https://github.com/gjcarneiro/pybindgen</a></p>",
        "id": 202867017,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593857604
    },
    {
        "content": "<p>the ctypesgen one is having some minor problems</p>",
        "id": 202867019,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593857629
    },
    {
        "content": "<p>so should i try switching to this one?</p>",
        "id": 202867022,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1593857638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> If you feel it's worth trying, sure go for it.  You're already way further with ctypesgen than I thought possible.</p>\n<p>Did you try running in a debugger to see what was wrong with mk_region1?</p>",
        "id": 203306007,
        "sender_full_name": "Sean",
        "timestamp": 1594233785
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/203306007\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> If you feel it's worth trying, sure go for it.  You're already way further with ctypesgen than I thought possible.</p>\n<p>Did you try running in a debugger to see what was wrong with mk_region1?</p>\n</blockquote>\n<p>i set a breakpoint but it doesnt touch that in gdb</p>",
        "id": 203315400,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594238503
    },
    {
        "content": "<p>it shows pending but never touches that</p>",
        "id": 203315584,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594238583
    },
    {
        "content": "<p>what about mk_comb?</p>",
        "id": 203317053,
        "sender_full_name": "Sean",
        "timestamp": 1594239284
    },
    {
        "content": "<p>what did you set the breakpoint on?</p>",
        "id": 203317082,
        "sender_full_name": "Sean",
        "timestamp": 1594239298
    },
    {
        "content": "<p>first on the <code>rgb[0] = 153</code>(the previous line), then on <code>mk_region1</code> call</p>",
        "id": 203317151,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594239353
    },
    {
        "content": "<p>if it doesn't break on mk_region1, then you're either crashing/failing before it gets to libwdb or you're not using the debugger in a way that it'll break properly.</p>",
        "id": 203317489,
        "sender_full_name": "Sean",
        "timestamp": 1594239542
    },
    {
        "content": "<p>how did you set a breakpoint on the python line??</p>",
        "id": 203317516,
        "sender_full_name": "Sean",
        "timestamp": 1594239562
    },
    {
        "content": "<p>what debugger are you using?</p>",
        "id": 203317526,
        "sender_full_name": "Sean",
        "timestamp": 1594239572
    },
    {
        "content": "<p><code>b trial.py:7</code> and <code>gdb</code></p>",
        "id": 203317548,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594239586
    },
    {
        "content": "<p>it not crashing or else gdb wouldnt have reported <code>[Inferior 1 (process 19575) exited normally]</code></p>",
        "id": 203317863,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594239748
    },
    {
        "content": "<p>did you try a simple \"b mk_region1\" ?</p>",
        "id": 203318104,
        "sender_full_name": "Sean",
        "timestamp": 1594239868
    },
    {
        "content": "<p>or did you use the line number?</p>",
        "id": 203318117,
        "sender_full_name": "Sean",
        "timestamp": 1594239876
    },
    {
        "content": "<p>line number</p>",
        "id": 203318126,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594239885
    },
    {
        "content": "<p>try using the symbol instead<br>\nshould also be able to set a breakpoint on something simple to confirm it's breaking properly like mk_sph or wdb_fopen</p>",
        "id": 203318221,
        "sender_full_name": "Sean",
        "timestamp": 1594239955
    },
    {
        "content": "<p>symbol?</p>",
        "id": 203318329,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240013
    },
    {
        "content": "<p>\"b mk_region1\" tells gdb to break when it encounters the mk_region1 symbol</p>",
        "id": 203318372,
        "sender_full_name": "Sean",
        "timestamp": 1594240037
    },
    {
        "content": "<p>whenever and however it is encountered</p>",
        "id": 203318389,
        "sender_full_name": "Sean",
        "timestamp": 1594240049
    },
    {
        "content": "<p>hmmm</p>",
        "id": 203318502,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240110
    },
    {
        "content": "<p>as it seems...</p>",
        "id": 203318611,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240170
    },
    {
        "content": "<p>gdb (or python) cannot access shaderargs and rgb</p>",
        "id": 203318660,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240197
    },
    {
        "content": "<p>so it stopped in mk_region1?</p>",
        "id": 203318798,
        "sender_full_name": "Sean",
        "timestamp": 1594240252
    },
    {
        "content": "<p>yea</p>",
        "id": 203318808,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240257
    },
    {
        "content": "<p><code>#0  mk_region1 (wdbp=0x7ffff7fbde79, combname=0x8 &lt;error: Cannot access memory at address 0x8&gt;, membname=0x7fffffffd160 \"\\001\", \n    shadername=0x7ffff3158c98 \"x\\331&gt;\\367\\377\\177\", shaderargs=0x1 &lt;error: Cannot access memory at address 0x1&gt;, \n    rgb=0xf &lt;error: Cannot access memory at address 0xf&gt;) at /mnt/sda2/github/brlcad/src/libwdb/reg.c:373\n</code></p>",
        "id": 203318849,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240281
    },
    {
        "content": "<p>cool, looks like all the args are invalid, not just shaderargs and rgb.  and their values are a telling indication of something else wrong.</p>",
        "id": 203318989,
        "sender_full_name": "Sean",
        "timestamp": 1594240337
    },
    {
        "content": "<p>combname is x8</p>",
        "id": 203319002,
        "sender_full_name": "Sean",
        "timestamp": 1594240349
    },
    {
        "content": "<p>that's wrong</p>",
        "id": 203319017,
        "sender_full_name": "Sean",
        "timestamp": 1594240356
    },
    {
        "content": "<p>x8?</p>",
        "id": 203319022,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240358
    },
    {
        "content": "<p>combname=0x8</p>",
        "id": 203319041,
        "sender_full_name": "Sean",
        "timestamp": 1594240365
    },
    {
        "content": "<p>it should be a pointer to a string.  it's the number 8</p>",
        "id": 203319066,
        "sender_full_name": "Sean",
        "timestamp": 1594240381
    },
    {
        "content": "<p><code>wdb.mk_region1(h.db_fp, 'random', 'comb0', \"\", \"\", rgb)</code></p>",
        "id": 203319171,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240438
    },
    {
        "content": "<p>same with shaderargs being '1' and rgb being 15</p>",
        "id": 203319180,
        "sender_full_name": "Sean",
        "timestamp": 1594240441
    },
    {
        "content": "<p>this is the call from my python script</p>",
        "id": 203319240,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240452
    },
    {
        "content": "<p>right, it should be a pointer to \"random\" but instead it's the value 8</p>",
        "id": 203319349,
        "sender_full_name": "Sean",
        "timestamp": 1594240503
    },
    {
        "content": "<p>is my call wrong?</p>",
        "id": 203319394,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240517
    },
    {
        "content": "<p>given the other examples, that seems unlikely.  either memory is simply corrupted due to something else wrong or the ctypesgen mapping isn't set up right or ... it's something we're not yet seeing.</p>",
        "id": 203319606,
        "sender_full_name": "Sean",
        "timestamp": 1594240612
    },
    {
        "content": "<p>how familiar are you with gdb?  print the whole stack trace, go up and see where the vars are coming from</p>",
        "id": 203319671,
        "sender_full_name": "Sean",
        "timestamp": 1594240647
    },
    {
        "content": "<p>yea wait</p>",
        "id": 203319694,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594240665
    },
    {
        "content": "<p>i went up where the vars are coming from and supposedly the variables are divided into two dicts i.e., <code>globals</code> and <code>locals</code></p>",
        "id": 203320671,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594241118
    },
    {
        "content": "<p>ima need a paste or screenshot to help understand</p>",
        "id": 203320850,
        "sender_full_name": "Sean",
        "timestamp": 1594241208
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>#0  mk_region1 (wdbp=0x7ffff7fbde79, combname=0x8 &lt;error: Cannot access memory at address 0x8&gt;, membname=0x7fffffffd160 &quot;\\001&quot;,\n    shadername=0x7ffff3158c98 &quot;x\\331&gt;\\367\\377\\177&quot;, shaderargs=0x1 &lt;error: Cannot access memory at address 0x1&gt;,\n    rgb=0xf &lt;error: Cannot access memory at address 0xf&gt;) at /mnt/sda2/github/brlcad/src/libwdb/reg.c:373\n#1  0x00007ffff7fbeff5 in ?? () from /lib/x86_64-linux-gnu/libffi.so.7\n#2  0x00007ffff7fbe40a in ?? () from /lib/x86_64-linux-gnu/libffi.so.7\n#3  0x00007ffff752e69c in _call_function_pointer (argcount=6, resmem=0x7fffffffd320, restype=&lt;optimized out&gt;, atypes=0x7fffffffd2a0,\n    avalues=0x7fffffffd2e0, pProc=0x7ffff34cfea8 &lt;mk_region1&gt;, flags=&lt;optimized out&gt;) at ./Modules/_ctypes/callproc.c:871\n#4  _ctypes_callproc (pProc=&lt;optimized out&gt;, argtuple=&lt;optimized out&gt;, flags=&lt;optimized out&gt;, argtypes=&lt;optimized out&gt;, restype=&lt;optimized out&gt;,\n    checker=&lt;optimized out&gt;) at ./Modules/_ctypes/callproc.c:1199\n#5  0x00007ffff752ec9c in PyCFuncPtr_call (self=&lt;optimized out&gt;, inargs=&lt;optimized out&gt;, kwds=0x0) at ./Modules/_ctypes/_ctypes.c:4201\n#6  0x00000000005f2246 in _PyObject_MakeTpCall (callable=&lt;_FuncPtr(__name__=&#39;mk_region1&#39;) at remote 0x7ffff2934700&gt;, args=&lt;optimized out&gt;,\n    nargs=&lt;optimized out&gt;, keywords=&lt;optimized out&gt;) at ../Include/internal/pycore_pyerrors.h:13\n#7  0x000000000056c70f in _PyObject_Vectorcall (kwnames=0x0, nargsf=&lt;optimized out&gt;, args=0x7ffff75837b8,\n    callable=&lt;_FuncPtr(__name__=&#39;mk_region1&#39;) at remote 0x7ffff2934700&gt;) at ../Include/cpython/abstract.h:125\n#8  _PyObject_Vectorcall (kwnames=0x0, nargsf=&lt;optimized out&gt;, args=0x7ffff75837b8,\n    callable=&lt;_FuncPtr(__name__=&#39;mk_region1&#39;) at remote 0x7ffff2934700&gt;) at ../Include/cpython/abstract.h:115\n#9  call_function (kwnames=0x0, oparg=&lt;optimized out&gt;, pp_stack=&lt;synthetic pointer&gt;, tstate=0x95a220) at ../Python/ceval.c:4987\n#10 _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at ../Python/ceval.c:3469\n#11 0x00000000005654d2 in PyEval_EvalFrameEx (throwflag=0, f=Frame 0x7ffff7583640, for file trial.py, line 9, in &lt;module&gt; ())\n    at ../Python/ceval.c:741\n#12 _PyEval_EvalCodeWithName (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;, argcount=&lt;optimized out&gt;,\n    kwnames=&lt;optimized out&gt;, kwargs=0x0, kwcount=&lt;optimized out&gt;, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0)\n    at ../Python/ceval.c:4298\n#13 0x0000000000686d53 in PyEval_EvalCodeEx (closure=0x0, kwdefs=0x0, defcount=0, defs=0x0, kwcount=0, kws=0x0, argcount=0, args=0x0,\n    locals=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, _co=&lt;optimized out&gt;) at ../Python/ceval.c:4327\n#14 PyEval_EvalCode (co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;) at ../Python/ceval.c:718\n#15 0x0000000000676101 in run_eval_code_obj (co=0x7ffff753ff50,\n    globals={&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: &lt;SourceFileLoader(name=&#39;__main__&#39;, path=&#39;trial.py&#39;) at remote 0x7ffff75446d0&gt;, &#39;__spec__&#39;: None, &#39;__annotations__&#39;: {}, &#39;__builtins__&#39;: &lt;module at remote 0x7ffff760d0e0&gt;, &#39;__file__&#39;: &#39;trial.py&#39;, &#39;__cached__&#39;: None, &#39;Database&#39;: &lt;_ctypes.PyCStructType at remote 0x108ed60&gt;, &#39;wdb&#39;: &lt;module at remote 0x7ffff7498860&gt;, &#39;pdb&#39;: &lt;module at remote 0x7ffff7498680&gt;, &#39;h&#39;: &lt;Database(db_ip=&lt;LP_struct_db_i at remote 0x7fffe65f6940&gt;, db_fp=&lt;LP_struct_rt_wdb at remote 0x7fffe65f62c0&gt;) at remote 0x7fffe65f6840&gt;, &#39;rgb&#39;: &lt;c_ubyte_Array_3 at remote 0x7fffe65f68c0&gt;},\n    locals={&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: &lt;SourceFileLoader(name=&#39;__main__&#39;, path=&#39;trial.py&#39;) at remote 0x7ffff75446d0&gt;, &#39;__spec__&#39;: None, &#39;__annotations__&#39;: {}, &#39;__builtins__&#39;: &lt;module at remote 0x7ffff760d0e0&gt;, &#39;__file__&#39;: &#39;trial.py&#39;, &#39;__cached__&#39;: None, &#39;Database&#39;: &lt;_ctypes.PyCStructType at remote 0x108ed60&gt;, &#39;wdb&#39;: &lt;module at remote 0x7ffff7498860&gt;, &#39;pdb&#39;: &lt;module at remote 0x7ffff7498680&gt;, &#39;h&#39;: &lt;--Type &lt;RET&gt; for more, q to quit, c to continue without paging--c\nDatabase(db_ip=&lt;LP_struct_db_i at remote 0x7fffe65f6940&gt;, db_fp=&lt;LP_struct_rt_wdb at remote 0x7fffe65f62c0&gt;) at remote 0x7fffe65f6840&gt;, &#39;rgb&#39;: &lt;c_ubyte_Array_3 at remote 0x7fffe65f68c0&gt;}) at ../Python/pythonrun.c:1125\n#16 0x000000000067617f in run_mod (mod=&lt;optimized out&gt;, filename=&lt;optimized out&gt;, globals={&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: &lt;SourceFileLoader(name=&#39;__main__&#39;, path=&#39;trial.py&#39;) at remote 0x7ffff75446d0&gt;, &#39;__spec__&#39;: None, &#39;__annotations__&#39;: {}, &#39;__builtins__&#39;: &lt;module at remote 0x7ffff760d0e0&gt;, &#39;__file__&#39;: &#39;trial.py&#39;, &#39;__cached__&#39;: None, &#39;Database&#39;: &lt;_ctypes.PyCStructType at remote 0x108ed60&gt;, &#39;wdb&#39;: &lt;module at remote 0x7ffff7498860&gt;, &#39;pdb&#39;: &lt;module at remote 0x7ffff7498680&gt;, &#39;h&#39;: &lt;Database(db_ip=&lt;LP_struct_db_i at remote 0x7fffe65f6940&gt;, db_fp=&lt;LP_struct_rt_wdb at remote 0x7fffe65f62c0&gt;) at remote 0x7fffe65f6840&gt;, &#39;rgb&#39;: &lt;c_ubyte_Array_3 at remote 0x7fffe65f68c0&gt;}, locals={&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: &lt;SourceFileLoader(name=&#39;__main__&#39;, path=&#39;trial.py&#39;) at remote 0x7ffff75446d0&gt;, &#39;__spec__&#39;: None, &#39;__annotations__&#39;: {}, &#39;__builtins__&#39;: &lt;module at remote 0x7ffff760d0e0&gt;, &#39;__file__&#39;: &#39;trial.py&#39;, &#39;__cached__&#39;: None, &#39;Database&#39;: &lt;_ctypes.PyCStructType at remote 0x108ed60&gt;, &#39;wdb&#39;: &lt;module at remote 0x7ffff7498860&gt;, &#39;pdb&#39;: &lt;module at remote 0x7ffff7498680&gt;, &#39;h&#39;: &lt;Database(db_ip=&lt;LP_struct_db_i at remote 0x7fffe65f6940&gt;, db_fp=&lt;LP_struct_rt_wdb at remote 0x7fffe65f62c0&gt;) at remote 0x7fffe65f6840&gt;, &#39;rgb&#39;: &lt;c_ubyte_Array_3 at remote 0x7fffe65f68c0&gt;}, flags=&lt;optimized out&gt;, arena=&lt;optimized out&gt;) at ../Python/pythonrun.c:1147\n#17 0x0000000000676237 in PyRun_FileExFlags (fp=0x95a9b0, filename_str=&lt;optimized out&gt;, start=&lt;optimized out&gt;, globals={&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: &lt;SourceFileLoader(name=&#39;__main__&#39;, path=&#39;trial.py&#39;) at remote 0x7ffff75446d0&gt;, &#39;__spec__&#39;: None, &#39;__annotations__&#39;: {}, &#39;__builtins__&#39;: &lt;module at remote 0x7ffff760d0e0&gt;, &#39;__file__&#39;: &#39;trial.py&#39;, &#39;__cached__&#39;: None, &#39;Database&#39;: &lt;_ctypes.PyCStructType at remote 0x108ed60&gt;, &#39;wdb&#39;: &lt;module at remote 0x7ffff7498860&gt;, &#39;pdb&#39;: &lt;module at remote 0x7ffff7498680&gt;, &#39;h&#39;: &lt;Database(db_ip=&lt;LP_struct_db_i at remote 0x7fffe65f6940&gt;, db_fp=&lt;LP_struct_rt_wdb at remote 0x7fffe65f62c0&gt;) at remote 0x7fffe65f6840&gt;, &#39;rgb&#39;: &lt;c_ubyte_Array_3 at remote 0x7fffe65f68c0&gt;}, locals={&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: &lt;SourceFileLoader(name=&#39;__main__&#39;, path=&#39;trial.py&#39;) at remote 0x7ffff75446d0&gt;, &#39;__spec__&#39;: None, &#39;__annotations__&#39;: {}, &#39;__builtins__&#39;: &lt;module at remote 0x7ffff760d0e0&gt;, &#39;__file__&#39;: &#39;trial.py&#39;, &#39;__cached__&#39;: None, &#39;Database&#39;: &lt;_ctypes.PyCStructType at remote 0x108ed60&gt;, &#39;wdb&#39;: &lt;module at remote 0x7ffff7498860&gt;, &#39;pdb&#39;: &lt;module at remote 0x7ffff7498680&gt;, &#39;h&#39;: &lt;Database(db_ip=&lt;LP_struct_db_i at remote 0x7fffe65f6940&gt;, db_fp=&lt;LP_struct_rt_wdb at remote 0x7fffe65f62c0&gt;) at remote 0x7fffe65f6840&gt;, &#39;rgb&#39;: &lt;c_ubyte_Array_3 at remote 0x7fffe65f68c0&gt;}, closeit=1, flags=0x7fffffffd938) at ../Python/pythonrun.c:1063\n#18 0x00000000006782ba in PyRun_SimpleFileExFlags (fp=0x95a9b0, filename=&lt;optimized out&gt;, closeit=1, flags=0x7fffffffd938) at ../Python/pythonrun.c:428\n#19 0x00000000006af5ce in pymain_run_file (cf=0x7fffffffd938, config=0x95ad90) at ../Modules/main.c:381\n#20 pymain_run_python (exitcode=0x7fffffffd930) at ../Modules/main.c:565\n#21 Py_RunMain () at ../Modules/main.c:644\n#22 0x00000000006af959 in Py_BytesMain (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;) at ../Modules/main.c:698\n#23 0x00007ffff7de10b3 in __libc_start_main (main=0x4ec640 &lt;main&gt;, argc=2, argv=0x7fffffffdb18, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, rtld_fini=&lt;optimized out&gt;, stack_end=0x7fffffffdb08) at ../csu/libc-start.c:308\n#24 0x00000000005f69be in _start () at ../Objects/obmalloc.c:1233\n</code></pre></div>",
        "id": 203321813,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594241713
    },
    {
        "content": "<p>cool, so looks like it's definitely getting called through ctypes, doing a FFI function lookup to call mk_region1</p>",
        "id": 203322756,
        "sender_full_name": "Sean",
        "timestamp": 1594242159
    },
    {
        "content": "<p>from the look of it, I would guess is that the ctypes marshalling is wrong which mean ctypesgen isn't specified correctly or it's parsing something incorrectly</p>",
        "id": 203322874,
        "sender_full_name": "Sean",
        "timestamp": 1594242223
    },
    {
        "content": "<p>you could try going up to frame #3, to _call_function_pointer, and inspect atypes and avalues ... those presumably are the arguments.  confirm that the first argument is the right type.  it should be a c_char_p, however that get encoded in atypes</p>",
        "id": 203323053,
        "sender_full_name": "Sean",
        "timestamp": 1594242317
    },
    {
        "content": "<p><code>atypes</code> = <code>(ffi_type **) 0x7fffffffd2a0</code></p>",
        "id": 203323436,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594242512
    },
    {
        "content": "<p><code>avalues</code> = <code>(void **) 0x7fffffffd2e0</code></p>",
        "id": 203323462,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594242525
    },
    {
        "content": "<p>there's nothing much in those two variables</p>",
        "id": 203323744,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594242669
    },
    {
        "content": "<p>The <code>globals</code> and <code>locals</code> in one of the frames are the variables I am using to call mk_region1</p>",
        "id": 203507083,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594388255
    },
    {
        "content": "<p>Probably in frame 17</p>",
        "id": 203507096,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594388266
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/203507083\">said</a>:</p>\n<blockquote>\n<p>The <code>globals</code> and <code>locals</code> in one of the frames are the variables I am using to call mk_region1</p>\n</blockquote>\n<p>the main thing here is that i cant check from them</p>",
        "id": 203632441,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594539452
    },
    {
        "content": "<p>like this one <code>'rgb': &lt;c_ubyte_Array_3 at remote 0x7fffe65f68c0&gt;}</code></p>",
        "id": 203632483,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594539516
    },
    {
        "content": "<p>it says at <code>remote 0x7fffe65f68c0</code></p>",
        "id": 203632485,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594539529
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/203323744\">said</a>:</p>\n<blockquote>\n<p>there's nothing much in those two variables</p>\n</blockquote>\n<p>everything is in those two variables <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> </p>\n<p>it's just typewise, they are opaque.  you have to lok at atypes to get the ffi type, then one can cast the a_values pointer to the right type from void*</p>",
        "id": 203680394,
        "sender_full_name": "Sean",
        "timestamp": 1594619535
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/203680394\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/203323744\">said</a>:</p>\n<blockquote>\n<p>there's nothing much in those two variables</p>\n</blockquote>\n<p>everything is in those two variables <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> </p>\n<p>it's just typewise, they are opaque.  you have to look at atypes to get the ffi type, then one can cast the a_values pointer to the right type from void*</p>\n</blockquote>\n<p>i mean i dont know which type it is and which type to cast avalues to so that i can get what it contains</p>",
        "id": 203681083,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594620632
    },
    {
        "content": "<p>if you read atypes[0] or *atypes[0], that should give an ffi type directly or a code that implies a type indirectly.</p>",
        "id": 203757626,
        "sender_full_name": "Sean",
        "timestamp": 1594667531
    },
    {
        "content": "<p>then you cast avalues[0] or *avalues[0] to whatever that type is, probably.  maybe a field of *avalues[0], depends what you see.</p>",
        "id": 203757695,
        "sender_full_name": "Sean",
        "timestamp": 1594667579
    },
    {
        "content": "<p>i have to see to that later</p>",
        "id": 203757895,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594667675
    },
    {
        "content": "<p>I wish there was a way I could attach to your debugger remotely!</p>",
        "id": 203758132,
        "sender_full_name": "Sean",
        "timestamp": 1594667812
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247135\">@Sumagna Das</span> do you have a .bz account?  you could try setting up and running on our server and I could see what's going on there.</p>",
        "id": 203758163,
        "sender_full_name": "Sean",
        "timestamp": 1594667835
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/python-brlcad/near/203758163\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247135\">Sumagna Das</span> do you have a .bz account?  you could try setting up and running on our server and I could see what's going on there.</p>\n</blockquote>\n<p>will do that if u want</p>",
        "id": 203759454,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594668467
    },
    {
        "content": "<p>and also where should i signup?</p>",
        "id": 203759648,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594668547
    },
    {
        "content": "<p>will follow up with private messages</p>",
        "id": 203759948,
        "sender_full_name": "Sean",
        "timestamp": 1594668683
    },
    {
        "content": "<p>ok</p>",
        "id": 203759979,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1594668703
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>, i setted up python-brlcad on the server. i didnt have time before today....</p>",
        "id": 205242172,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1595946419
    },
    {
        "content": "<p>you can see now what it says</p>",
        "id": 205242197,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1595946431
    },
    {
        "content": "<p>i changed the bindings generator from <code>ctypesgen</code> to <code>pybindgen</code>.</p>",
        "id": 212266251,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1601882941
    },
    {
        "content": "<p>i am going to try it out and see if it works.</p>",
        "id": 212266272,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1601882961
    },
    {
        "content": "<p>the ctypesgen was not working out for me</p>",
        "id": 212266383,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1601883018
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span>  if it works, i will tell you else it will be dead as before</p>",
        "id": 212266453,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1601883074
    },
    {
        "content": "<p>one of the main problems i have encountered till now is that the lib path has to be in the <code>LD_LIBRARY_PATH</code> variable if on linux</p>",
        "id": 212266756,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1601883312
    },
    {
        "content": "<p>dont know the same for windows</p>",
        "id": 212266767,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1601883325
    },
    {
        "content": "<p>it still doesnt get all the functions <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span> <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>",
        "id": 212351729,
        "sender_full_name": "Sumagna Das",
        "timestamp": 1601929403
    }
]