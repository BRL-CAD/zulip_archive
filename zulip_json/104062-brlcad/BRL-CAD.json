[
    {
        "content": "<p>when i open mged of brl-cad, it asks me to open a database, how to open it ? pls any mentor of brl -cad tasks tell me about this</p>",
        "id": 120139619,
        "sender_full_name": "Advith Shetty",
        "timestamp": 1514018133
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-email=\"advithmshetty@gmail.com\" data-user-id=\"105123\">@Advith Shetty</span>  I'm not a mentor but I think I could help you out, go to file and then open, then choose the database, it will be a .g file.</p>",
        "id": 120139848,
        "sender_full_name": "Siddharth",
        "timestamp": 1514018706
    },
    {
        "content": "<p>Actually, I believe it can be any file extension though, if you save it without a file extension. But yeah, generally it will be in a <code>.g</code> file format.</p>",
        "id": 120140359,
        "sender_full_name": "Jeff Sieu",
        "timestamp": 1514020005
    },
    {
        "content": "<p>Well, I think you actually have to create a database first.</p>",
        "id": 120145438,
        "sender_full_name": "Naseef",
        "timestamp": 1514032924
    },
    {
        "content": "<p>Or you use one from &lt;BRL-CAD installation&gt;/share/db/.</p>",
        "id": 120150140,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1514044453
    },
    {
        "content": "<p>What are we really required to do in this task its too confusing</p>",
        "id": 120461132,
        "sender_full_name": "Nwankwo Ifeanyichukwu",
        "timestamp": 1514754346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"divinenwa7@gmail.com\" data-user-id=\"105601\">@Nwankwo Ifeanyichukwu</span> Which task are you on?</p>",
        "id": 120470340,
        "sender_full_name": "Jeff Sieu",
        "timestamp": 1514776823
    },
    {
        "content": "<p>I am Divyanshu participating in GCI.The brl cad task of creating chess models are very interesting</p>",
        "id": 120517605,
        "sender_full_name": "Divyanshu Mehrotra",
        "timestamp": 1514891788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"latarajeev17@gmail.com\" data-user-id=\"105647\">@Divyanshu Mehrotra</span> glad to hear it!  I hope you'll consider some of the other modeling tasks too as they can be challenging but really fun too</p>",
        "id": 120523574,
        "sender_full_name": "Sean",
        "timestamp": 1514904392
    },
    {
        "content": "<p>Hello. This is Neha Krishna and I am participating in GSoD. BRL CAD seems really interesting and as I am getting familiar with it, I hope I can contribute something significant to its documentation. It is great to be able to connect this way. :)</p>",
        "id": 165811278,
        "sender_full_name": "Neha Krishna Dasari",
        "timestamp": 1558014622
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222159\">@Neha Krishna Dasari</span> thank you for considering BRL-CAD as your GSoD project. Could you please tell something more about yourself, especially your skills in documentation? Can you provide us with examples of documentations you have written?</p>",
        "id": 165819290,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1558019568
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> . Sorry I haven't given a prompt reply. I have been occupied due to personal reasons. I am a student pursuing a degree in Computer Science from IIIT Bangalore, India.  To be honest I don't really have much experience with respect to documentation but I do write reports and have a knack for technical writing. I am planning on learning some principles as far as technical documentation is concerned.</p>",
        "id": 166625208,
        "sender_full_name": "Neha Krishna Dasari",
        "timestamp": 1558952530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222159\">@Neha Krishna Dasari</span> Without much experience in technical writing your chance to get chosen for GSoD is rather low. However, engaging in open source projects as BRL-CAD can help you to gain experience in many IT areas as system programming, web design, documentation, social media, etc.. This experience can be helpful when you search a job as well.</p>\n<p>If you like, we could together look for some tasks you can do for BRL-CAD, maybe in accord with your course contents.</p>",
        "id": 166655195,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1558980471
    },
    {
        "content": "<p>Is there an easy way known to clear an inmem database, i.e.removing everything from it?</p>",
        "id": 227481226,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1614105480
    },
    {
        "content": "<p>via the C API</p>",
        "id": 227481846,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1614105711
    },
    {
        "content": "<p>Um.  Not off the top of my head.  Any reason not to just delete it and create a new one?</p>",
        "id": 227486902,
        "sender_full_name": "starseeker",
        "timestamp": 1614107584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> db_close()</p>",
        "id": 227494023,
        "sender_full_name": "Sean",
        "timestamp": 1614110476
    },
    {
        "content": "<p>that of course also decrements the usage count, releases all entries, purges memory, syncs to disk, and closes the instance...</p>",
        "id": 227494405,
        "sender_full_name": "Sean",
        "timestamp": 1614110613
    },
    {
        "content": "<p>the block in there that releases  the all the directory entries could be extracted into a db_clear() or similar, make db_close() call it, and make it available to others where you don't necessarily want to release everything</p>",
        "id": 227494653,
        "sender_full_name": "Sean",
        "timestamp": 1614110707
    },
    {
        "content": "<p>Yep, db_close() kills the database. And, because a db_clear() requires a bit more than just copy-n-paste from db_close(), I decided to delete and recreate the database, like it's done in the file case.</p>",
        "id": 227648525,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1614191491
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> You can start working with the rt3 repository on Github now, actually - that migration was completed successfully.</p>",
        "id": 227655696,
        "sender_full_name": "starseeker",
        "timestamp": 1614194255
    },
    {
        "content": "<p>Ups, indeed. Now, that you mention it, there was something.<br>\nDid I already mention that I don't like git? (Or is it Github?)</p>",
        "id": 227805614,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1614274435
    },
    {
        "content": "<p>sure ain't darcs :D</p>",
        "id": 227805739,
        "sender_full_name": "Erik",
        "timestamp": 1614274464
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102939\">Daniel Rossberg</span> <a href=\"#narrow/stream/104062-general/topic/BRL-CAD/near/227805614\">said</a>:</p>\n<blockquote>\n<p>Ups, indeed. Now, that you mention it, there was something.<br>\nDid I already mention that I don't like git? (Or is it Github?)</p>\n</blockquote>\n<p>We're long overdue getting off of SourceForge... they've not been good hosts to/for us for years now.  That said, <a href=\"http://svnhub.com\">svnhub.com</a> is a thing... ;)</p>",
        "id": 227815236,
        "sender_full_name": "Sean",
        "timestamp": 1614278340
    },
    {
        "content": "<p>They even differentiate the client so it's the same https URL for checkout, if I read it right.  They handle the rest transparently, which is pretty cool.</p>",
        "id": 227815547,
        "sender_full_name": "Sean",
        "timestamp": 1614278471
    },
    {
        "content": "<p>public svn repo, mailing list, file server (https)... what else did we actually  use from <a href=\"http://sf.net\">sf.net</a>? they had a compile farm long ago, but it was a bit of a pita iirc</p>",
        "id": 228019362,
        "sender_full_name": "Erik",
        "timestamp": 1614387103
    },
    {
        "content": "<p>repos (svn), mailling lists (mailman), mailing list archiving, large file hosting, trackers (bugs, patches, support requests, feature requests, geometry), discussion forums, user auth, and news/blog/announcements.</p>",
        "id": 228034437,
        "sender_full_name": "Sean",
        "timestamp": 1614402972
    },
    {
        "content": "<p>Hmm, <strong>mged</strong> is broken:</p>\n<div class=\"codehilite\"><pre><span></span><code>mged: error while loading shared libraries: libitk3.4.so: cannot open shared object file: No such file or directory\n</code></pre></div>\n<p>(Debian buster)</p>\n<p>It looks like the new separated build sets a wrong install (r)path, i.e. it is installed at the usual place, but the executables can't find it there(?)</p>",
        "id": 231363595,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616438834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> Hmm, interesting.  That's in the final install location, not in the build directory?</p>",
        "id": 231378306,
        "sender_full_name": "starseeker",
        "timestamp": 1616444430
    },
    {
        "content": "<p>What do the following report?</p>\n<p>readelf -d bin/mged | grep RUNPATH</p>\n<p>readelf -d lib/itk3.4/libitk3.4.so | grep RUNPATH</p>",
        "id": 231379110,
        "sender_full_name": "starseeker",
        "timestamp": 1616444771
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 231379197,
        "sender_full_name": "starseeker",
        "timestamp": 1616444813
    },
    {
        "content": "<p>Oh, I see - you're right, itk's not getting the correct word for it's final install.</p>",
        "id": 231379268,
        "sender_full_name": "starseeker",
        "timestamp": 1616444855
    },
    {
        "content": "<p>Curious...</p>",
        "id": 231379287,
        "sender_full_name": "starseeker",
        "timestamp": 1616444868
    },
    {
        "content": "<p>Well, I tested branch merging, now this is a good excuse to test commit reverting in git...</p>",
        "id": 231380563,
        "sender_full_name": "starseeker",
        "timestamp": 1616445419
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> I think I have it backed out of main - let me know if you still see any issues.  I'll have to dig a bit to figure out where my missing wire is on the rpath assignments.</p>",
        "id": 231380872,
        "sender_full_name": "starseeker",
        "timestamp": 1616445552
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span>   Could you do me a favor and try buliding the extbuild branch?  I think I've addressed the issues you hit, but it needs much more extensive testing.  I'm fairly sure I got caught by an \"accidental\" success with Itcl/Itk earlier, so more stress testing would be welcome.  (Plus, my brain isn't at full capacity today...)</p>",
        "id": 231411518,
        "sender_full_name": "starseeker",
        "timestamp": 1616464396
    },
    {
        "content": "<p>CMake fails:</p>\n<div class=\"codehilite\"><pre><span></span><code>CMake Error at misc/tools/Third_Party_Exec.cmake:157 (include):\n  include could not find load file:\n\n    /usr/share/cmake-3.13/Modules/FindCHRPATH.cmake\nCall Stack (most recent call first):\n  misc/tools/CMakeLists.txt:118 (THIRD_PARTY_EXECUTABLE)\n</code></pre></div>\n<p><strong>BRLCAD_CHRPATH</strong> is set to <strong>BUNDLED (AUTO)</strong>.</p>",
        "id": 231432011,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616485350
    },
    {
        "content": "<p>As far as I know, if the build of, for example, <em>itk</em> is separated from BRL-CAD's main build, you need to <strong>import</strong> <em>itk</em> in BRL-CAD, which should be something like</p>\n<div class=\"codehilite\"><pre><span></span><code>add_library(itk SHARED IMPORTED GLOBAL)\nset(ITK_LIB_FILE &quot;${CMAKE_CURRENT_BINARY_DIR}/ITK-BUILD/libitk.so&quot;)\nset_property(TARGET itk PROPERTY IMPORTED LOCATION ${ITK_LIB_FILE})\ninstall(FILES ${ITK_LIB_FILE} DESTINATION lib)\n</code></pre></div>\n<p>or?</p>\n<p>BTW, the installation path of the itk library was indeed unusual: It was in lib/itk3.4, but the old path was in lib (without the subdirectory).</p>",
        "id": 231435566,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616487821
    },
    {
        "content": "<p>Ah, right - the cached value in my build masked the missing FindCHRPATH.cmake file...</p>",
        "id": 231454751,
        "sender_full_name": "starseeker",
        "timestamp": 1616498880
    },
    {
        "content": "<p>Yes, the Tcl/Tk package libs are in subdirs in lib - in the original CMakeified build, I flattened everything into the lib directory, but this time around I wanted to try and do things the \"normal\" way for the Itcl/Itk packages.</p>",
        "id": 231455521,
        "sender_full_name": "starseeker",
        "timestamp": 1616499292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> I'm trying to do something which (to the best of my knowledge) is unique in the CMake world - I'm incorporating 3rd party build outputs into BRL-CAD's main build in such a way that they can be managed as if they were all produced as direct build outputs of the primary CMake build.</p>",
        "id": 231467213,
        "sender_full_name": "starseeker",
        "timestamp": 1616505148
    },
    {
        "content": "<p>This is what I thought. I did once something similar. There, I \"imported\" the result of the external build. (BTW, the external build was a BRL-CAD library.)</p>",
        "id": 231468201,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616505539
    },
    {
        "content": "<p>I.e., \"itk\" gets all the attributes of a BRL-CAD product, but doesn't contain an own build, instead it references to the products of an external build.</p>",
        "id": 231468462,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616505650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> I've made some adjustments to extbuild.  If you build now, this is what you should get (assuming it's working for you the way it is for me):</p>\n<div class=\"codehilite\"><pre><span></span><code>$ readelf -d /usr/brlcad/dev-7.32.3/lib/libpng_brl.so|grep RUNPATH\n 0x000000000000001d (RUNPATH)            Library runpath: [/usr/brlcad/dev-7.32.3/lib:$ORIGIN/../lib]\n$ readelf -d /usr/brlcad/dev-7.32.3/lib/itcl3.4/libitcl3.4.so|grep RUNPATH\n 0x000000000000001d (RUNPATH)            Library runpath: [/usr/brlcad/dev-7.32.3/lib/itcl3.4:$ORIGIN/../../lib/itcl3.4]\n$ readelf -d /usr/brlcad/dev-7.32.3/lib/itk3.4/libitk3.4.so|grep RUNPATH\n 0x000000000000001d (RUNPATH)            Library runpath: [/usr/brlcad/dev-7.32.3/lib/itk3.4:$ORIGIN/../../lib/itk3.4]\n</code></pre></div>",
        "id": 231472402,
        "sender_full_name": "starseeker",
        "timestamp": 1616507161
    },
    {
        "content": "<p>/me nods.  Yes, the imported targets are key.  What I'm doing is taking them beyond their normal usage, which (as I understand it) is to be able to reference installed libraries from the OS as if they were CMake build targets.  I'm doing that, but rather than just referencing them I'm also defining custom rules for those imported targets that install them the \"normal\" CMake way.  So a \"make install\", \"make package\", etc. will incorporate not only the BRL-CAD build outputs but also the files from the imported targets.  That part's not too tricky, but setting the RPATH correctly per the main build's CMake settings is.</p>",
        "id": 231473694,
        "sender_full_name": "starseeker",
        "timestamp": 1616507661
    },
    {
        "content": "<p>The other gotcha is that CMake's main build doesn't know anything about the guts of the ExternalProject_Add builds, so it doesn't know when it needs to hold off building the object files for BRL-CAD sources until the external projects are complete.  Normally this has to be addressed with the Superbuild pattern, but when I tried that it was a really bad fit with all our other CMake logic.  In the end I defined a second layer of custom target above the ExternalProject_Add targets, which explicitly list the build outputs we care about and allow the main CMake build to correctly set file level dependencies.</p>",
        "id": 231474037,
        "sender_full_name": "starseeker",
        "timestamp": 1616507808
    },
    {
        "content": "<p>The core magic is in <a href=\"https://github.com/BRL-CAD/brlcad/blob/extbuild/src/other/ext/CMake/ExternalProject_Target.cmake\">https://github.com/BRL-CAD/brlcad/blob/extbuild/src/other/ext/CMake/ExternalProject_Target.cmake</a></p>",
        "id": 231474081,
        "sender_full_name": "starseeker",
        "timestamp": 1616507831
    },
    {
        "content": "<p>Something is still wrong. I started everything from scratch, the CMake configuration worked now, but readelf gives me still the wrong path:</p>\n<div class=\"codehilite\"><pre><span></span><code>readelf -d /home/rossberg/bin/brlcad/lib/itk3.4/libitk3.4.so | grep RUNPATH\n 0x000000000000001d (RUNPATH)            Library runpath: [/home/rossberg/lib/brlcad/lib/itk3.4:$ORIGIN/../../lib/itk3.4]\n</code></pre></div>\n<p>CMAKE_INSTALL_PATH is /home/rossberg/bin/brlcad.</p>",
        "id": 231492196,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616514173
    },
    {
        "content": "<p>Did you set CMAKE_INSTALL_PREFIX to /home/rossberg ?  If so, that's correct.</p>",
        "id": 231495181,
        "sender_full_name": "starseeker",
        "timestamp": 1616515158
    },
    {
        "content": "<p>No: /home/rossberg/bin/brlcad</p>",
        "id": 231495934,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616515373
    },
    {
        "content": "<p>Er, sorry - that's what I meant to type.  Then yes, that looks correct.</p>",
        "id": 231496908,
        "sender_full_name": "starseeker",
        "timestamp": 1616515688
    },
    {
        "content": "<p>Is it not working?</p>",
        "id": 231496923,
        "sender_full_name": "starseeker",
        "timestamp": 1616515694
    },
    {
        "content": "<p>Oh, wait - you mean bin/brlcad is in the CMAKE_INSTALL_PREFIX var itself?</p>",
        "id": 231497074,
        "sender_full_name": "starseeker",
        "timestamp": 1616515740
    },
    {
        "content": "<p>I.e. <code>cmake -DCMAKE_INSTALL_PREFIX=/home/rossberg/bin/brlcad</code> ?</p>",
        "id": 231497154,
        "sender_full_name": "starseeker",
        "timestamp": 1616515768
    },
    {
        "content": "<p>OK, I know what's substituting lib for bin.  Give me a minute while I think about how best to handle it...</p>",
        "id": 231497229,
        "sender_full_name": "starseeker",
        "timestamp": 1616515799
    },
    {
        "content": "<p>(Sorry, I've never encountered \"/bin/\" in an install path before, so I misparsed it...</p>",
        "id": 231497403,
        "sender_full_name": "starseeker",
        "timestamp": 1616515854
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> OK, I got it working for a similar path:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ readelf -d /usr/brlcad/bin/brlcad/lib/libpng_brl.so|grep RUNPATH\n 0x000000000000001d (RUNPATH)            Library runpath: [/usr/brlcad/bin/brlcad/lib:$ORIGIN/../lib]\n</code></pre></div>",
        "id": 231499097,
        "sender_full_name": "starseeker",
        "timestamp": 1616516463
    },
    {
        "content": "<p>Yeah, /home/rossberg/bin is my standard personal binary path. There I install the programs in subdirectories (e.g. BRL-CAD in brlcad). This way, I don't need to become root when installing stuff.</p>",
        "id": 231509723,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616520263
    },
    {
        "content": "<p>/me nods.  I think I've got it handled now.  4a03f3b50309 uses a regex to tighten the replacement to the end of the path, so it should leave the root intact.</p>",
        "id": 231510148,
        "sender_full_name": "starseeker",
        "timestamp": 1616520402
    },
    {
        "content": "<p>The readelf output looks good now(?):</p>\n<div class=\"codehilite\"><pre><span></span><code>readelf -d /home/rossberg/bin/brlcad/lib/itk3.4/libitk3.4.so | grep RUNPATH\n 0x000000000000001d (RUNPATH)            Library runpath: [/home/rossberg/bin/brlcad/lib/itk3.4:$ORIGIN/../../lib/itk3.4]\n</code></pre></div>\n<p>but, I'm still getting</p>\n<div class=\"codehilite\"><pre><span></span><code>mged: error while loading shared libraries: libitk3.4.so: cannot open shared object file: No such file or directory\n</code></pre></div>",
        "id": 231517785,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616523354
    },
    {
        "content": "<p>It is not in the search path:</p>\n<div class=\"codehilite\"><pre><span></span><code>     10015:     find library=libitk3.4.so [0]; searching\n     10015:      search path=/home/rossberg/bin/brlcad/lib:/home/rossberg/bin/brlcad/bin/../lib/tls/haswell/x86_64:/home/rossberg/bin/brlcad/bin/../lib/tls/haswell:/home/rossberg/bin/brlcad/bin/../lib/tls/x86_64:/home/rossberg/bin/brlcad/bin/../lib/tls:/home/rossberg/bin/brlcad/bin/../lib/haswell/x86_64:/home/rossberg/bin/brlcad/bin/../lib/haswell:/home/rossberg/bin/brlcad/bin/../lib/x86_64:/home/rossberg/bin/brlcad/bin/../lib         (RUNPATH from file mged)\n     10015:       trying file=/home/rossberg/bin/brlcad/lib/libitk3.4.so\n     10015:       trying file=/home/rossberg/bin/brlcad/bin/../lib/tls/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/home/rossberg/bin/brlcad/bin/../lib/tls/haswell/libitk3.4.so\n     10015:       trying file=/home/rossberg/bin/brlcad/bin/../lib/tls/x86_64/libitk3.4.so\n     10015:       trying file=/home/rossberg/bin/brlcad/bin/../lib/tls/libitk3.4.so\n     10015:       trying file=/home/rossberg/bin/brlcad/bin/../lib/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/home/rossberg/bin/brlcad/bin/../lib/haswell/libitk3.4.so\n     10015:       trying file=/home/rossberg/bin/brlcad/bin/../lib/x86_64/libitk3.4.so\n     10015:       trying file=/home/rossberg/bin/brlcad/bin/../lib/libitk3.4.so\n     10015:      search cache=/etc/ld.so.cache\n     10015:      search path=/lib/x86_64-linux-gnu/tls/haswell/x86_64:/lib/x86_64-linux-gnu/tls/haswell:/lib/x86_64-linux-gnu/tls/x86_64:/lib/x86_64-linux-gnu/tls:/lib/x86_64-linux-gnu/haswell/x86_64:/lib/x86_64-linux-gnu/haswell:/lib/x86_64-linux-gnu/x86_64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/tls/haswell/x86_64:/usr/lib/x86_64-linux-gnu/tls/haswell:/usr/lib/x86_64-linux-gnu/tls/x86_64:/usr/lib/x86_64-linux-gnu/tls:/usr/lib/x86_64-linux-gnu/haswell/x86_64:/usr/lib/x86_64-linux-gnu/haswell:/usr/lib/x86_64-linux-gnu/x86_64:/usr/lib/x86_64-linux-gnu:/lib/tls/haswell/x86_64:/lib/tls/haswell:/lib/tls/x86_64:/lib/tls:/lib/haswell/x86_64:/lib/haswell:/lib/x86_64:/lib:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib          (system search path)\n     10015:       trying file=/lib/x86_64-linux-gnu/tls/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/lib/x86_64-linux-gnu/tls/haswell/libitk3.4.so\n     10015:       trying file=/lib/x86_64-linux-gnu/tls/x86_64/libitk3.4.so\n     10015:       trying file=/lib/x86_64-linux-gnu/tls/libitk3.4.so\n     10015:       trying file=/lib/x86_64-linux-gnu/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/lib/x86_64-linux-gnu/haswell/libitk3.4.so\n     10015:       trying file=/lib/x86_64-linux-gnu/x86_64/libitk3.4.so\n     10015:       trying file=/lib/x86_64-linux-gnu/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64-linux-gnu/tls/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64-linux-gnu/tls/haswell/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64-linux-gnu/tls/x86_64/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64-linux-gnu/tls/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64-linux-gnu/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64-linux-gnu/haswell/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64-linux-gnu/x86_64/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64-linux-gnu/libitk3.4.so\n     10015:       trying file=/lib/tls/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/lib/tls/haswell/libitk3.4.so\n     10015:       trying file=/lib/tls/x86_64/libitk3.4.so\n     10015:       trying file=/lib/tls/libitk3.4.so\n     10015:       trying file=/lib/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/lib/haswell/libitk3.4.so\n     10015:       trying file=/lib/x86_64/libitk3.4.so\n     10015:       trying file=/lib/libitk3.4.so\n     10015:       trying file=/usr/lib/tls/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/usr/lib/tls/haswell/libitk3.4.so\n     10015:       trying file=/usr/lib/tls/x86_64/libitk3.4.so\n     10015:       trying file=/usr/lib/tls/libitk3.4.so\n     10015:       trying file=/usr/lib/haswell/x86_64/libitk3.4.so\n     10015:       trying file=/usr/lib/haswell/libitk3.4.so\n     10015:       trying file=/usr/lib/x86_64/libitk3.4.so\n     10015:       trying file=/usr/lib/libitk3.4.so\n     10015:\nmged: error while loading shared libraries: libitk3.4.so: cannot open shared object file: No such file or directory\n</code></pre></div>",
        "id": 231518571,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616523701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> If you add /home/rossberg/bin/brlcad/lib/itk3.4/ to LD_LIBRARY_PATH does it then work?</p>",
        "id": 231520446,
        "sender_full_name": "starseeker",
        "timestamp": 1616524426
    },
    {
        "content": "<p>Yes, with <code>LD_LIBRARY_PATH=/home/rossberg/bin/brlcad/lib/itk3.4 mged</code> mged starts.</p>",
        "id": 231521215,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616524695
    },
    {
        "content": "<p>Huh.  When I do ldd I get:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ldd /usr/brlcad/dev-7.32.3/bin/mged\n    linux-vdso.so.1 (0x00007fff21955000)\n    libtclcad.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libtclcad.so.20 (0x00007f733b84f000)\n    libged.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libged.so.20 (0x00007f733b7da000)\n    libwdb.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libwdb.so.20 (0x00007f733b7c8000)\n    libdm.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libdm.so.20 (0x00007f733b776000)\n    libtermio.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libtermio.so.20 (0x00007f733b770000)\n    librt.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/librt.so.20 (0x00007f733b0cd000)\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f733aeac000)\n    libpkg.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libpkg.so.20 (0x00007f733aea1000)\n    libnmg.so =&gt; /usr/brlcad/dev-7.32.3/lib/libnmg.so (0x00007f733ad2e000)\n    libbn.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libbn.so.20 (0x00007f733ac0b000)\n    libtcl8.6.so =&gt; /lib/x86_64-linux-gnu/libtcl8.6.so (0x00007f733aa4f000)\n    libtk8.6.so =&gt; /lib/x86_64-linux-gnu/libtk8.6.so (0x00007f733a8df000)\n    libbu.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libbu.so.20 (0x00007f73380f7000)\n    libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f7337fa8000)\n    libGL.so.1 =&gt; /lib/x86_64-linux-gnu/libGL.so.1 (0x00007f7337f20000)\n    libicv.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libicv.so.20 (0x00007f7337f0d000)\n    libbg.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libbg.so.20 (0x00007f7337d49000)\n    libpng16.so.16 =&gt; /lib/x86_64-linux-gnu/libpng16.so.16 (0x00007f7337d11000)\n    libstdc++.so.6 =&gt; /lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f7337b2e000)\n    libanalyze.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libanalyze.so.20 (0x00007f73379c3000)\n    libopenNURBS.so.2012.10.245 =&gt; /usr/brlcad/dev-7.32.3/lib/libopenNURBS.so.2012.10.245 (0x00007f73374ee000)\n    libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f73374d3000)\n    libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f73374b0000)\n    libbrep.so.20 =&gt; /usr/brlcad/dev-7.32.3/lib/libbrep.so.20 (0x00007f73371bf000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007f733ba37000)\n    libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f73371b9000)\n    libz.so.1 =&gt; /lib/x86_64-linux-gnu/libz.so.1 (0x00007f733719d000)\n    libXft.so.2 =&gt; /lib/x86_64-linux-gnu/libXft.so.2 (0x00007f7337184000)\n    libfontconfig.so.1 =&gt; /lib/x86_64-linux-gnu/libfontconfig.so.1 (0x00007f733713d000)\n    libX11.so.6 =&gt; /lib/x86_64-linux-gnu/libX11.so.6 (0x00007f7336ffe000)\n    libXss.so.1 =&gt; /lib/x86_64-linux-gnu/libXss.so.1 (0x00007f7336ff9000)\n    libuuid.so.1 =&gt; /lib/x86_64-linux-gnu/libuuid.so.1 (0x00007f7336ff0000)\n    libGLdispatch.so.0 =&gt; /lib/x86_64-linux-gnu/libGLdispatch.so.0 (0x00007f7336f38000)\n    libGLX.so.0 =&gt; /lib/x86_64-linux-gnu/libGLX.so.0 (0x00007f7336f04000)\n    libnetpbm.so =&gt; /usr/brlcad/dev-7.32.3/lib/libnetpbm.so (0x00007f7336ec8000)\n    libpoly2tri.so =&gt; /usr/brlcad/dev-7.32.3/lib/libpoly2tri.so (0x00007f7336e96000)\n    libfreetype.so.6 =&gt; /lib/x86_64-linux-gnu/libfreetype.so.6 (0x00007f7336dd7000)\n    libXrender.so.1 =&gt; /lib/x86_64-linux-gnu/libXrender.so.1 (0x00007f7336bcd000)\n    libexpat.so.1 =&gt; /lib/x86_64-linux-gnu/libexpat.so.1 (0x00007f7336b9f000)\n    libxcb.so.1 =&gt; /lib/x86_64-linux-gnu/libxcb.so.1 (0x00007f7336b73000)\n    libXext.so.6 =&gt; /lib/x86_64-linux-gnu/libXext.so.6 (0x00007f7336b5e000)\n    libXau.so.6 =&gt; /lib/x86_64-linux-gnu/libXau.so.6 (0x00007f7336b58000)\n    libXdmcp.so.6 =&gt; /lib/x86_64-linux-gnu/libXdmcp.so.6 (0x00007f7336b50000)\n    libbsd.so.0 =&gt; /lib/x86_64-linux-gnu/libbsd.so.0 (0x00007f7336b36000)\n</code></pre></div>",
        "id": 231521360,
        "sender_full_name": "starseeker",
        "timestamp": 1616524755
    },
    {
        "content": "<p>No entry for <a href=\"http://libitk3.4.so\">libitk3.4.so</a>?</p>",
        "id": 231521648,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616524875
    },
    {
        "content": "<p>No, nor for itcl</p>",
        "id": 231521973,
        "sender_full_name": "starseeker",
        "timestamp": 1616525014
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> I'm very curious that you're getting library linkage between Itcl/Itk and MGED... that should have been changed.</p>",
        "id": 231536758,
        "sender_full_name": "starseeker",
        "timestamp": 1616530633
    },
    {
        "content": "<p>The Itcl/Itk users should be doing \"package require\" now to load them...</p>",
        "id": 231536787,
        "sender_full_name": "starseeker",
        "timestamp": 1616530654
    },
    {
        "content": "<p>I'll see if I can set up a Debian buster VM...</p>",
        "id": 231536924,
        "sender_full_name": "starseeker",
        "timestamp": 1616530708
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102939\">@Daniel Rossberg</span> I found where ITK_LIBRARY was still being listed as an MGED linkage.  My current guess is Ubuntu's gcc 9.3 figured out not to list it as a link dependency, and the older gcc 8 in Debian may not have (or maybe some other component of the respective tool chains.)  The VM install of Debian is taking a while - I went ahead and committed a removal of the ITK linkage, so that may address the problem you were seeing.</p>",
        "id": 231561722,
        "sender_full_name": "starseeker",
        "timestamp": 1616543646
    },
    {
        "content": "<p>The build with the current extbuild branch created a mged, which I could start, do a rt, etc.. Promising :)</p>",
        "id": 231596591,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1616573712
    },
    {
        "content": "<p>Excellent!  I'll try the current extbuild on OpenBSD - if that works I'll go ahead and re-merge.</p>",
        "id": 231630053,
        "sender_full_name": "starseeker",
        "timestamp": 1616591331
    },
    {
        "content": "<p>There we go.  Got success on OpenBSD.</p>",
        "id": 231678929,
        "sender_full_name": "starseeker",
        "timestamp": 1616608164
    },
    {
        "content": "<p>well, shoot, you one-upped my fbsd for esoteric, I'm gonna have to dredge up something weird to compete...</p>",
        "id": 231725523,
        "sender_full_name": "Erik",
        "timestamp": 1616628481
    },
    {
        "content": "<p>Heh.  If you try Haiku you get to fix it.</p>",
        "id": 231729641,
        "sender_full_name": "starseeker",
        "timestamp": 1616631220
    },
    {
        "content": "<p>is haiku still around? :D maybe mezzano... or movitz if it's still around... :D</p>",
        "id": 231798167,
        "sender_full_name": "Erik",
        "timestamp": 1616678262
    },
    {
        "content": "<p>/me checks mezzano's website...</p>",
        "id": 231799289,
        "sender_full_name": "starseeker",
        "timestamp": 1616678732
    },
    {
        "content": "<p>&lt;snort&gt;  Trust you to think of that one.  Now all you need is a C++ to lisp compiler....</p>",
        "id": 231799417,
        "sender_full_name": "starseeker",
        "timestamp": 1616678771
    },
    {
        "content": "<p>We're close(ish) to building on Haiku, but last time I tried there were some rather thorny issues I didn't have time to try and sort out</p>",
        "id": 231799557,
        "sender_full_name": "starseeker",
        "timestamp": 1616678835
    },
    {
        "content": "<p>my life is way hpc these days, with linux and windows being the two I care about :/ (although this place has used fbsd before and digs it.. buncha academic doctorate types, all our docs are written in 'latex')</p>",
        "id": 231800089,
        "sender_full_name": "Erik",
        "timestamp": 1616679023
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"103542\">Erik</span> <a href=\"#narrow/stream/104062-general/topic/BRL-CAD/near/231798167\">said</a>:</p>\n<blockquote>\n<p>is haiku still around? :D maybe mezzano... or movitz if it's still around... :D</p>\n</blockquote>\n<p>Yep, they're still around and doing pretty well.</p>",
        "id": 231876409,
        "sender_full_name": "Sean",
        "timestamp": 1616706554
    },
    {
        "content": "<p>Is there a simple explanation why <a href=\"/user_uploads/1549/wYoFMvXpYZQDCO2B5740rIHL/eccentered_cube.g\">eccentered_cube.g</a> has negative moments of inertia? (computed with <code>gqa -g 1 eccentered_cube.g all.g</code>)</p>",
        "id": 250940238,
        "sender_full_name": "Daniel Rossberg",
        "timestamp": 1630074758
    },
    {
        "content": "<p>Hm, no idea comes immediately to mind as being reasonable.  It crashed on a quick test I did, so there may be a bug.  Recompiling a debug build to check -- that crash was on a very old binary, not a controlled testing setup.</p>",
        "id": 251491318,
        "sender_full_name": "Sean",
        "timestamp": 1630464234
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> the libnmg commit is rather concerning given we have bupkis testing there...  biggest red flags in extrude.c, inter.c, mod.c, pt_fu.c, and tri.c..  I see how most of those instances are unused, but at least a couple seemed to be likely bugs and with the lines of code gone, that's no longer apparent.  I get it made clang happy, but it looks even harder to debug.</p>",
        "id": 255449017,
        "sender_full_name": "Sean",
        "timestamp": 1632939946
    },
    {
        "content": "<p>I know you already try to avoid debugging nmg ... so this feels a little self-fulfilling prophecy, by making it even harder.  heh.</p>",
        "id": 255449677,
        "sender_full_name": "Sean",
        "timestamp": 1632940183
    },
    {
        "content": "<p>I mean, take a look at extrude.c .. the section commented out is identical to the block above it.  Conceptually I think I get that it's looking at splitting an edge between two points, and the second block is just looking at the points in reverse order.  So I'm not sure why clang would complain about the second but not the first... and the intent seems to be to pick/set the first point, and that's apparently not happening right.</p>",
        "id": 255450132,
        "sender_full_name": "Sean",
        "timestamp": 1632940337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> If you want to restore the ones you think indicate possible bugs I'm fine with that.</p>",
        "id": 255492838,
        "sender_full_name": "starseeker",
        "timestamp": 1632958540
    },
    {
        "content": "<p>A couple probably, but that will certainly break the clang linting now that it's strict (or are you suggesting that get relaxed back too?) at least until a unit test or other test case is set up that pokes that code specifically.</p>",
        "id": 255524629,
        "sender_full_name": "Sean",
        "timestamp": 1632983545
    },
    {
        "content": "<p>Would be super interesting to see a code coverage map on libnmg after a conversion is run...</p>",
        "id": 255524646,
        "sender_full_name": "Sean",
        "timestamp": 1632983569
    },
    {
        "content": "<p>Yes, we'll flip the libnmg back to being a failing test until the problems are addressed satisfactorily.  A lib is \"cleantest\" if it's expected to pass, but libnmg won't be once we revert.</p>",
        "id": 255564636,
        "sender_full_name": "starseeker",
        "timestamp": 1633005112
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> Is this normal? <a href=\"/user_uploads/1549/mGM_ypeP8ZbTILJ8Nket6PvV/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/1549/mGM_ypeP8ZbTILJ8Nket6PvV/image.png\" title=\"image.png\"><img src=\"/user_uploads/1549/mGM_ypeP8ZbTILJ8Nket6PvV/image.png\"></a></div>",
        "id": 259704220,
        "sender_full_name": "Thusal Ranawaka",
        "timestamp": 1635559878
    },
    {
        "content": "<p>I just tried to install MGED from the setup in Sourceforge, but shows this.</p>",
        "id": 259704226,
        "sender_full_name": "Thusal Ranawaka",
        "timestamp": 1635559912
    },
    {
        "content": "<p>Now it worked when I tried from the .msi setup.</p>",
        "id": 259704399,
        "sender_full_name": "Thusal Ranawaka",
        "timestamp": 1635560180
    },
    {
        "content": "<p>I’m guessing security settings prevented you from running an app downloaded</p>",
        "id": 259743154,
        "sender_full_name": "Sean",
        "timestamp": 1635616293
    },
    {
        "content": "<p>We need to figure out how to sign our binaries for Mac and Windows</p>",
        "id": 259743201,
        "sender_full_name": "Sean",
        "timestamp": 1635616330
    },
    {
        "content": "<p>Yes</p>",
        "id": 259759971,
        "sender_full_name": "Thusal Ranawaka",
        "timestamp": 1635640343
    },
    {
        "content": "<p>Hi, my name is Roshan Swain. I am interested in contributing to BRL-CAD and learn more about high performance computing and graphics. Can someone help me to get started with BRL-CAD? Also, it will be very helpful if you could point to some good first issues to get started with BRL-CAD.</p>",
        "id": 262447187,
        "sender_full_name": "Roshan Swain",
        "timestamp": 1637669583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459526\">Roshan Swain</span> <a href=\"#narrow/stream/104062-general/topic/BRL-CAD/near/262447187\">said</a>:</p>\n<blockquote>\n<p>Hi, my name is Roshan Swain. I am interested in contributing to BRL-CAD and learn more about high performance computing and graphics. Can someone help me to get started with BRL-CAD? Also, it will be very helpful if you could point to some good first issues to get started with BRL-CAD.</p>\n</blockquote>\n<p>Hello <span class=\"user-mention\" data-user-id=\"459526\">@Roshan Swain</span> Head towards <a href=\"https://github.com/BRL-CAD/brlcad\">https://github.com/BRL-CAD/brlcad</a> and build it. You can hover around MGED <a href=\"https://brlcad.org/w/images/c/cf/Introduction_to_MGED.pdf\">https://brlcad.org/w/images/c/cf/Introduction_to_MGED.pdf</a>.</p>",
        "id": 262477692,
        "sender_full_name": "Himanshu",
        "timestamp": 1637684284
    }
]