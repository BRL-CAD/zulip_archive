[
    {
        "content": "<p>Not quite sure yet how useful this might end up being, but just found out that the Co3Ne surface reconstruction method from <a href=\"https://github.com/BrunoLevy/geogram\">https://github.com/BrunoLevy/geogram</a> comes far closer than any method I've ever tried before to constructing a valid mesh from a point cloud generated from the of the super-thin havoc armor solids.</p>",
        "id": 313427029,
        "sender_full_name": "starseeker",
        "timestamp": 1669957029
    },
    {
        "content": "<p>don't know about their meshing, but their automatic parameterization and texturing features look very impressive</p>",
        "id": 313427317,
        "sender_full_name": "Sean",
        "timestamp": 1669957269
    },
    {
        "content": "<p>what's the use case for surface reconstruction?  to get more into point cloud data?  for nurbs, it wouldn't make sense (to me at least) to throw away the associativity that is already known except maybe as a last resort or maybe for tessellating a single surface that failed otherwise</p>",
        "id": 313427436,
        "sender_full_name": "Sean",
        "timestamp": 1669957367
    },
    {
        "content": "<p>The use case is the last restore fallback in facetize - what we're using SPSR for right now</p>",
        "id": 313497014,
        "sender_full_name": "starseeker",
        "timestamp": 1669986947
    },
    {
        "content": "<p>I don't know if it'd be a viable all-up replacement for SPSR for that case, or useful in the cases where SPSR can't do anything reasonable - might be worth an experiment.</p>",
        "id": 313497194,
        "sender_full_name": "starseeker",
        "timestamp": 1669986996
    },
    {
        "content": "<p>They've got SPSR too, looks like, so either way they might be a viable alternative to our embedded SPSR code.</p>",
        "id": 313497416,
        "sender_full_name": "starseeker",
        "timestamp": 1669987082
    },
    {
        "content": "<p>Need to be a little careful to make sure I've got all the non-commercial and/or incompatibly licensed bits of geogram off/removed, but so far it's looking like the key features of interest are still viable without any of those components.  Their cmake/platforms logic looks like it's crying out to be replaced with configure time testing...</p>",
        "id": 313537291,
        "sender_full_name": "starseeker",
        "timestamp": 1669998535
    },
    {
        "content": "<p>Although if we can use a vanilla build sans non-commercial elements that'll be moot</p>",
        "id": 313537416,
        "sender_full_name": "starseeker",
        "timestamp": 1669998571
    }
]