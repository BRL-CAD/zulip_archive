[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"102902\">Sean</span> <a href=\"#narrow/stream/104062-general/topic/png.20support.20in.20vol.20primitive/near/209593203\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112516\">starseeker</span> so an issue you might be able to help sort out... ran into a problem creating an image-to-geometry plugin for libgcv that  hadn't been fully considered when the mime stuff was put in place.  gcv's interface technically only handles \"bu_mime_model\" types or \"unknown\"/\"auto\".   that type/grouping limitation is technically wrong, and is compounded considering one might want to create geometry off of other types (e.g., excel spreadsheet or something).</p>\n</blockquote>\n<p>That doesn't surprise me, actually - I think the mime stuff was me, and I'm pretty sure I didn't consider a non-model to model mapping when I set it up.</p>",
        "id": 209628168,
        "sender_full_name": "starseeker",
        "timestamp": 1599739418
    },
    {
        "content": "<p>If we want an anything to anything mapping, probably the thing to do is to not use the category typing at all, but just assemble a more generalized mapping setup... hmm...</p>",
        "id": 209628517,
        "sender_full_name": "starseeker",
        "timestamp": 1599739642
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112516\">@starseeker</span> you mean like instead of using  enums, doing something dictionary-based?</p>",
        "id": 209635617,
        "sender_full_name": "Sean",
        "timestamp": 1599743215
    },
    {
        "content": "<p>could see something string-based work, maybe where we just stash all the mime.types mappings into a std::map&lt;std::string, std::list&lt;std::string&gt; internally and expose that through a search/lookup call using string matching.  completely alternatively, could stick with the enums, but just have on honking enum list all of the same type.  hm.</p>",
        "id": 209636228,
        "sender_full_name": "Sean",
        "timestamp": 1599743506
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"102902\">@Sean</span> I made a quick stab at generalizing in r77099</p>",
        "id": 209653156,
        "sender_full_name": "starseeker",
        "timestamp": 1599748192
    },
    {
        "content": "<p>Shouldn't be merged to RELEASE, but conveys the idea</p>",
        "id": 209653236,
        "sender_full_name": "starseeker",
        "timestamp": 1599748218
    },
    {
        "content": "<p>yeah, this isn't needed for release, just came up yesterday helping set up an example plugin</p>",
        "id": 209653320,
        "sender_full_name": "Sean",
        "timestamp": 1599748257
    },
    {
        "content": "<p>That's a real quick run at it - having to do paperwork fun today and probably tomorrow, so couldn't test more extensively.</p>",
        "id": 209653423,
        "sender_full_name": "starseeker",
        "timestamp": 1599748303
    },
    {
        "content": "<p>On the plus side, I doubt I'll be stacking up too many more commits for you to review ;-)</p>",
        "id": 209653535,
        "sender_full_name": "starseeker",
        "timestamp": 1599748325
    },
    {
        "content": "<p>no worries, I'm waist-deep in training checking off the last remaining commits in between the reboots and slow dialog</p>",
        "id": 209653615,
        "sender_full_name": "Sean",
        "timestamp": 1599748361
    },
    {
        "content": "<p>/me may finally have found the threshold for \"committing too often\"</p>",
        "id": 209654035,
        "sender_full_name": "starseeker",
        "timestamp": 1599748524
    },
    {
        "content": "<p>nah, it's just our/my review methods need to adapt better to higher frequency and bursts</p>",
        "id": 209654906,
        "sender_full_name": "Sean",
        "timestamp": 1599748628
    },
    {
        "content": "<p>95% of commits are trivially reviewed and can be checked off.  really need something (other than inbox) that will help keep track of just that 5% that beg closer inspection</p>",
        "id": 209655121,
        "sender_full_name": "Sean",
        "timestamp": 1599748699
    },
    {
        "content": "<p>/me is really behind the curve when it comes to the latest and greatest of github, in many ways...</p>",
        "id": 209655795,
        "sender_full_name": "starseeker",
        "timestamp": 1599748928
    },
    {
        "content": "<p>If they don't have a commit inspection/tracking UI, that would sure be a logical next step...</p>",
        "id": 209671738,
        "sender_full_name": "starseeker",
        "timestamp": 1599754931
    },
    {
        "content": "<p>I should have guessed... they're set up entirely around pre-merge commit reviews</p>",
        "id": 209697819,
        "sender_full_name": "starseeker",
        "timestamp": 1599766419
    },
    {
        "content": "<p>Hmm... <a href=\"https://github.com/jez/auditors-webhook\">https://github.com/jez/auditors-webhook</a></p>",
        "id": 209698611,
        "sender_full_name": "starseeker",
        "timestamp": 1599766749
    },
    {
        "content": "<p>there are pre-merge and post-merge review options.  all of them integrate with git, several of them integrate with github</p>",
        "id": 209737483,
        "sender_full_name": "Sean",
        "timestamp": 1599794442
    }
]